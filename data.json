[
{
"commit_sha":"d87149986918ab3b1ed8a0e8b62f23371edae351",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmQ4NzE0OTk4NjkxOGFiM2IxZWQ4YTBlOGI2MmYyMzM3MWVkYWUzNTE=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/d87149986918ab3b1ed8a0e8b62f23371edae351",
"commit_date":"2021-03-31T02:35:15Z",
"files":[
{
"sha":"49b710ab0f114eb09aa532e9e5ac5e890fd894e7",
"filename":"chaincode/enrollAdmin.js",
"status":"added",
"additions":56,
"deletions":0,
"changes":56,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/d87149986918ab3b1ed8a0e8b62f23371edae351/chaincode/enrollAdmin.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/d87149986918ab3b1ed8a0e8b62f23371edae351/chaincode/enrollAdmin.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/enrollAdmin.js?ref=d87149986918ab3b1ed8a0e8b62f23371edae351",
"patch":"@@ -0,0 +1,56 @@\n+/*\n+ * Copyright IBM Corp. All Rights Reserved.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const FabricCAServices = require('fabric-ca-client');\n+const { Wallets } = require('fabric-network');\n+const fs = require('fs');\n+const path = require('path');\n+\n+async function main() {\n+    try {\n+        // load the network configuration\n+        const ccpPath = path.resolve(__dirname, '..', '..', 'test-network', 'organizations', 'peerOrganizations', 'org1.example.com', 'connection-org1.json');\n+        const ccp = JSON.parse(fs.readFileSync(ccpPath, 'utf8'));\n+\n+        // Create a new CA client for interacting with the CA.\n+        const caInfo = ccp.certificateAuthorities['ca.org1.example.com'];\n+        const caTLSCACerts = caInfo.tlsCACerts.pem;\n+        const ca = new FabricCAServices(caInfo.url, { trustedRoots: caTLSCACerts, verify: false }, caInfo.caName);\n+\n+        // Create a new file system based wallet for managing identities.\n+        const walletPath = path.join(process.cwd(), 'wallet');\n+        const wallet = await Wallets.newFileSystemWallet(walletPath);\n+        console.log(`Wallet path: ${walletPath}`);\n+\n+        // Check to see if we've already enrolled the admin user.\n+        const identity = await wallet.get('admin');\n+        if (identity) {\n+            console.log('An identity for the admin user \"admin\" already exists in the wallet');\n+            return;\n+        }\n+\n+        // Enroll the admin user, and import the new identity into the wallet.\n+        const enrollment = await ca.enroll({ enrollmentID: 'admin', enrollmentSecret: 'adminpw' });\n+        const x509Identity = {\n+            credentials: {\n+                certificate: enrollment.certificate,\n+                privateKey: enrollment.key.toBytes(),\n+            },\n+            mspId: 'Org1MSP',\n+            type: 'X.509',\n+        };\n+        await wallet.put('admin', x509Identity);\n+        console.log('Successfully enrolled admin user \"admin\" and imported it into the wallet');\n+\n+    } catch (error) {\n+        console.error(`Failed to enroll admin user \"admin\": ${error}`);\n+        process.exit(1);\n+    }\n+}\n+\n+main();"
},
{
"sha":"2cf82fbd6769a162445a00235bcb96bf0a76fc8e",
"filename":"chaincode/network/monitordocker.sh",
"status":"added",
"additions":31,
"deletions":0,
"changes":31,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/d87149986918ab3b1ed8a0e8b62f23371edae351/chaincode/network/monitordocker.sh",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/d87149986918ab3b1ed8a0e8b62f23371edae351/chaincode/network/monitordocker.sh",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/network/monitordocker.sh?ref=d87149986918ab3b1ed8a0e8b62f23371edae351",
"patch":"@@ -0,0 +1,31 @@\n+#!/bin/bash\n+\n+# This script uses the logspout and http stream tools to let you watch the docker containers\n+# in action.\n+#\n+# More information at https://github.com/gliderlabs/logspout/tree/master/httpstream\n+\n+if [ -z \"$1\" ]; then\n+   DOCKER_NETWORK=basicnetwork_basic\n+else\n+   DOCKER_NETWORK=\"$1\"\n+fi\n+\n+if [ -z \"$2\" ]; then\n+   PORT=8000\n+else\n+   PORT=\"$2\"\n+fi\n+\n+echo Starting monitoring on all containers on the network ${DOCKER_NETWORK}\n+\n+docker kill logspout 2> /dev/null 1>&2 || true\n+docker rm logspout 2> /dev/null 1>&2 || true\n+\n+docker run -d --name=\"logspout\" \\\n+\t--volume=/var/run/docker.sock:/var/run/docker.sock \\\n+\t--publish=127.0.0.1:${PORT}:80 \\\n+\t--network  ${DOCKER_NETWORK} \\\n+\tgliderlabs/logspout\n+sleep 3\n+curl http://127.0.0.1:${PORT}/logs"
},
{
"sha":"c1bc2313c15977f948fc50c244e8bd3c4530a4b8",
"filename":"chaincode/network/networkDown.sh",
"status":"added",
"additions":18,
"deletions":0,
"changes":18,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/d87149986918ab3b1ed8a0e8b62f23371edae351/chaincode/network/networkDown.sh",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/d87149986918ab3b1ed8a0e8b62f23371edae351/chaincode/network/networkDown.sh",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/network/networkDown.sh?ref=d87149986918ab3b1ed8a0e8b62f23371edae351",
"patch":"@@ -0,0 +1,18 @@\n+#!/bin/bash\n+#\n+# Copyright IBM Corp All Rights Reserved\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+#\n+# Exit on first error\n+set -ex\n+\n+# Bring the test network down\n+pushd ../test-network\n+./network.sh down\n+popd\n+\n+# clean out any old identites in the wallets\n+rm -rf javascript/wallet/*\n+rm -rf java/wallet/*\n+rm -rf typescript/wallet/*"
},
{
"sha":"3facb4db4fe614d5adc12147b94ce0bf13012896",
"filename":"chaincode/network/startFabric.sh",
"status":"added",
"additions":128,
"deletions":0,
"changes":128,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/d87149986918ab3b1ed8a0e8b62f23371edae351/chaincode/network/startFabric.sh",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/d87149986918ab3b1ed8a0e8b62f23371edae351/chaincode/network/startFabric.sh",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/network/startFabric.sh?ref=d87149986918ab3b1ed8a0e8b62f23371edae351",
"patch":"@@ -0,0 +1,128 @@\n+#!/bin/bash\n+#\n+# Copyright IBM Corp All Rights Reserved\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+#\n+# Exit on first error\n+set -e\n+\n+# don't rewrite paths for Windows Git Bash users\n+export MSYS_NO_PATHCONV=1\n+starttime=$(date +%s)\n+CC_SRC_LANGUAGE=${1:-\"go\"}\n+CC_SRC_LANGUAGE=`echo \"$CC_SRC_LANGUAGE\" | tr [:upper:] [:lower:]`\n+\n+if [ \"$CC_SRC_LANGUAGE\" = \"go\" -o \"$CC_SRC_LANGUAGE\" = \"golang\" ] ; then\n+\tCC_SRC_PATH=\"../chaincode/fabcar/go/\"\n+elif [ \"$CC_SRC_LANGUAGE\" = \"javascript\" ]; then\n+\tCC_SRC_PATH=\"../chaincode/EVCharger/javascript/\"\n+elif [ \"$CC_SRC_LANGUAGE\" = \"java\" ]; then\n+\tCC_SRC_PATH=\"../chaincode/fabcar/java\"\n+elif [ \"$CC_SRC_LANGUAGE\" = \"typescript\" ]; then\n+\tCC_SRC_PATH=\"../chaincode/fabcar/typescript/\"\n+else\n+\techo The chaincode language ${CC_SRC_LANGUAGE} is not supported by this script\n+\techo Supported chaincode languages are: go, java, javascript, and typescript\n+\texit 1\n+fi\n+\n+# clean out any old identites in the wallets\n+rm -rf javascript/wallet/*\n+rm -rf java/wallet/*\n+rm -rf typescript/wallet/*\n+rm -rf go/wallet/*\n+\n+# launch network; create channel and join peer to channel\n+pushd ../test-network\n+./network.sh down\n+./network.sh up createChannel -ca -s couchdb\n+./network.sh deployCC -ccn EVCharger -ccv 1 -cci initLedger -ccl ${CC_SRC_LANGUAGE} -ccp ${CC_SRC_PATH}\n+popd\n+\n+cat <<EOF\n+\n+Total setup execution time : $(($(date +%s) - starttime)) secs ...\n+\n+Next, use the EVCharger applications to interact with the deployed EVCharger contract.\n+The EVCharger applications are available in multiple programming languages.\n+Follow the instructions for the programming language of your choice:\n+\n+JavaScript:\n+\n+  Start by changing into the \"javascript\" directory:\n+    cd javascript\n+\n+  Next, install all required packages:\n+    npm install\n+\n+  Then run the following applications to enroll the admin user, and register a new user\n+  called appUser which will be used by the other applications to interact with the deployed\n+  EVCharger contract:\n+    node enrollAdmin\n+    node registerUser\n+\n+  You can run the invoke application as follows. By default, the invoke application will\n+  create a new car, but you can update the application to submit other transactions:\n+    node invoke\n+\n+  You can run the query application as follows. By default, the query application will\n+  return all cars, but you can update the application to evaluate other transactions:\n+    node query\n+\n+TypeScript:\n+\n+  Start by changing into the \"typescript\" directory:\n+    cd typescript\n+\n+  Next, install all required packages:\n+    npm install\n+\n+  Next, compile the TypeScript code into JavaScript:\n+    npm run build\n+\n+  Then run the following applications to enroll the admin user, and register a new user\n+  called appUser which will be used by the other applications to interact with the deployed\n+  EVCharger contract:\n+    node dist/enrollAdmin\n+    node dist/registerUser\n+\n+  You can run the invoke application as follows. By default, the invoke application will\n+  create a new car, but you can update the application to submit other transactions:\n+    node dist/invoke\n+\n+  You can run the query application as follows. By default, the query application will\n+  return all cars, but you can update the application to evaluate other transactions:\n+    node dist/query\n+\n+Java:\n+\n+  Start by changing into the \"java\" directory:\n+    cd java\n+\n+  Then, install dependencies and run the test using:\n+    mvn test\n+\n+  The test will invoke the sample client app which perform the following:\n+    - Enroll admin and appUser and import them into the wallet (if they don't already exist there)\n+    - Submit a transaction to create a new car\n+    - Evaluate a transaction (query) to return details of this car\n+    - Submit a transaction to change the owner of this car\n+    - Evaluate a transaction (query) to return the updated details of this car\n+\n+Go:\n+\n+  Start by changing into the \"go\" directory:\n+    cd go\n+\n+  Then, install dependencies and run the test using:\n+    go run EVCharger.go\n+\n+  The test will invoke the sample client app which perform the following:\n+    - Import user credentials into the wallet (if they don't already exist there)\n+    - Submit a transaction to create a new car\n+    - Evaluate a transaction (query) to return details of this car\n+    - Submit a transaction to change the owner of this car\n+    - Evaluate a transaction (query) to return the updated details of this car\n+\n+EOF"
}
]
},
{
"commit_sha":"fab798f2a591bc6593a3a8c150eec4db54d1d62b",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmZhYjc5OGYyYTU5MWJjNjU5M2EzYThjMTUwZWVjNGRiNTRkMWQ2MmI=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/fab798f2a591bc6593a3a8c150eec4db54d1d62b",
"commit_date":"2021-03-18T13:00:20Z",
"files":[
{
"sha":"aa4231fbdb2269660c8fdf02d26624820425be5b",
"filename":"README.md",
"status":"modified",
"additions":5,
"deletions":3,
"changes":8,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fab798f2a591bc6593a3a8c150eec4db54d1d62b/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fab798f2a591bc6593a3a8c150eec4db54d1d62b/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=fab798f2a591bc6593a3a8c150eec4db54d1d62b",
"patch":"@@ -1,10 +1,12 @@\n # Electric Vehicle Charger Registry\n \n <h2> Project Description </h2>\n-A blockchain registry for  Electric Vehicle Charging Stations. The system will track, manage and enable accurate and reliable \n-data sharing on an open platform where operators provide stations to serve owners of electric vehicles and all \n+A blockchain registry for  Electric Vehicle Charging Stations. The system will track, manage and enable accurate and \n+reliable data sharing on an open platform where operators provide stations to serve owners of electric vehicles and all \n the participants are protected from unfair practises. To learn more about the governance of this project, click here: \n-[Governance Framework](https://github.com/trungrockyngo/EVChargerReg/blob/main/documentation/EVCGoveranceFramework.md)\n+\n+[Governance Framework](documentation/EVCGoveranceFramework.md)\n+\n <hr>\n <h2> Network participants </h2>\n <ol>"
}
]
},
{
"commit_sha":"d5183b8db8dd3bf826effeb5abb5052c8c5b1376",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmQ1MTgzYjhkYjhkZDNiZjgyNmVmZmViNWFiYjUwNTJjOGM1YjEzNzY=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/d5183b8db8dd3bf826effeb5abb5052c8c5b1376",
"commit_date":"2021-03-18T12:53:17Z",
"files":[
{
"sha":"5c1c48cf6157bf175f0be0f08bfda50fbc495ab7",
"filename":"README.md",
"status":"modified",
"additions":1,
"deletions":2,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/d5183b8db8dd3bf826effeb5abb5052c8c5b1376/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/d5183b8db8dd3bf826effeb5abb5052c8c5b1376/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=d5183b8db8dd3bf826effeb5abb5052c8c5b1376",
"patch":"@@ -4,8 +4,7 @@\n A blockchain registry for  Electric Vehicle Charging Stations. The system will track, manage and enable accurate and reliable \n data sharing on an open platform where operators provide stations to serve owners of electric vehicles and all \n the participants are protected from unfair practises. To learn more about the governance of this project, click here: \n-<a href=\"[Governance Framework](documentation/EVCGoveranceFramework.md)\">Governance Framework</a>\n-\n+[Governance Framework](https://github.com/trungrockyngo/EVChargerReg/blob/main/documentation/EVCGoveranceFramework.md)\n <hr>\n <h2> Network participants </h2>\n <ol>"
}
]
},
{
"commit_sha":"1f561562831ccc79d59b6bf79bd6a25f37f533cf",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjFmNTYxNTYyODMxY2NjNzlkNTliNmJmNzliZDZhMjVmMzdmNTMzY2Y=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/1f561562831ccc79d59b6bf79bd6a25f37f533cf",
"commit_date":"2021-03-18T12:39:39Z",
"files":[
{
"sha":"ac45ba99f186a32f8cc8f36c1bb54c02c643250d",
"filename":"README.md",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/1f561562831ccc79d59b6bf79bd6a25f37f533cf/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/1f561562831ccc79d59b6bf79bd6a25f37f533cf/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=1f561562831ccc79d59b6bf79bd6a25f37f533cf",
"patch":"@@ -4,7 +4,7 @@\n A blockchain registry for  Electric Vehicle Charging Stations. The system will track, manage and enable accurate and reliable \n data sharing on an open platform where operators provide stations to serve owners of electric vehicles and all \n the participants are protected from unfair practises. To learn more about the governance of this project, click here: \n-[Governance Framework](documentation/EVCGoveranceFramework.md)\n+<a href=\"[Governance Framework](documentation/EVCGoveranceFramework.md)\">Governance Framework</a>\n \n <hr>\n <h2> Network participants </h2>"
}
]
},
{
"commit_sha":"34557a7504560b017b860c859dd96490e97501ab",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjM0NTU3YTc1MDQ1NjBiMDE3Yjg2MGM4NTlkZDk2NDkwZTk3NTAxYWI=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/34557a7504560b017b860c859dd96490e97501ab",
"commit_date":"2021-03-18T12:32:11Z",
"files":[
{
"sha":"4984278dfe37ab396a5a20fe55d9d58ad537a2e5",
"filename":"README.md",
"status":"modified",
"additions":7,
"deletions":4,
"changes":11,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/34557a7504560b017b860c859dd96490e97501ab/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/34557a7504560b017b860c859dd96490e97501ab/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=34557a7504560b017b860c859dd96490e97501ab",
"patch":"@@ -2,7 +2,10 @@\n \n <h2> Project Description </h2>\n A blockchain registry for  Electric Vehicle Charging Stations. The system will track, manage and enable accurate and reliable \n-data sharing on an open platform where operators provide stations to serve owners of electric vehicles and all the participants are protected from unfair practises.\n+data sharing on an open platform where operators provide stations to serve owners of electric vehicles and all \n+the participants are protected from unfair practises. To learn more about the governance of this project, click here: \n+[Governance Framework](documentation/EVCGoveranceFramework.md)\n+\n <hr>\n <h2> Network participants </h2>\n <ol>\n@@ -195,11 +198,11 @@ growing Electric Vehicle Owners.\n ---\n <h2> Blockchain Architectural Diagrams </h2>\n \n-![alt text](documentation/IOTRegStateDiagram.png?raw=true) <br>\n+![State Diagram](documentation/IOTRegStateDiagram.png?raw=true) <br>\n \n-![alt text](documentation/EVCharger-HLF.png?raw=true) <br>\n+![HLF Diagram](documentation/EVCharger-HLF.png?raw=true) <br>\n \n-![alt text](documentation/BlockchainArchitecture.png?raw=true) <br>\n+![Blockchain Architetcture](documentation/BlockchainArchitecture.png?raw=true) <br>\n \n ---\n <h2> BACKEND \u2013 RESTful API endpoints </h2>"
}
]
},
{
"commit_sha":"8e93503fa3e42a53938dedc3df667b2383f37092",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjhlOTM1MDNmYTNlNDJhNTM5MzhkZWRjM2RmNjY3YjIzODNmMzcwOTI=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/8e93503fa3e42a53938dedc3df667b2383f37092",
"commit_date":"2021-03-17T06:26:17Z",
"files":[
{
"sha":"3d92205a3aece59c730e1d21cdd885ccd6798190",
"filename":"README.md",
"status":"modified",
"additions":16,
"deletions":13,
"changes":29,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e93503fa3e42a53938dedc3df667b2383f37092/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e93503fa3e42a53938dedc3df667b2383f37092/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=8e93503fa3e42a53938dedc3df667b2383f37092",
"patch":"@@ -39,7 +39,7 @@ growing Electric Vehicle Owners.\n     <li> <strong> Users: </strong>   Electric Vehicle Owners. </li>\n     <li> <strong> Development Team </strong>  </li>\n </ul>\n-<hr>\n+\n \n <h2> Team </h2>\n \n@@ -85,7 +85,7 @@ growing Electric Vehicle Owners.\n     <li> Get Device </li>\n     <li> Get All Devices </li> \n </ul>\n-<hr>\n+<br>\n \n <h2> Transition Functions Details </h2>\n \n@@ -99,7 +99,9 @@ growing Electric Vehicle Owners.\n | Execute Device Command  \t| Device ID <br>Command                                                \t| Result <br>  \t| Controller Adminstrator           \t| Sends a command for execution on a device.   \t|\n | Update Device           \t| Device ID <br>Current Temperature                                    \t| None         \t| Device                            \t| Update device information                    \t|\n | Update Device Status    \t| Device ID <br>In Use                                                 \t| None         \t| Device                            \t| Update if the device is in use.              \t|\n-<br><hr>\n+<br>\n+\n+---\n \n <h2> Other Functions Details </h2>\n \n@@ -111,7 +113,8 @@ growing Electric Vehicle Owners.\n | Get Controller Devices  \t| Controller ID <br>  \t| Array of Controller Devices                  \t| Controller <br>Super System  \t| Returns list of devices of a particular controller.     \t|\n | Get Device              \t| Device ID <br>      \t| Brand <br>Model <br>Power Type <br>Location  \t| User                         \t| Return device information to a user.                    \t|\n | Get All Devices         \t| None                \t| Array of Device ID                           \t| Super System                 \t| Returns a list of all devices.                          \t|\n-<br><hr>\n+<br>\n+---\n \n <h2> State data descriptions </h2>\n <h3> Controller </h3>\n@@ -172,8 +175,8 @@ growing Electric Vehicle Owners.\n | Last Command       \t| String        \t| Command text                          \t|\n | Last Command Date  \t| Date/Time     \t|                                       \t|\n | Controller ID      \t| Number        \t| 123                                   \t|\n-<br><hr>\n-\n+<br>\n+---\n <h2> Role Descriptions </h2>\n <ul>\n     <li> Controller </li>\n@@ -188,17 +191,17 @@ growing Electric Vehicle Owners.\n | Device        \t| An EV Charger Device.                                     \t| Read access to device data.                                  \t|\n | Super System  \t| Main terminal that carries out administrative functions.  \t| Read and write access to controllers.                        \t|\n | User          \t| EV Charger user                                           \t| Read access to a device.                                     \t|\n-<br><hr>\n-\n+<br>\n+---\n <h2> Blockchain Architectural Diagrams </h2>\n \n-![alt text](images/IOTRegStateDiagram.png?raw=true) <br>\n-\n-![alt text](images/EVCharger-HLF.png?raw=true) <br>\n+![alt text](documentation/IOTRegStateDiagram.png?raw=true) <br>\n \n-![alt text](images/BlockchainArchitecture.png?raw=true) <br>\n+![alt text](documentation/EVCharger-HLF.png?raw=true) <br>\n \n+![alt text](documentation/BlockchainArchitecture.png?raw=true) <br>\n \n+---\n <h2> BACKEND \u2013 RESTful API endpoints </h2>\n \n | Endpoint     \t| Path            \t| HTTP method \t| Query input                                                                   \t| Output                        \t|\n@@ -216,4 +219,4 @@ growing Electric Vehicle Owners.\n |              \t| /controller     \t| GET         \t| deviceId                                                                      \t| Object - Controller Id        \t|\n |              \t| /register       \t| POST        \t| brand, <br>model, <br>mac, <br>powerType,<br>location.long, <br>location.lat  \t| success/fail                  \t|\n |              \t| /executeCommand \t| POST        \t| deviceId, <br>command                                                         \t| success/fail                  \t|\n-<br><hr>\n+<br>"
}
]
},
{
"commit_sha":"9894452f570bfe525f5acee5bba257c4976175fd",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2Ojk4OTQ0NTJmNTcwYmZlNTI1ZjVhY2VlNWJiYTI1N2M0OTc2MTc1ZmQ=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/9894452f570bfe525f5acee5bba257c4976175fd",
"commit_date":"2021-03-17T06:17:01Z",
"files":[
{
"sha":"73c6446bb04feddd6be267f25c14a64e53f6c04b",
"filename":"documentation/BlockchainArchitecture.png",
"status":"renamed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/9894452f570bfe525f5acee5bba257c4976175fd/documentation/BlockchainArchitecture.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/9894452f570bfe525f5acee5bba257c4976175fd/documentation/BlockchainArchitecture.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/documentation/BlockchainArchitecture.png?ref=9894452f570bfe525f5acee5bba257c4976175fd",
"previous_filename":"images/BlockchainArchitecture.png"
},
{
"sha":"566ab2f54847a25340d6b9bb14ef4c9f0e546663",
"filename":"documentation/EVCGoveranceFramework.md",
"status":"renamed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/9894452f570bfe525f5acee5bba257c4976175fd/documentation/EVCGoveranceFramework.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/9894452f570bfe525f5acee5bba257c4976175fd/documentation/EVCGoveranceFramework.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/documentation/EVCGoveranceFramework.md?ref=9894452f570bfe525f5acee5bba257c4976175fd",
"previous_filename":"EVCGoveranceFramework.md"
},
{
"sha":"6a5ad2c322df9eee8db5118aa5bfbdae0399e13d",
"filename":"documentation/EVCharger-HLF.png",
"status":"renamed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/9894452f570bfe525f5acee5bba257c4976175fd/documentation/EVCharger-HLF.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/9894452f570bfe525f5acee5bba257c4976175fd/documentation/EVCharger-HLF.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/documentation/EVCharger-HLF.png?ref=9894452f570bfe525f5acee5bba257c4976175fd",
"previous_filename":"images/EVCharger-HLF.png"
},
{
"sha":"0fc272d41327b6523253367d3023e2738637321c",
"filename":"documentation/IOTRegStateDiagram.png",
"status":"renamed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/9894452f570bfe525f5acee5bba257c4976175fd/documentation/IOTRegStateDiagram.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/9894452f570bfe525f5acee5bba257c4976175fd/documentation/IOTRegStateDiagram.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/documentation/IOTRegStateDiagram.png?ref=9894452f570bfe525f5acee5bba257c4976175fd",
"previous_filename":"images/IOTRegStateDiagram.png"
}
]
},
{
"commit_sha":"690e93ddd45a8762e33c678075a8fab27c2c94a1",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjY5MGU5M2RkZDQ1YTg3NjJlMzNjNjc4MDc1YThmYWIyN2MyYzk0YTE=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/690e93ddd45a8762e33c678075a8fab27c2c94a1",
"commit_date":"2021-03-17T06:12:42Z",
"files":[
{
"sha":"a5e4967e0e0193d0439a8ebf8339784a972d02a2",
"filename":".gitignore",
"status":"modified",
"additions":27,
"deletions":1,
"changes":28,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -1,12 +1,37 @@\n-# Emacs backup files\n+\n+\n+# dependencies\n+/node_modules\n+/.pnp\n+.pnp.js\n+\n+# testing\n+/coverage\n+\n+# production\n+/build\n+\n+# misc\n+.DS_Store\n+.env.local\n+.env.development.local\n+.env.test.local\n+.env.production.local\n+\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*\n *~\n *#\n .#*\n+\n # Vim file artifacts\n .*.sw*\n # installed platform-specific binaries\n backend/node_modules\n backend/config\n+backend/gateway/\n+backend/wallet/\n .DS_Store\n .project\n \n@@ -94,3 +119,4 @@ chaincode/.vuepress/dist\n # Serverless directories\n chaincode/.serverless\n \n+>>>>>>> backend"
},
{
"sha":"39687b3e1021a78a22fc8c4aea45b2877a749873",
"filename":"README.md",
"status":"added",
"additions":219,
"deletions":0,
"changes":219,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,219 @@\n+# Electric Vehicle Charger Registry\n+\n+<h2> Project Description </h2>\n+A blockchain registry for  Electric Vehicle Charging Stations. The system will track, manage and enable accurate and reliable \n+data sharing on an open platform where operators provide stations to serve owners of electric vehicles and all the participants are protected from unfair practises.\n+<hr>\n+<h2> Network participants </h2>\n+<ol>\n+    <li> <strong> Service Providers: </strong>\n+        Investors who purchased EV Charging equipment from manufacturers and rented a location in a \n+        parking lot for hosting these chargers.\n+    </li>\n+    <li> <strong> Controller: </strong>\n+        A parking lot owner that hosts those devices or a utility company to which the device is connected\n+    </li>   \n+    <li> <strong> Users: </strong>\n+        Owners of electric vehicles who visit a location to charge their vehicles.\n+    </li>  \n+</ol>\n+<hr>\n+\n+<h2> Problem </h2>\n+With the improvement in battery technology, and incentives from various governments we are seeing an increase in demand \n+for electric vehicles. An open blockchain platform to cater for more Charging Station, tracking and managing them in an\n+environment with multiple participating Service Provider will be very useful.\n+<hr>\n+\n+<h2> Goal </h2>\n+The goal of this project is to develop an open platform with tamper-proof data for collaboration between \n+EV Charging Equipment Manufacturers, Vehicle Manufacturers, and Service Providers to meet the charging needs of \n+growing Electric Vehicle Owners.\n+<hr>\n+\n+<h2> Stakeholders </h2>\n+<ul>\n+    <li> <strong> Vehicle Manufacturers: </strong> Makers of Electric Vehicles. </li>\n+    <li> <strong> EV Charger Manufacturers : </strong>   EV Charging Stations Manufacturers. </li>\n+    <li> <strong> Service Providers : </strong>   Owners of EV Charging Stations. </li>    \n+    <li> <strong> Users: </strong>   Electric Vehicle Owners. </li>\n+    <li> <strong> Development Team </strong>  </li>\n+</ul>\n+<hr>\n+\n+<h2> Team </h2>\n+\n+| Name                | Designation        |\n+|------------------\t|------------------\t|\n+| Moayyad Alfaris    | Development Team    |\n+| Oluwaseun Soetan    | Development Team    |\n+| Trung Ngo            | Development Team    |\n+| Temple Okosun        | Development Team    |\n+\n+<br><hr>\n+\n+<h2> Measuring Success </h2>\n+<ul>\n+    <li> A user should be able to determine the availability of charging stations for use within a \n+    specific geographic location \n+    </li>\n+    <li> Having zero data breach incidence related to devices and controllers </li>\n+</ul>\n+<hr>\n+\n+<h2> Transition descriptions </h2>\n+<h3> Transition Functions </h3>\n+<ul>\n+    <li> Register Controller </li>\n+    <li> Update Controller </li>\n+    <li> Register Device </li>\n+    <li> Assign Controller </li>\n+    <li> Change Controller </li>\n+    <li> Execute Device Command  </li>\n+    <li> Update Device </li>\n+    <li> Update Device Status </li> \n+</ul>\n+\n+<h3> Other Functions </h3>\n+<ul>\n+    <li> Get All Controllers </li>\n+    <li> Get Device Controller </li>\n+    <li> Get Device Logs </li>\n+    <li> Get Controller Devices </li>\n+    <li> Change Controller </li>\n+    <li> Execute Device Command  </li>\n+    <li> Get Device </li>\n+    <li> Get All Devices </li> \n+</ul>\n+<hr>\n+\n+<h2> Transition Functions Details </h2>\n+\n+| Function Name           \t| Input                                                                \t| Output       \t| Role                              \t| Description                                  \t|\n+|-------------------------\t|----------------------------------------------------------------------\t|--------------\t|-----------------------------------\t|----------------------------------------------\t|\n+| Register Controller     \t| Controller ID <br>Controller Name <br>Service Provider <br>Location  \t| None         \t| Super System (Administrator <br>  \t| Registers new controller.                    \t|\n+| Update Controller       \t| Location <br>Service Provider                                        \t| None         \t| Super System <br>                 \t| Updates controller details.                  \t|\n+| Register Device         \t| Device ID <br>Brand <br>Model <br>MAC <br>Power Type <br>Location    \t| None         \t| Super System <br>                 \t| Registers a new device.                      \t|\n+| Assign Controller       \t| Device ID <br>Controller ID                                          \t| None         \t| Super System <br>                 \t| Assigns the device to the first controller.  \t|\n+| Change Controller       \t| Device ID <br>Controller ID                                          \t| None         \t| Super System <br>                 \t| Assigns the device to a new controller.      \t|\n+| Execute Device Command  \t| Device ID <br>Command                                                \t| Result <br>  \t| Controller Adminstrator           \t| Sends a command for execution on a device.   \t|\n+| Update Device           \t| Device ID <br>Current Temperature                                    \t| None         \t| Device                            \t| Update device information                    \t|\n+| Update Device Status    \t| Device ID <br>In Use                                                 \t| None         \t| Device                            \t| Update if the device is in use.              \t|\n+<br><hr>\n+\n+<h2> Other Functions Details </h2>\n+\n+| Function Name           \t| Input               \t| Output                                       \t| Role                         \t| Description                                             \t|\n+|-------------------------\t|---------------------\t|----------------------------------------------\t|------------------------------\t|---------------------------------------------------------\t|\n+| Get All Controllers     \t| None                \t| Array of Controller ID                       \t| Super System <br>            \t| Returns all the registered controllers in the network.  \t|\n+| Get Device Controller   \t| Device ID           \t| Controller ID                                \t| Device                       \t| Returns who controls this device.                       \t|\n+| Get Device Logs         \t| Device ID           \t| Array of Logs                                \t| Controller                   \t| Returns log data from a device.                         \t|\n+| Get Controller Devices  \t| Controller ID <br>  \t| Array of Controller Devices                  \t| Controller <br>Super System  \t| Returns list of devices of a particular controller.     \t|\n+| Get Device              \t| Device ID <br>      \t| Brand <br>Model <br>Power Type <br>Location  \t| User                         \t| Return device information to a user.                    \t|\n+| Get All Devices         \t| None                \t| Array of Device ID                           \t| Super System                 \t| Returns a list of all devices.                          \t|\n+<br><hr>\n+\n+<h2> State data descriptions </h2>\n+<h3> Controller </h3>\n+<ul>\n+    <li> Controller </li>\n+    <li> Controller ID </li>\n+    <li> Controller Name </li>\n+    <li> Location (Long, Lat) </li>\n+    <li> Service Provider </li>\n+    <li> Devices : [\n+                    Device ID, \n+                    Device Log History [ ]\n+                ]\n+    </li>\n+</ul>\n+\n+| Field Name                \t| Type            \t| Example    \t|\n+|---------------------------\t|-----------------\t|------------\t|\n+| Controller ID             \t| Number          \t| 1234       \t|\n+| Controller Name           \t| String          \t| \u201c\u201d         \t|\n+| Location                  \t| [float, float]  \t| Long, Lat  \t|\n+| Service Provider          \t| Number          \t| 1234       \t|\n+| Devices                   \t| Array           \t| []         \t|\n+|      Device ID            \t| Number          \t| 1234       \t|\n+|      Device Log History   \t| Array           \t| []         \t|\n+|            Log            \t| String          \t| \u201c\u201d         \t|\n+<br><hr>\n+\n+<h3> Device </h3>\n+<ul>\n+    <li> Device ID (Unique Identifier) </li>\n+    <li> Brand </li>\n+    <li> Model </li>\n+    <li> MAC Address  </li>\n+    <li> Location (Long, Lat) </li>\n+    <li> Status (On/Off)  </li>\n+    <li> Last seen (Date/Time) </li>\n+    <li> Power Type (AC/DC) </li>\n+    <li> Current Temp (in Celsius)  </li>\n+    <li> In use (Charging or Not) </li>\n+    <li> Last executed command  </li>\n+    <li> Last execution date/time </li>\n+    <li> Controller ID </li>\n+</ul>\n+\n+| Field Name         \t| Type          \t| Example                               \t|\n+|--------------------\t|---------------\t|---------------------------------------\t|\n+| Device ID          \t| Number        \t| 123                                   \t|\n+| Brand              \t| String        \t| \u201c\u201d                                    \t|\n+| Model              \t| String        \t| \u201c\u201d                                    \t|\n+| MAC Address        \t| String        \t| Format: \u201cABC-123-XYZ\u201d                 \t|\n+| Location           \t| Float, Float  \t| Long, Lat                             \t|\n+| Status             \t| Boolean       \t| On = True, Off = False                \t|\n+| Last seen          \t| Date/Time     \t|                                       \t|\n+| Power Type         \t| String        \t| AC or DC                              \t|\n+| Current Temp       \t| Double        \t| In Celsius                            \t|\n+| In use             \t| Boolean       \t| True for charging, False of stand by  \t|\n+| Last Command       \t| String        \t| Command text                          \t|\n+| Last Command Date  \t| Date/Time     \t|                                       \t|\n+| Controller ID      \t| Number        \t| 123                                   \t|\n+<br><hr>\n+\n+<h2> Role Descriptions </h2>\n+<ul>\n+    <li> Controller </li>\n+    <li> Device </li>\n+    <li> Super System  </li>\n+    <li> User  </li>\n+</ul>\n+\n+| Role          \t| Description                                               \t| Access Rights                                                \t|\n+|---------------\t|-----------------------------------------------------------\t|--------------------------------------------------------------\t|\n+| Controller    \t| A controller device for multiple EV Chargers.             \t| Read and write access to device including execute commands.  \t|\n+| Device        \t| An EV Charger Device.                                     \t| Read access to device data.                                  \t|\n+| Super System  \t| Main terminal that carries out administrative functions.  \t| Read and write access to controllers.                        \t|\n+| User          \t| EV Charger user                                           \t| Read access to a device.                                     \t|\n+<br><hr>\n+\n+<h2> Blockchain Architectural Diagrams </h2>\n+\n+![alt text](images/IOTRegStateDiagram.png?raw=true) <br>\n+\n+![alt text](images/EVCharger-HLF.png?raw=true) <br>\n+\n+![alt text](images/BlockchainArchitecture.png?raw=true) <br>\n+\n+\n+<h2> BACKEND \u2013 RESTful API endpoints </h2>\n+\n+| Endpoint     \t| Path            \t| HTTP method \t| Query input                                                                   \t| Output                        \t|\n+|--------------\t|-----------------\t|-------------\t|-------------------------------------------------------------------------------\t|-------------------------------\t|\n+| /controller  \t| /all <br>       \t| GET         \t| None                                                                          \t| Object - All controllers      \t|\n+|              \t| /register       \t| POST        \t| controllerName,<br>serviceProvider,<br>location.long,<br>location.lat         \t|  success/fail                 \t|\n+|              \t| /update         \t| POST        \t| controllerID,<br>serviceProvider, <br>location.long, <br>location.lang        \t|  success/fail                 \t|\n+|              \t| /change         \t| POST        \t| deviceID, <br>newControllerID                                                 \t|  success/fail                 \t|\n+|              \t| /assign         \t| POST        \t| deviceID, <br>controllerID                                                    \t| success/fail                  \t|\n+|              \t| /devices        \t| GET         \t| id                                                                            \t| Object - Controller's devices \t|\n+| /devices     \t| /all            \t| GET         \t|                                                                               \t| Object - All devices          \t|\n+|              \t| /id             \t| GET         \t| deviceId                                                                      \t| Object- A device's details    \t|\n+|              \t| /update         \t| POST        \t| deviceId, <br>currentTemp                                                     \t| success/fail                  \t|\n+|              \t| /updateStatus   \t| POST        \t| deviceId                                                                      \t| success/fail                  \t|\n+|              \t| /controller     \t| GET         \t| deviceId                                                                      \t| Object - Controller Id        \t|\n+|              \t| /register       \t| POST        \t| brand, <br>model, <br>mac, <br>powerType,<br>location.long, <br>location.lat  \t| success/fail                  \t|\n+|              \t| /executeCommand \t| POST        \t| deviceId, <br>command                                                         \t| success/fail                  \t|\n+<br><hr>"
},
{
"sha":"845f382621d7adf61cad21da6cfbef1bc2285c90",
"filename":"backend/README.md",
"status":"modified",
"additions":33,
"deletions":2,
"changes":35,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/README.md?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -1,3 +1,34 @@\n-# EVChargerReg Backend App\n+# Back End\n+<h2> Setting up the backend </h2>\n+<hr>\n+The backend is an express server that connects to the blockchain through the fabric sdk and exposes api endpoints \n+that enables transactions and queries from users utilizing the front end to be executed on the network.\n \n-<h2> How to run guide </h2>\n\\ No newline at end of file\n+<h2> Steps </h2>\n+<ol>\n+    <li> <strong> Install dependencies: </strong>  Navigate to the root of the backend directory and\n+Run <strong> npm install  </strong>to get the required dependencies. You can open the package.json file to see the \n+required packages \n+    </li>\n+    <li> Navigate to <strong> http://localhost:8000 </strong>  on your browser and you should see the express server welcome page <br>\n+    <em> Note: If you change the port on which the backend server is running,\n+    you will also have to update that on the frontend/src/components everywhere calls are made to endpoints through axios library.</em>\n+    </li>\n+</ol>\n+\n+![alt text](./public/images/backend.png?raw=true) <br>\n+\n+<p>In our frontend EV Charger System scenario, \n+we will have 3 users representing the three participants in the business network:</p>\n+<ul>\n+    <li> Devices</li>\n+    <li> Controller </li>\n+    <li> Super Admin </li>\n+</ul>\n+\n+<h2> TO DO:</h2>\n+<hr>\n+<ul>\n+    <li> Multi-user support with JWT Authentication </li>\n+</ul>\n+<hr>\n\\ No newline at end of file"
},
{
"sha":"7c3ae381ad64942fd5739c0093785d59013fd2fd",
"filename":"backend/app.js",
"status":"modified",
"additions":3,
"deletions":0,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/app.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/app.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/app.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -4,6 +4,8 @@ var path = require('path');\n var cookieParser = require('cookie-parser');\n var logger = require('morgan');\n const bodyParser = require('body-parser');\n+var cors = require('cors');\n+\n \n var controllerRouter = require('./routes/controller');\n var deviceRouter = require('./routes/device');\n@@ -15,6 +17,7 @@ var app = express();\n \n app.use(bodyParser.urlencoded());\n app.use(bodyParser.json());\n+app.use(cors());\n \n // view engine setup\n app.set('views', path.join(__dirname, 'views'));"
},
{
"sha":"cc1a611fad5061d3e2726ec8e261ffa52148074e",
"filename":"backend/bin/www",
"status":"added",
"additions":90,
"deletions":0,
"changes":90,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/bin/www",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/bin/www",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/bin/www?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,90 @@\n+#!/usr/bin/env node\n+\n+/**\n+ * Module dependencies.\n+ */\n+\n+var app = require('../app');\n+var debug = require('debug')('evchargerreg-server');\n+var http = require('http');\n+\n+/**\n+ * Get port from environment and store in Express.\n+ */\n+\n+var port = normalizePort(process.env.PORT || '8000');\n+app.set('port', port);\n+\n+/**\n+ * Create HTTP server.\n+ */\n+\n+var server = http.createServer(app);\n+\n+/**\n+ * Listen on provided port, on all network interfaces.\n+ */\n+\n+server.listen(port);\n+server.on('error', onError);\n+server.on('listening', onListening);\n+\n+/**\n+ * Normalize a port into a number, string, or false.\n+ */\n+\n+function normalizePort(val) {\n+  var port = parseInt(val, 10);\n+\n+  if (isNaN(port)) {\n+    // named pipe\n+    return val;\n+  }\n+\n+  if (port >= 0) {\n+    // port number\n+    return port;\n+  }\n+\n+  return false;\n+}\n+\n+/**\n+ * Event listener for HTTP server \"error\" event.\n+ */\n+\n+function onError(error) {\n+  if (error.syscall !== 'listen') {\n+    throw error;\n+  }\n+\n+  var bind = typeof port === 'string'\n+    ? 'Pipe ' + port\n+    : 'Port ' + port;\n+\n+  // handle specific listen errors with friendly messages\n+  switch (error.code) {\n+    case 'EACCES':\n+      console.error(bind + ' requires elevated privileges');\n+      process.exit(1);\n+      break;\n+    case 'EADDRINUSE':\n+      console.error(bind + ' is already in use');\n+      process.exit(1);\n+      break;\n+    default:\n+      throw error;\n+  }\n+}\n+\n+/**\n+ * Event listener for HTTP server \"listening\" event.\n+ */\n+\n+function onListening() {\n+  var addr = server.address();\n+  var bind = typeof addr === 'string'\n+    ? 'pipe ' + addr\n+    : 'port ' + addr.port;\n+  debug('Listening on ' + bind);\n+}"
},
{
"sha":"88bcd5f841df2f1c79bf58b8c8f114327f798565",
"filename":"backend/chaincode-connector/EVChargerConnector.js",
"status":"removed",
"additions":0,
"deletions":113,
"changes":113,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/bfc94a81cf319425f8322908210b79e455a4bfa2/backend/chaincode-connector/EVChargerConnector.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/bfc94a81cf319425f8322908210b79e455a4bfa2/backend/chaincode-connector/EVChargerConnector.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/chaincode-connector/EVChargerConnector.js?ref=bfc94a81cf319425f8322908210b79e455a4bfa2",
"patch":"@@ -1,113 +0,0 @@\n-let gateway; \n-\n-async function init() {\n-    let contract;\n-    try {\n-        const { Wallets } = require('fabric-network');\n-        const { Gateway } = require('fabric-network'); //Creates a new gateway and use it to connect to the network\n-        const path = require('path');\n-        const fs = require('fs');\n-    \n-        const walletPath = path.join(process.cwd(), './wallet/Org1');\n-        const wallet = await Wallets.newFileSystemWallet(walletPath);\n-        gateway = new Gateway();\n-        const connectionProfilePath = path.resolve(__dirname, '../gateway', '1OrgLocalFabricOrg1GatewayConnection.json');\n-        const connectionProfile = JSON.parse(fs.readFileSync(connectionProfilePath, 'utf8'));\n-        const connectionOptions = {\n-            wallet, identity: 'Org1 Admin', discovery:\n-                { enabled: true, asLocalhost: true }\n-        };\n-        await gateway.connect(connectionProfile, connectionOptions);\n-        // Get the network (channel) our contract is deployed to.\n-        const network = await gateway.getNetwork('mychannel');\n-        // Get the contract from the network.\n-        contract = network.getContract('EVChargerReg');\n-        return contract;\n-    } catch (error) {\n-        console.error('Failed to initialize transaction:', error);\n-        process.exit(1);\n-    }\n-}\n-\n-async function getAllControllers() {\n-    const contract = await init();\n-    let result;\n-    try {\n-        result = await contract.submitTransaction('getAllControllers');\n-        await disconnectGateway();    \n-    } catch (error) {\n-        console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n-    }\n-    console.log('result from chaincode = ' + result.toString());\n-    return JSON.parse(result.toString());\n-}\n-\n-async function registerController(cn, sp, long, lat) {\n-    const contract = await init();\n-    try {\n-        await contract.submitTransaction('registerController', cn, sp, long, lat);\n-    } catch (error) {\n-        console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n-    }\n-    await disconnectGateway();    \n-    return JSON.parse('{\"result\": \"success\"}');\n-}\n-\n-async function disconnectGateway() {\n-    gateway.disconnect();\n-}\n-\n-\n-async function getAllDevices() {\n-    const contract = await init();\n-    let result;\n-    try {\n-        result = await contract.submitTransaction('getAllDevices');\n-        await disconnectGateway();    \n-    } catch (error) {\n-        console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n-    }\n-    console.log('result from chaincode = ' + result.toString());\n-    return JSON.parse(result.toString());\n-}\n-\n-async function getDevice(id) {\n-    const contract = await init();\n-    let result;\n-    try {\n-        result = await contract.submitTransaction('getDevice', id);\n-        await disconnectGateway();    \n-    } catch (error) {\n-        console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n-    }\n-    console.log('result from chaincode = ' + result.toString());\n-    return JSON.parse(result.toString());\n-}\n-\n-\n-async function getControllerDevices(id) {\n-    const contract = await init();\n-    let result;\n-    try {\n-        result = await contract.submitTransaction('getControllerDevices', id);\n-        await disconnectGateway();    \n-    } catch (error) {\n-        console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n-    }\n-    console.log('result from chaincode = ' + result.toString());\n-    return JSON.parse(result.toString());\n-}\n-\n-\n-module.exports = {\n-    getAllControllers: getAllControllers,\n-    registerController: registerController,\n-    getAllDevices: getAllDevices,\n-    getDevice: getDevice,\n-    getControllerDevices: getControllerDevices\n-}\n\\ No newline at end of file"
},
{
"sha":"093c848ddeb3b73eff12c90accbd4e36b882c955",
"filename":"backend/endpoint/PostmanTest/EVCharger.postman_collection.json",
"status":"added",
"additions":372,
"deletions":0,
"changes":372,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/endpoint/PostmanTest/EVCharger.postman_collection.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/endpoint/PostmanTest/EVCharger.postman_collection.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/PostmanTest/EVCharger.postman_collection.json?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,372 @@\n+{\n+\t\"info\": {\n+\t\t\"_postman_id\": \"2068d3a0-2419-4cd1-8723-8adc75565914\",\n+\t\t\"name\": \"EVCharger\",\n+\t\t\"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n+\t},\n+\t\"item\": [\n+\t\t{\n+\t\t\t\"name\": \"Register Device\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"brand\\\": \\\"TestDevice\\\",\\n    \\\"model\\\": \\\"PSDG\\\",\\n    \\\"mac\\\": \\\"89:334:00:89\\\",\\n    \\\"powerType\\\": \\\"AC\\\",\\n    \\\"location\\\": {\\n        \\\"long\\\": \\\"56\\\",\\n        \\\"lat\\\": \\\"45\\\"\\n    }\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/register\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"register\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetAllDevices\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"\"\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/all\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"all\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetDeviceController\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n   \\\"deviceID\\\": \\\"DEV-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/controller\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"controller\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"executeCommand\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n   \\\"deviceID\\\": \\\"DEV-2\\\",\\n   \\\"command\\\": \\\"show inUSe status\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/executeCommand\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"executeCommand\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetDetailsofDevice\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceId\\\": \\\"DEV-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/id\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"id\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetAllController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/all\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"all\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"AssignController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceID\\\": \\\"DEV-1\\\",\\n    \\\"controllerID\\\" : \\\"CONTR-2\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/assign\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"assign\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetControllerDevices\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"id\\\": \\\"CONTR-2\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/devices\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"devices\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"UpdateController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"controllerID\\\" :  \\\"CONTR-2\\\",\\n    \\\"serviceProvider\\\" : \\\"SP98\\\",\\n    \\\"location\\\": {\\n        \\\"long\\\": \\\"89\\\",\\n        \\\"lat\\\": \\\"45\\\"\\n    }\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/update\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"update\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"changeController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceID\\\": \\\"DEV-2\\\",\\n    \\\"newControllerID\\\" : \\\"CONTR-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/change\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"change\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"RegisterController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"controllerName\\\": \\\"Controller3\\\", \\n    \\\"serviceProvider\\\" : \\\"SP5\\\", \\n    \\\"location\\\" : {\\n        \\\"long\\\": \\\"10\\\", \\n        \\\"lat\\\" : \\\"50\\\"\\n    }\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/register\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"register\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"updateTemperature\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceId\\\" : \\\"DEV-2\\\", \\n    \\\"currentTemp\\\": \\\"56\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/update\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"update\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"updateDeviceStatus\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceId\\\" : \\\"DEV-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/updateStatus\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"updateStatus\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t}\n+\t],\n+\t\"protocolProfileBehavior\": {}\n+}\n\\ No newline at end of file"
},
{
"sha":"26e4377761760537068c7ccd1e382131bad6d84f",
"filename":"backend/endpoint/config.js",
"status":"added",
"additions":15,
"deletions":0,
"changes":15,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/endpoint/config.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/endpoint/config.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/config.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,15 @@\n+const walletFolder = './wallet/Org1';\n+const walletFile = 'Org1 Admin';\n+const connProfileFolder = '../gateway';\n+const connProfile = '1OrgLocalFabricOrg1GatewayConnection.json';\n+const contractName = 'EVChargerReg';\n+const channelName = 'mychannel';\n+\n+module.exports = {\n+    walletFolder: walletFolder,\n+    walletFile: walletFile,\n+    connProfileFolder: connProfileFolder,\n+    connProfile: connProfile,\n+    contractName: contractName,\n+    channelName: channelName\n+};"
},
{
"sha":"4307e538f0c2b533935bebf4274806bb0d385c30",
"filename":"backend/endpoint/mapping.js",
"status":"added",
"additions":254,
"deletions":0,
"changes":254,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,254 @@\n+const fabricConfig = require('./config');\n+let gateway; \n+\n+async function init() {\n+    let contract;\n+    try {\n+        const { Wallets } = require('fabric-network');\n+        const { Gateway } = require('fabric-network'); //Creates a new gateway and use it to connect to the network\n+        const path = require('path');\n+        const fs = require('fs');\n+    \n+        //const walletPath = path.join(process.cwd(), './wallet/Org1');\n+        const walletPath = path.join(process.cwd(), fabricConfig.walletFolder);\n+\n+        const wallet = await Wallets.newFileSystemWallet(walletPath);\n+        gateway = new Gateway();\n+        //const connectionProfilePath = path.resolve(__dirname, '../gateway', '1OrgLocalFabricOrg1GatewayConnection.json');\n+\n+        const connectionProfilePath = path.resolve(__dirname, fabricConfig.connProfileFolder, fabricConfig.connProfile);\n+\n+        const connectionProfile = JSON.parse(fs.readFileSync(connectionProfilePath, 'utf8'));\n+\n+        /*\n+        const connectionOptions = {\n+            wallet, identity: 'Org1 Admin', discovery:\n+                { enabled: true, asLocalhost: true }\n+        };\n+        */\n+\n+        const connectionOptions = {\n+            wallet, identity: fabricConfig.walletFile, discovery:\n+                { enabled: true, asLocalhost: true }\n+        };\n+\n+        await gateway.connect(connectionProfile, connectionOptions);\n+        \n+        // Get the network (channel) our contract is deployed to.\n+        //const network = await gateway.getNetwork('mychannel');\n+        const network = await gateway.getNetwork(fabricConfig.channelName);\n+        \n+        // Get the contract from the network.\n+        //contract = network.getContract('EVChargerReg');\n+        contract = network.getContract(fabricConfig.contractName);\n+\n+        console.log('---------------------------- RESULT from backend server --------')\n+\n+        return contract;\n+    } catch (error) {\n+        console.error('Failed to initialize transaction:', error);\n+        process.exit(1);\n+    }\n+}\n+\n+async function getAllControllers() {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getAllControllers');\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function registerController(controllerName, serProvider, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('registerController', controllerName, serProvider, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway(); \n+    }\n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function updateController(controllerID, serProvider, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('updateController', controllerID, serProvider, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n+    }\n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function changeController(deviceID, newControllerID) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('changeController', deviceID, newControllerID);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n+    }\n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function assignController(deviceID, controllerID) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('assignController', deviceID, controllerID);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n+    }\n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function disconnectGateway() {\n+    gateway.disconnect();\n+}\n+\n+async function getAllDevices() {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getAllDevices');\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function getDevice(id) {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getDevice', id);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n+    }\n+    return JSON.parse(result.toString());\n+}\n+\n+async function getControllerDevices(id) {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getControllerDevices', id);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function updateDevice(deviceId, currentTemp) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('updateDevice', deviceId, currentTemp);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();  \n+    }\n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function updateDeviceStatus(deviceId) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('updateDeviceStatus', deviceId);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n+    }\n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function registerDevice(brand, model, mac, powerType, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('registerDevice', brand, model, mac, powerType, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n+    }\n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function getDeviceController(devID) {\n+    const contract = await init();\n+    console.log(`---------- IN BACKEND - MAPPPING getDeviceController(devID=${req.query.id}) --------`)\n+\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getDeviceController', devID);   \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        // In case of business error from chaincode (for example: non-existing ID return an empty JSON)\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway(); \n+    }\n+    return JSON.parse('{\"ControllerID\": \"' + result.toString() + '\"}');\n+}\n+\n+async function executeDeviceCommand(devID, command) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('executeDeviceCommand', devID, command);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();    \n+    }\n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+module.exports = {\n+    /* controller */\n+    getAllControllers: getAllControllers,\n+    registerController: registerController, \n+    updateController: updateController, \n+    changeController: changeController,\n+    assignController: assignController,\n+    getControllerDevices: getControllerDevices,\n+    getDevice: getDevice,\n+    getAllDevices: getAllDevices,\n+    /* devices */\n+    updateDevice: updateDevice,\n+    updateDeviceStatus: updateDeviceStatus,\n+    registerDevice: registerDevice,\n+    getDeviceController: getDeviceController,\n+    executeDeviceCommand: executeDeviceCommand\n+}\n\\ No newline at end of file"
},
{
"sha":"a0f4aa8f1fad604b26ab32814f100bbcfe932fab",
"filename":"backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"status":"removed",
"additions":0,
"deletions":43,
"changes":43,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/bfc94a81cf319425f8322908210b79e455a4bfa2/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/bfc94a81cf319425f8322908210b79e455a4bfa2/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json?ref=bfc94a81cf319425f8322908210b79e455a4bfa2",
"patch":"@@ -1,43 +0,0 @@\n-{\n-    \"certificateAuthorities\": {\n-        \"org1ca-api.127-0-0-1.nip.io:8081\": {\n-            \"url\": \"http://org1ca-api.127-0-0-1.nip.io:8081\"\n-        }\n-    },\n-    \"client\": {\n-        \"connection\": {\n-            \"timeout\": {\n-                \"orderer\": \"300\",\n-                \"peer\": {\n-                    \"endorser\": \"300\"\n-                }\n-            }\n-        },\n-        \"organization\": \"Org1\"\n-    },\n-    \"display_name\": \"Org1 Gateway\",\n-    \"id\": \"org1gateway\",\n-    \"name\": \"Org1 Gateway\",\n-    \"organizations\": {\n-        \"Org1\": {\n-            \"certificateAuthorities\": [\n-                \"org1ca-api.127-0-0-1.nip.io:8081\"\n-            ],\n-            \"mspid\": \"Org1MSP\",\n-            \"peers\": [\n-                \"org1peer-api.127-0-0-1.nip.io:8081\"\n-            ]\n-        }\n-    },\n-    \"peers\": {\n-        \"org1peer-api.127-0-0-1.nip.io:8081\": {\n-            \"grpcOptions\": {\n-                \"grpc.default_authority\": \"org1peer-api.127-0-0-1.nip.io:8081\",\n-                \"grpc.ssl_target_name_override\": \"org1peer-api.127-0-0-1.nip.io:8081\"\n-            },\n-            \"url\": \"grpc://org1peer-api.127-0-0-1.nip.io:8081\"\n-        }\n-    },\n-    \"type\": \"gateway\",\n-    \"version\": \"1.0\"\n-}\n\\ No newline at end of file"
},
{
"sha":"f12c307f830456a8cb7694521833195ce507d725",
"filename":"backend/package.json",
"status":"modified",
"additions":2,
"deletions":1,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/package.json?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -1,5 +1,5 @@\n {\n-  \"name\": \"evchargerreg\",\n+  \"name\": \"evchargerreg-server\",\n   \"version\": \"0.0.0\",\n   \"private\": true,\n   \"scripts\": {\n@@ -8,6 +8,7 @@\n   \"dependencies\": {\n     \"body-parser\": \"^1.18.3\",\n     \"cookie-parser\": \"~1.4.4\",\n+    \"cors\": \"^2.8.5\",\n     \"debug\": \"~2.6.9\",\n     \"express\": \"~4.16.1\",\n     \"fabric-network\": \"^2.2.5\","
},
{
"sha":"2745d729d17b25a638a4e4e92c722d28f0a6fc43",
"filename":"backend/public/images/backend.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/public/images/backend.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/public/images/backend.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/public/images/backend.png?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1"
},
{
"sha":"1135711dab4dcca4a114fb58ad86c765fe172262",
"filename":"backend/routes/controller.js",
"status":"modified",
"additions":21,
"deletions":5,
"changes":26,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -1,10 +1,9 @@\n 'use strict';\n \n var express = require('express');\n-var router = express.Router();\n-var connector = require('../chaincode-connector/EVChargerConnector')\n+const router = express.Router();\n+const connector = require('../endpoint/mapping')\n \n-/* GET query listing. */\n router.get('/all', async function(req, res, next) {\n     const result = await connector.getAllControllers()\n     res.json(result); \n@@ -16,8 +15,25 @@ router.post('/register', async function(req, res, next) {\n     res.json(result); \n });\n \n-router.get('/devices', async function(req, res, next) {\n-    const result = await connector.getControllerDevices(req.body.controllerId);\n+router.post('/update', async (req, res, next) => {\n+    const result = await connector.updateController(req.body.controllerID, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n+    res.json(result); \n+});\n+\n+router.post('/change', async (req, res, next) => {\n+    const result = await connector.changeController(req.body.deviceID, req.body.newControllerID);\n+    res.json(result); \n+});\n+\n+router.post('/assign', async (req, res, next) => {\n+    const result = await connector.assignController(req.body.deviceID, req.body.controllerID);\n+    res.json(result); \n+});\n+\n+router.get('/devices', async (req, res, next) => {\n+    console.log(`---------- BEFORE CONNECTING TO BACKEND: req.query.id = ${req.query.id} --------`)\n+    \n+    const result = await connector.getControllerDevices(req.query.id);\n     res.json(result); \n });\n "
},
{
"sha":"670d3db83f0c5826e7e4ac431897d338ca0fd245",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":29,
"deletions":3,
"changes":32,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -2,19 +2,45 @@\n \n var express = require('express');\n var router = express.Router();\n-var connector = require('../chaincode-connector/EVChargerConnector')\n+const connector = require('../endpoint/mapping')\n \n /* GET query listing. */\n router.get('/all', async function(req, res, next) {\n     const result = await connector.getAllDevices();\n     res.json(result); \n });\n \n-router.get('/device', async function(req, res, next) {\n+router.get('/id', async function(req, res, next) {\n     //let queryObj = req.query;\n-    const result = await connector.getDevice(req.body.deviceId);\n+    console.log('query param deviceId = ' + req.query.deviceId);\n+    const result = await connector.getDevice(req.query.deviceId);\n     res.json(result); \n });\n \n+router.post('/update', async function(req, res, next) {\n+    const result = await connector.updateDevice(req.body.deviceId, req.body.currentTemp);\n+    res.json(result); \n+});\n+\n+router.post('/updateStatus', async function(req, res, next) {\n+    const result = await connector.updateDeviceStatus(req.body.deviceId);\n+    res.json(result); \n+});\n+\n+router.get('/controller', async function(req, res, next) {\n+    // For GET method, change req.body to query instead of body. It is not recommended to have body parameters while using GET method in HTTP.\n+    const result = await connector.getDeviceController(req.query.deviceID);\n+    res.json(result); \n+});\n+\n+router.post('/register', async function(req, res, next) {\n+    const result = await connector.registerDevice(req.body.brand, req.body.model, req.body.mac, req.body.powerType, req.body.location.long, req.body.location.lat);\n+    res.json(result); \n+});\n+\n+router.post('/executeCommand', async function(req, res, next) {\n+    const result = await connector.executeDeviceCommand(req.body.deviceID, req.body.command);\n+    res.json(result); \n+});\n \n module.exports = router;\n\\ No newline at end of file"
},
{
"sha":"8dfd9af11367f19a009e59733f2fe476f0bf4708",
"filename":"backend/wallet/Org1/Org1 Admin.id",
"status":"removed",
"additions":0,
"deletions":1,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/bfc94a81cf319425f8322908210b79e455a4bfa2/backend/wallet/Org1/Org1%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/bfc94a81cf319425f8322908210b79e455a4bfa2/backend/wallet/Org1/Org1%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20Admin.id?ref=bfc94a81cf319425f8322908210b79e455a4bfa2",
"patch":"@@ -1 +0,0 @@\n-{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBzjCCAXSgAwIBAgIQMXHE2o7nB/MbM06fHvykvTAKBggqhkjOPQQDAjASMRAw\\nDgYDVQQDEwdPcmcxIENBMB4XDTIxMDMwNDIwNDYwMloXDTMxMDMwMjIwNDYwMlow\\nJTEOMAwGA1UECxMFYWRtaW4xEzARBgNVBAMTCk9yZzEgQWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAScOr0TnqWDyAYRSTmOiWdb8zaHCBRQvE2JdOmi/qaD\\nL+nxIbM9huZ6oquDj6dZ5EPLV5W8ablz4n6MZFSL5ukko4GYMIGVMA4GA1UdDwEB\\n/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwDAYDVR0TAQH/\\nBAIwADApBgNVHQ4EIgQgPI2bWZA0qW+WY2cE8o/qN0sqq39kZXop8Whc9/U4ZuMw\\nKwYDVR0jBCQwIoAgAToqafW82VnK2eyhVuvp0GB8Ni7L2WiPf3FgDx2x+YkwCgYI\\nKoZIzj0EAwIDSAAwRQIhANgPkZSyMFtwxoZWiuBsqxM6QRjRgSyqoOmeNfivCXJc\\nAiA745JwCGY5NE8+TKOmBe7+wESRcA0EGOcnBrnalDjbvw==\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgvC6VRtk2NjVrSgNQ\\nv1Gw5Qbhg3QgrOn/8f2+c8/D9X2hRANCAAScOr0TnqWDyAYRSTmOiWdb8zaHCBRQ\\nvE2JdOmi/qaDL+nxIbM9huZ6oquDj6dZ5EPLV5W8ablz4n6MZFSL5ukk\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"62a5e3e77952679c38b8e0769c1ad973c27b2fe4",
"filename":"backend/wallet/Org1/Org1 CA Admin.id",
"status":"removed",
"additions":0,
"deletions":1,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/bfc94a81cf319425f8322908210b79e455a4bfa2/backend/wallet/Org1/Org1%20CA%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/bfc94a81cf319425f8322908210b79e455a4bfa2/backend/wallet/Org1/Org1%20CA%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20CA%20Admin.id?ref=bfc94a81cf319425f8322908210b79e455a4bfa2",
"patch":"@@ -1 +0,0 @@\n-{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBoTCCAUegAwIBAgIUG3zv4ODuuykGTsHpYnUPZYBLXDIwCgYIKoZIzj0EAwIw\\nEjEQMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDQyMDQ2MDBaFw0yMjAzMDQyMDUx\\nMDBaMCExDzANBgNVBAsTBmNsaWVudDEOMAwGA1UEAxMFYWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAT6wIjqQlcXPCsmGp5vO/axqILu1X0ftaTTqlviLLIn\\nseTCFwWZMmizzKNuvrHnPnH6TKCrf8ODQ12urfkhXrW3o2wwajAOBgNVHQ8BAf8E\\nBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQU2fKkgHZWwJw5RY7/TVfp8fg4\\nSUwwKwYDVR0jBCQwIoAgAToqafW82VnK2eyhVuvp0GB8Ni7L2WiPf3FgDx2x+Ykw\\nCgYIKoZIzj0EAwIDSAAwRQIhAPkLBMjzyG0wv4yd/3E0BY+CEsizSmYCOl2Hcsng\\nkWrCAiA7nH48ALMvum8B20QmkbYfMRVQjC9aTbAGosa/ozXzpA==\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgOO5NGzguj7TqmMYU\\nap848RnXcXau7ZoRCIN3L+F+uYuhRANCAAT6wIjqQlcXPCsmGp5vO/axqILu1X0f\\ntaTTqlviLLInseTCFwWZMmizzKNuvrHnPnH6TKCrf8ODQ12urfkhXrW3\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"ebf906e8a45390b5916287949c832b8177965929",
"filename":"chaincode/README.md",
"status":"added",
"additions":56,
"deletions":0,
"changes":56,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/chaincode/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/chaincode/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/README.md?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,56 @@\n+# Instruction of integrating chaincode to end-to-end app in specific VM\n+## Set up chaincode on specific VM (GCP) on top of backend and frontend\n+1. In GCP, clone the EVCharger git repo \n+\n+2. Copy <em>chaincode</em> directory into  <em>fabric-samples/chaincode/ </em>\n+\n+3. Create <em>EVCharger</em> directory to contain chaincode \n+\n+3. In /chaincode// directory , run  `$ npm install `\n+ \n+4. Run \n+`$ node enrollAdmin.js`\n+\n+5. Run startFabric.sh file \n+ `$ ./startFabric.sh`\n+\n+6. Create EVChargerApp/ directory and move frontend/ and backend/ directory. \n+ `$ ..... [something here]`\n+\n+\n+7. Inside /backend// directory, create /wallet/ directory and copy [identityUser]  from /chaincode directory \n+\n+\n+8. Inside /backend// directory, create /gateway/ directory and copy [connection-profile.json] from [/testnetworkorganization]// directory \n+\n+\n+9. Edit [config.js] in backend/ directory as wallet directory path, wallet directory name, connection directory path, connection directory name, \n+\n+`[maybe can copy snipet of code here]`\n+\n+10. Run  `npm instal`  in <em> backend directory \n+ \n+11. Run `<code>npm start </code>` to monitor the backend services\n+\n+12. In GCP\u2019s interface,  edit firewall rules to allow matching port (8000) to backend \n+\n+14. Test API backend call on GCP\u2019s VM  \n+\n+`curl \u2014request POST localhost:8000/device/register \u2014header \u2018Content-Type: application/json\u2019 \u2014data-raw \u2018{\u201cbrand\u201d: \u201cMicrosoft\u201d,\u201dmodel\u201d: \u201cTwo\u201d,\u201dMac\u201d: \u201c89:334:00:89\u201d,\u201dpowerType\u201d: \u201cAC\u201d,\u201dlocation\u201d: {\u201clong\u201d: \u201c56\u201d,\u201dlat\u201d: \u201c45\u201d}}\u2019`\n+Result: \n+[maybe screenshot]\n+\n+15. Edit  [config.js ] by server IP to the IP  in GCP\u2019s interface \u2026. \n+`[maybe can copy snipet of code here]`\n+\n+15. Run `npm install`  in / frontend/ directory \n+ \n+11. Run <code>npm start </code> to see front-end interaction \n+\n+12. Similar to the equivalent step in frontend of GCP\u2019s interface,  edit firewall rules to allow matching port (3000) to frontend\n+---\n+##  Instruction/ Animation for configurations within GCP ???\n+\n+\n+\n+"
},
{
"sha":"b9003801d940f82b0a2ec2f78aca983afd86d90c",
"filename":"chaincode/lib/controller-device-contract.js",
"status":"modified",
"additions":54,
"deletions":63,
"changes":117,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/chaincode/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/chaincode/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/lib/controller-device-contract.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -1,3 +1,4 @@\n+\n /*\n  * SPDX-License-Identifier: Apache-2.0\n  */\n@@ -17,24 +18,41 @@ class ControllerDeviceContract extends Contract {\n     async initLedger(ctx) {\n         console.info('============= START : Initialize Ledger ===========');\n \n-        \n-        const controller = {};\n-        const device = {};\n \n-        await ctx.stub.putState(0, Buffer.from(JSON.stringify(controller)));\n-        await ctx.stub.putState(0, Buffer.from(JSON.stringify(device)));\n \n         console.info('============= END : Initialize Ledger ===========');\n     }\n \n+    async getAllControllers(ctx) {\n+        console.info('============= START : Get All Controllers ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"controller\"\n+            }\n+        };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Controllers ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n     async registerController(ctx, controllerName, serviceProvider, long, lat) {\n         console.info('============= START : Register Controller ===========');\n \n-        /*\n-        FIX: Controller ID can be converted to auto-increment internally\n-             docType: 'controller' (Review the need for docType attribute)\n-        */\n-\n         this.controllerID++;\n         const recControllerID = \"CONTR-\" + this.controllerID;\n         console.log(\"this.controllerID = \" + this.controllerID);\n@@ -71,32 +89,6 @@ class ControllerDeviceContract extends Contract {\n         console.info('============= END : Update Controller ===========');\n     }\n \n-    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n-        console.info('============= START : Register Device ===========');\n-\n-        this.deviceID++;\n-        const recDeviceID = \"DEV-\" + this.deviceID;\n-        console.log(\"this.deviceID = \" + this.deviceID);\n-\n-        const device = {\n-            deviceID: recDeviceID,\n-            docType: \"device\",\n-            brand: brand,\n-            model: model,\n-            macAddress: MAC,\n-            powerType: powerType,\n-            inUse: false,\n-            location: { \n-                long: long,\n-                lat: lat\n-            }\n-        };\n-\n-        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n-\n-        console.info('============= END : Register Device ===========');\n-    }\n-\n     async assignController(ctx, deviceID, controllerID) {\n         console.info('============= START : Assign Controller ===========');\n \n@@ -129,6 +121,32 @@ class ControllerDeviceContract extends Contract {\n         console.info('============= END : Change Controller ===========');\n     }\n \n+    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n+        console.info('============= START : Register Device ===========');\n+\n+        this.deviceID++;\n+        const recDeviceID = \"DEV-\" + this.deviceID;\n+        console.log(\"this.deviceID = \" + this.deviceID);\n+\n+        const device = {\n+            deviceID: recDeviceID,\n+            docType: \"device\",\n+            brand: brand,\n+            model: model,\n+            macAddress: MAC,\n+            powerType: powerType,\n+            inUse: false,\n+            location: { \n+                long: long,\n+                lat: lat\n+            }\n+        };\n+\n+        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Register Device ===========');\n+    }\n+\n     async getDeviceController(ctx, deviceID) {\n         console.info('============= START : Get Device Controller ===========');\n \n@@ -238,33 +256,6 @@ class ControllerDeviceContract extends Contract {\n         return JSON.stringify(allResults);\n     }\n \n-    async getAllControllers(ctx) {\n-        console.info('============= START : Get All Controllers ===========');\n-\n-        let queryString = {\n-            \"selector\": {\n-                \"docType\":\"controller\"\n-            }\n-        };\n-\n-        const allResults = [];\n-\n-        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n-            const strValue = Buffer.from(value).toString('utf8');\n-            let record;\n-            try {\n-                record = JSON.parse(strValue);\n-            } catch (err) {\n-                console.log(err);\n-                record = strValue;\n-            }\n-            allResults.push({ Key: key, Record: record });\n-        }\n-        console.info(allResults);\n-        console.info('============= END : Get All Controllers ===========');\n-        return JSON.stringify(allResults);\n-    }\n-\n     async updateDevice(ctx, deviceID, currentTemp) {\n         console.info('============= START : Update Device ===========');\n "
},
{
"sha":"893e06ed4f1b84b9120a0d0504cba2fdbd59cbad",
"filename":"chaincode/package.json",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/chaincode/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/chaincode/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/package.json?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -1,5 +1,5 @@\n {\n-  \"name\": \"EVChargerReg\",\n+  \"name\": \"EVChargerReger\",\n   \"version\": \"0.0.0\",\n   \"description\": \"My Smart Contract\",\n   \"main\": \"index.js\","
},
{
"sha":"4d29575de80483b005c29bfcac5061cd2f45313e",
"filename":"frontend/.gitignore",
"status":"added",
"additions":23,
"deletions":0,
"changes":23,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/.gitignore?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,23 @@\n+# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n+\n+# dependencies\n+/node_modules\n+/.pnp\n+.pnp.js\n+\n+# testing\n+/coverage\n+\n+# production\n+/build\n+\n+# misc\n+.DS_Store\n+.env.local\n+.env.development.local\n+.env.test.local\n+.env.production.local\n+\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*"
},
{
"sha":"167141b94ae0588a74cb2017d51118a9eb26fbec",
"filename":"frontend/README.md",
"status":"added",
"additions":32,
"deletions":0,
"changes":32,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/README.md?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,32 @@\n+# Front End\n+<h2> Setting up the frontend </h2>\n+<hr>\n+The front end will be the interface through which users will interact with the business application.\n+<p> The front end has been designed with React and it connects with the fabric run time using a rest server middleware.\n+</p>\n+\n+<h2> Steps </h2>\n+<ol>\n+    <li> <strong> Install dependencies: </strong>  Navigate to the root folder of the frontend directory and\n+Run <strong> npm install  </strong>to get the required dependencies. You can open the package.json file to see the required packages \n+    </li>\n+    <li> Then the web interface will be shown at  <em> http://<strong>ip-of-frontend</strong>:3000 </em>  on your browser to see the running app\n+    where <strong>ip-of-frontend</strong> is configged in corresponding json file \n+    </li>\n+</ol>\n+\n+![Homepage screenshot](./public/documentation/homepage.png?raw=true) <br>\n+\n+<p>In our frontend EV Charger System scenario, \n+we will have 3 users representing the three participants in the business network:</p>\n+<ul>\n+    <li> Devices</li>\n+    <li> Controller </li>\n+    <li> Super Admin </li>\n+</ul>\n+\n+<h2> Please follow these two animations that walks through the end-user interface of EV Charger</h2>\n+\n+ <img src=\"./public/documentation/walkthrough-1.gif\" width=\"900\" height=\"1000\" /> <br>\n+<img src=\"./public/documentation/walkthrough-2.gif\" width=\"900\" height=\"1000\" /> <br>\n+<hr>"
},
{
"sha":"45d8caaf197263b13bd569459c04bf59a32c2b88",
"filename":"frontend/package.json",
"status":"added",
"additions":46,
"deletions":0,
"changes":46,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/package.json?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,46 @@\n+{\n+  \"name\": \"front-end\",\n+  \"version\": \"0.1.0\",\n+  \"private\": true,\n+  \"dependencies\": {\n+    \"@testing-library/jest-dom\": \"^5.11.4\",\n+    \"@testing-library/react\": \"^11.1.0\",\n+    \"@testing-library/user-event\": \"^12.1.10\",\n+    \"axios\": \"^0.21.1\",\n+    \"bootstrap\": \"^4.6.0\",\n+    \"moment\": \"^2.29.1\",\n+    \"primereact\": \"^6.0.2\",\n+    \"react\": \"^17.0.1\",\n+    \"react-bootstrap\": \"^1.5.1\",\n+    \"react-dom\": \"^17.0.1\",\n+    \"react-moment\": \"^1.1.1\",\n+    \"react-router-bootstrap\": \"^0.25.0\",\n+    \"react-router-dom\": \"^5.2.0\",\n+    \"react-scripts\": \"4.0.3\",\n+    \"web-vitals\": \"^1.0.1\"\n+  },\n+  \"scripts\": {\n+    \"start\": \"react-scripts start\",\n+    \"build\": \"react-scripts build\",\n+    \"test\": \"react-scripts test\",\n+    \"eject\": \"react-scripts eject\"\n+  },\n+  \"eslintConfig\": {\n+    \"extends\": [\n+      \"react-app\",\n+      \"react-app/jest\"\n+    ]\n+  },\n+  \"browserslist\": {\n+    \"production\": [\n+      \">0.2%\",\n+      \"not dead\",\n+      \"not op_mini all\"\n+    ],\n+    \"development\": [\n+      \"last 1 chrome version\",\n+      \"last 1 firefox version\",\n+      \"last 1 safari version\"\n+    ]\n+  }\n+}"
},
{
"sha":"29beeee90f62e53b7048be22ff9ddba35034b81a",
"filename":"frontend/public/documentation/homepage.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/public/documentation/homepage.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/public/documentation/homepage.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/documentation/homepage.png?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1"
},
{
"sha":"e31abca2a1c8b1512beb6d12dee9125efa08d6d4",
"filename":"frontend/public/documentation/walkthrough-1.gif",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/public/documentation/walkthrough-1.gif",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/public/documentation/walkthrough-1.gif",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/documentation/walkthrough-1.gif?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1"
},
{
"sha":"11cbc7ad4e6db422ab4efd1a914162533a725a6c",
"filename":"frontend/public/documentation/walkthrough-2.gif",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/public/documentation/walkthrough-2.gif",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/public/documentation/walkthrough-2.gif",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/documentation/walkthrough-2.gif?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1"
},
{
"sha":"09b781103250c57901da0df13a83302ffc512ff6",
"filename":"frontend/public/index.html",
"status":"added",
"additions":55,
"deletions":0,
"changes":55,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/public/index.html",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/public/index.html",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/index.html?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,55 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+  <head>\n+    <meta charset=\"utf-8\" />\n+    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n+    <meta name=\"theme-color\" content=\"#000000\" />\n+    <meta\n+      name=\"description\"\n+      content=\"Web site created using create-react-app\"\n+    />\n+    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n+    <!--\n+      manifest.json provides metadata used when your web app is installed on a\n+      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n+    -->\n+    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n+\n+\n+    <!--\n+      Notice the use of %PUBLIC_URL% in the tags above.\n+      It will be replaced with the URL of the `public` folder during the build.\n+      Only files inside the `public` folder can be referenced from the HTML.\n+\n+      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n+      work correctly both with client-side routing and a non-root public URL.\n+      Learn how to configure a non-root public URL by running `npm run build`.\n+    -->\n+    <title>React App</title>\n+  </head>\n+  <body>\n+    <noscript>You need to enable JavaScript to run this app.</noscript>\n+    <div id=\"root\"></div>\n+    <!--\n+      This HTML file is a template.\n+      If you open it directly in the browser, you will see an empty page.\n+\n+      You can add webfonts, meta tags, or analytics to this file.\n+      The build step will place the bundled scripts into the <body> tag.\n+\n+      To begin the development, run `npm start` or `yarn start`.\n+      To create a production bundle, use `npm run build` or `yarn build`.\n+    -->\n+\n+    <!-- Latest compiled and minified CSS -->\n+    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n+\n+    <!-- jQuery library -->\n+    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n+\n+    <!-- Latest compiled JavaScript -->\n+    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n+\n+  </body>\n+</html>"
},
{
"sha":"19d2d08b45070e5a15bd8045597801bf0b07905e",
"filename":"frontend/src/App.css",
"status":"added",
"additions":24,
"deletions":0,
"changes":24,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/App.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/App.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.css?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,24 @@\n+.App {\n+  text-align: center;\n+}\n+\n+.header {\n+  text-align: center;\n+}\n+\n+.custom-btn-toolbar {\n+  display: inline !important;\n+}\n+\n+.custom-btn-toolbar > .btn {\n+  margin-right: 1rem;\n+}\n+\n+.section-setting {\n+  margin: 2rem;\n+\n+}\n+\n+.tr-heading{\n+  text-align: center;\n+}"
},
{
"sha":"ccfe250838b683ed6b4440637f7c6da7dac53da4",
"filename":"frontend/src/App.js",
"status":"added",
"additions":62,
"deletions":0,
"changes":62,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/App.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/App.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,62 @@\n+import './App.css';\n+\n+import 'primereact/resources/themes/saga-blue/theme.css';\n+import 'primereact/resources/primereact.css';\n+\n+// import 'primeicons/primeicons.css';\n+// import 'primeflex/primeflex.css';\n+\n+import {BrowserRouter, Switch, Route, Link} from 'react-router-dom';\n+\n+import Jumbotron from 'react-bootstrap/Jumbotron';\n+import Container from 'react-bootstrap/Container';\n+import Button from 'react-bootstrap/Button';\n+import ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n+import {LinkContainer} from 'react-router-bootstrap';\n+\n+\n+import HomePage from './components/HomePage';\n+import {DevicePage} from './components/DevicePage';\n+import {ControllerPage} from './components/ControllerPage';\n+import {SuperAdminPage} from './components/SuperAdminPage';\n+\n+\n+function App() {\n+  return (\n+      <>\n+        <BrowserRouter>\n+          <Container className=\"p-3\">\n+            <Jumbotron>\n+              <h1 className=\"header\">Electrical Vehicles Charger Station</h1>\n+\n+              <ButtonToolbar className=\"custom-btn-toolbar\">\n+                <LinkContainer to=\"/home\">\n+                  <Button>Home</Button>\n+                </LinkContainer>\n+                <LinkContainer to=\"/device\">\n+                  <Button>Device</Button>\n+                </LinkContainer>\n+                <LinkContainer to=\"/controller\">\n+                  <Button>Controller</Button>\n+                </LinkContainer>\n+                <LinkContainer to=\"/superAdmin\">\n+                  <Button>Super Admin</Button>\n+                </LinkContainer>\n+              </ButtonToolbar>\n+\n+              <Switch>\n+                <Route path=\"/home\" component={HomePage}/>\n+                <Route path=\"/device\" component={DevicePage}/>\n+                <Route path=\"/controller\" component={ControllerPage}/>\n+                <Route path=\"/superAdmin\" component={SuperAdminPage}/>\n+              </Switch>\n+\n+\n+            </Jumbotron>\n+          </Container>\n+        </BrowserRouter>\n+      </>\n+  );\n+}\n+\n+export default App;"
},
{
"sha":"1f03afeece5ac28064fa3c73a29215037465f789",
"filename":"frontend/src/App.test.js",
"status":"added",
"additions":8,
"deletions":0,
"changes":8,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/App.test.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/App.test.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.test.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,8 @@\n+import { render, screen } from '@testing-library/react';\n+import App from './App';\n+\n+test('renders learn react link', () => {\n+  render(<App />);\n+  const linkElement = screen.getByText(/learn react/i);\n+  expect(linkElement).toBeInTheDocument();\n+});"
},
{
"sha":"996126787ad61400ac76b18ba4244fc8953a4aa9",
"filename":"frontend/src/components/ControllerPage.js",
"status":"added",
"additions":180,
"deletions":0,
"changes":180,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/components/ControllerPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/components/ControllerPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/ControllerPage.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,180 @@\n+import React, { useState } from 'react';\n+import { InputText } from 'primereact/inputtext';\n+import { TabView, TabPanel } from 'primereact/tabview';\n+\n+import { DataTable } from 'primereact/datatable';\n+import { Column } from 'primereact/column';\n+import Table from 'react-bootstrap/Table';\n+import {serverIP} from '../config';\n+\n+import axios from 'axios';\n+\n+export function ControllerPage() {\n+    const [brand, setBrand] = useState('');\n+    const [model, setModel] = useState('');\n+    const [powerType, setPowerType] = useState('');\n+\n+    const [long, setLong] = useState('');\n+    const [lat, setLat] = useState('');\n+\n+    const [controllerId, setControllerId] = useState('');\n+\n+    const [devices, setDevices] = useState([]);\n+    const [command, setCommand] = useState( `\"Please enter\"`);\n+    const [activeIndex, setActiveIndex] = useState(0);\n+\n+    // const [controllerInfo, setControllerInfo] = useState([]);\n+\n+    const defaultURL = `http://${serverIP}:8000/`;\n+\n+    const getControllerDevicesHandler = async (ev) => {\n+        ev.preventDefault();\n+        console.log(`device id is ${controllerId}`);\n+\n+        //NOTE: somehow doesn't work on my end ... very weird anamoly!\n+        // const fetchedRes = await axios({\n+        //     method: 'get',\n+        //     url: 'http://localhost:8000/controller/devices',\n+        //     data: { \n+        //         id: 'CONTR-2',\n+        //         // id: controllerId\n+        //     });\n+\n+        const fetchedRes = await axios({\n+            method: 'get',\n+            url: `${defaultURL}/controller/devices?id=${controllerId}`\n+        });\n+        // console.log(`fetchedRes: ${fetchedRes.data}`);\n+        let res = [];\n+        fetchedRes.data.map(each => res.push(each.Record));\n+        setDevices(res);\n+    };\n+\n+    const registerDeviceHandler = async (ev) => {\n+        ev.preventDefault();\n+\n+        const res = await axios({\n+            method: 'post',\n+            url: `${defaultURL}/device/register`,\n+            data: {\n+                brand: brand,\n+                model: model,\n+                powerType: powerType,\n+                location: {\n+                    long: long,\n+                    lat: lat\n+                }\n+            }\n+        });\n+    };\n+\n+    const commandInDeviceHandler = (data) => {\n+        console.log(`----inside commandInDeviceHandler: lastExecCommand: ${data.lastExecCommand} -----`);\n+        return (\n+            <form onSubmit={(ev) => updateCommandHandler(ev, data)}>\n+     \n+                    <div>\n+                        <InputText value={command}\n+                            onChange={ev => setCommand(ev.target.value)} />\n+                        <button> Change Command</button>\n+                    </div>\n+            </form>\n+        );\n+    }\n+\n+    const updateCommandHandler = async (ev, data) => {\n+        ev.preventDefault();\n+\n+        console.log(`Inside updateCommandHandler(), deviceID: ${data.deviceID}, command: ${ev.target.value}`)\n+\n+        setCommand(ev.target.value);\n+\n+        const res = await axios({\n+            method: 'post',\n+            url: `${defaultURL}/device/executeCommand`,\n+            data: {\n+                deviceID: data.deviceID,\n+                command: command\n+            }\n+        });\n+    }\n+\n+    return (\n+        <>\n+            <TabView activeIndex={activeIndex} onTabChange={(e) => setActiveIndex(e.index)}>\n+                <TabPanel header=\"Show all Device info of Controller\">\n+                    <label> Controller ID:  </label>\n+                    <form onSubmit={getControllerDevicesHandler}>\n+                        <InputText value={controllerId} onChange={e => setControllerId(e.target.value)} />\n+\n+                        <button name=\"display\">Display</button>\n+                    </form>\n+                    {/* <DataTable value={devices}>\n+                        {dynamicColumns}\n+                        </DataTable>  */}\n+                    <p>Here is table of each device and its command</p>\n+                    <Table striped bordered hover size=\"sm\">\n+                        <thead>\n+                            <tr>\n+                                <th>Device</th>\n+                                <th>Update Command</th>\n+                            </tr>\n+                        </thead>\n+                        <tbody>\n+                            {devices ? devices.map(\n+                                (rowData, index) => (\n+                                    <tr key={index}>\n+                                        <td>{rowData.deviceID}</td>\n+                                        <td>{commandInDeviceHandler(rowData)}</td>\n+                                    </tr>))\n+                                : <tr><td></td></tr>}\n+                        </tbody>\n+                    </Table>\n+                </TabPanel>\n+                <TabPanel header=\"Register Device\">\n+                    <form onSubmit={registerDeviceHandler}>\n+                        <Table striped bordered hover size=\"sm\">\n+                            <tbody>\n+                                <tr>\n+                                    <td>\n+                                        <label>Device Brand:</label>\n+                                        <InputText value={brand} onChange={(e) => setBrand(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Model:</label>\n+                                        <InputText value={model} onChange={(e) => setModel(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Power Type:</label>\n+                                        <InputText value={powerType} onChange={(e) => setPowerType(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Longtitude:</label>\n+                                        <InputText value={long} onChange={(e) => setLong(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Latitude:</label>\n+                                        <InputText value={lat} onChange={(e) => setLat(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <button name=\"submit\">Register</button>\n+                                    </td>\n+                                </tr>\n+                            </tbody>\n+                        </Table>\n+                    </form>\n+                </TabPanel>\n+            </TabView>\n+        </>\n+    );\n+}\n\\ No newline at end of file"
},
{
"sha":"7006f2c435a2cee296eadf489d2480a5f04bbc30",
"filename":"frontend/src/components/DevicePage.js",
"status":"added",
"additions":184,
"deletions":0,
"changes":184,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,184 @@\n+import React, { useState } from 'react';\n+import { InputText } from 'primereact/inputtext';\n+import {InputSwitch} from 'primereact/inputswitch';\n+import Table from 'react-bootstrap/Table';\n+import Moment from 'react-moment';\n+import {serverIP} from '../config';\n+\n+import axios from 'axios';\n+\n+export function DevicePage() {\n+  //const defaultURL = 'http://localhost:8000/device/';\n+\n+  const [deviceId, setDeviceId] = useState('');\n+  const [controllerId, setControllerId] = useState('');\n+  const [brand, setBrand] = useState('');\n+  const [model, setModel] = useState('');\n+  const [mac, setMac] = useState('');\n+  const [powerType, setPowerType] = useState('');\n+  const [long, setLong] = useState('');\n+  const [lat, setLat] = useState('');\n+  const [lastSeen, setLastSeen] = useState('');\n+  const [temp, setTemperature] = useState('');\n+  const [status, setStatus] = useState('');\n+  const [lastCommand, setLastCommand] = useState('');\n+  const [inputTemp, setInputTemperature] = useState('');\n+  const [inputStatus, setInputStatus] = useState(false);\n+  \n+\n+  const getDeviceInformationIdHandler = async ev => {\n+    ev.preventDefault();\n+    // try {\n+    console.log('deviceId selected ' + deviceId);\n+\n+    const res = await axios({\n+      method: 'get',\n+      //url: defaultURL + 'controller',\n+      url: 'http://' + serverIP +  ':8000/device/id',\n+      params: {\n+        deviceId: deviceId,\n+      },\n+    });\n+    console.log('json ' + res.data);\n+    setControllerId(res.data.controllerID);\n+    setMac(res.data.macAddress);\n+    setBrand(res.data.brand);\n+    setModel(res.data.model);\n+    setPowerType(res.data.powerType);\n+    res.data.location ? setLong(res.data.location.long) : setLong('');\n+    res.data.location ? setLat(res.data.location.lat) : setLat('');\n+    setLastSeen(res.data.lastSeen);\n+    setLastCommand(res.data.lastExecCommand);\n+    res.data.inUse ? setStatus(res.data.inUse + \"\") : setStatus('');\n+    setTemperature(res.data.currentTemp);\n+\n+    // } catch (e) {\n+    //     console.error(e)\n+    // }\n+  };\n+\n+  const setCurrentTempHandler = async (ev) => {\n+    ev.preventDefault();\n+\n+    await axios({\n+      method: 'post',\n+      \n+      url: 'http://localhost:8000/device/update',\n+      data: {\n+        deviceId: deviceId,\n+        currentTemp: inputTemp,\n+      },\n+    });\n+\n+  }\n+\n+  const setInUseStatus = async (e) => {\n+\n+    setInputStatus(e.value);\n+   \n+    await axios({\n+      method: 'post',\n+      \n+      url: 'http://localhost:8000/device/updateStatus',\n+      data: {\n+        deviceId: deviceId,\n+      },\n+    });\n+\n+  }\n+\n+  return (\n+    <div>\n+      <section className=\"section-setting\">\n+      <form onSubmit={getDeviceInformationIdHandler}>\n+        {/* <label htmlFor=\"Type in deviceID\">Get Device Details </label> */}\n+        <label> Device ID: </label>\n+        <InputText\n+          value={deviceId}\n+          onChange={e => setDeviceId(e.target.value)}\n+        />\n+        <button name=\"submit\"> Submit </button>\n+      </form>\n+      </section>\n+\n+      <section className=\"section-setting\">\n+        <Table striped bordered hover size=\"sm\">\n+          <thead >\n+            <tr className =\"tr-heading\">\n+              <th colSpan=\"2\">Device Information </th>\n+            </tr>\n+          </thead>\n+          <tbody>\n+            <tr>\n+                <th>Device ID</th>\n+                <td> {deviceId}</td>\n+            </tr>\n+            <tr>\n+                <th>Brand</th>\n+                <td> {brand} </td>\n+            </tr>\n+            <tr>\n+                <th>Model</th>\n+                <td> {model} </td>\n+            </tr>\n+            <tr>\n+                <th>MAC Address</th>\n+                <td> {mac} </td>\n+            </tr>\n+            <tr>\n+                <th>Power Type</th>\n+                <td> {powerType} </td>\n+            </tr>\n+            <tr>\n+                <th>Controller ID</th>\n+                <td> {controllerId} </td>\n+            </tr>\n+            <tr>\n+                <th>Location - Longitude</th>\n+                <td>{long} </td>\n+            </tr>\n+            <tr>\n+                <th>Location - Latitude </th>\n+                <td> {lat}</td>\n+            </tr>\n+            <tr>\n+                <th>Date Last Seen</th>\n+                <td> { lastSeen ? <Moment>{lastSeen}</Moment> : '' } </td>\n+            </tr>\n+            <tr>\n+                <th>Temperature</th>\n+                <td> {temp}</td>\n+            </tr>\n+            <tr>\n+                <th>In-Use Status</th>\n+                <td> {status}</td>\n+            </tr>\n+            <tr>\n+                <th>Last Executed Command</th>\n+                <td> {lastCommand}</td>\n+            </tr>\n+          </tbody>\n+        </Table>\n+      </section>\n+      {/* <label> Current Device </label> */}\n+\n+      <section>\n+        <h4>\n+          Update Device's Current Temperature\n+        </h4>\n+      <form onSubmit={setCurrentTempHandler}>\n+        <label> Current Temperature </label>\n+        <InputText\n+          value={inputTemp}\n+          onChange={e => setInputTemperature(e.target.value)}\n+        />\n+        <button name=\"submit\"> Set Temperature </button>\n+      </form>\n+      </section>\n+      <section>\n+        <h4>Set In-Use Status</h4>\n+        <InputSwitch checked={inputStatus} onChange={setInUseStatus} />\n+      </section>\n+    </div>\n+  );\n+}"
},
{
"sha":"421729c907dfd16ecbd6315cc022c93c76cb70f6",
"filename":"frontend/src/components/HomePage.js",
"status":"added",
"additions":27,
"deletions":0,
"changes":27,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/components/HomePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/components/HomePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/HomePage.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,27 @@\n+import React from \"react\";\n+import Jumbotron from 'react-bootstrap/Jumbotron';\n+import Container from 'react-bootstrap/Container';\n+\n+\n+class HomePage extends React.Component {\n+\n+    render() {\n+        return (\n+            <Container className=\"p-3\">\n+                <Jumbotron>\n+                    <ul>\n+                        <li>\n+                            A blockchain registry for <b>Electric Vehicle Charging Stations</b>.\n+                        </li>\n+                        <li>\n+                            The system will <em>track, manage and enable accurate and reliable\n+                    data sharing</em> on an open platform where operators provide stations to serve owners of electric vehicles and all the participants are protected from unfair practises.\n+                        </li>\n+                    </ul>\n+                </Jumbotron>\n+            </Container>\n+        );\n+    }\n+}\n+\n+export default HomePage;"
},
{
"sha":"374171788fc25c1af6b8178192dcd2be6c44de21",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"added",
"additions":215,
"deletions":0,
"changes":215,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,215 @@\n+import React, { useState } from 'react';\n+import { InputText } from 'primereact/inputtext';\n+import { TabView, TabPanel } from 'primereact/tabview';\n+import { Dropdown } from 'primereact/dropdown';\n+import axios from 'axios';\n+import {serverIP} from '../config';\n+// import 'primereact/resources/themes/saga-blue/theme.css';\n+// import 'primereact/resources/primereact.css';\n+\n+export function SuperAdminPage() {\n+\n+    const [controllerName, setControllerName] = useState('');\n+    const [serviceProvider, setServiceProvider] = useState('');\n+    const [long, setLong] = useState('');\n+    const [lat, setLat] = useState('');\n+    const [activeIndex, setActiveIndex] = useState(0);\n+    const [devices, setDevices] = useState('');\n+    const [controllers, setControllers] = useState([]);\n+    const [controller, setController] = useState('');\n+    const [contDropdown, setContDropdown] = useState([]);\n+\n+    const registerControllerHandler = async (ev) => {\n+        ev.preventDefault();\n+        // try {\n+\n+        const res = await axios({\n+            method: 'post',\n+            //url: defaultURL + 'controller',\n+            url: 'http://' + serverIP + ':8000/controller/register',\n+            data: {\n+                controllerName: controllerName,\n+                serviceProvider: serviceProvider,\n+                location: {\n+                    long: long,\n+                    lat: lat\n+                }\n+            }\n+        });\n+    };\n+\n+    const assignControllerEvent = async (ev, contId, devId, index) => {\n+        ev.preventDefault();\n+\n+        contDropdown[index] = contId;\n+        setContDropdown(contDropdown);\n+\n+        const res1 = await axios({\n+            method: 'post',\n+            url: 'http://' + serverIP + ':8000/controller/assign',\n+            data: {\n+                deviceID: devId,\n+                controllerID: contId\n+            }\n+        });\n+\n+        const res = await axios({\n+            method: 'get',\n+            url: 'http://' + serverIP + ':8000/device/all'\n+        });\n+\n+        let result = [];\n+        res.data.map(record => {\n+            result.push(record.Record);\n+        });\n+        setDevices(result);\n+\n+        const resCont = await axios({\n+            method: 'get',\n+            url: 'http://' + serverIP + ':8000/controller/all'\n+        });\n+        let contResult = [];\n+        resCont.data.map(record => {\n+            contResult.push(record.Record.controllerID);\n+        });\n+        setControllers(contResult);\n+    }\n+\n+    const changeControllerEvent = async (ev, contId, devId, index) => {\n+        ev.preventDefault();\n+\n+        contDropdown[index] = contId;\n+        setContDropdown(contDropdown);\n+\n+        const res1 = await axios({\n+            method: 'post',\n+            url: 'http://' + serverIP + ':8000/controller/change',\n+            data: {\n+                deviceID: devId,\n+                newControllerID: contId\n+            }\n+        });\n+\n+        const res = await axios({\n+            method: 'get',\n+            url: 'http://' + serverIP + ':8000/device/all'\n+        });\n+\n+        let result = [];\n+        res.data.map(record => {\n+            result.push(record.Record);\n+        });\n+        setDevices(result);\n+\n+        const resCont = await axios({\n+            method: 'get',\n+            url: 'http://' + serverIP + ':8000/controller/all'\n+        });\n+        let contResult = [];\n+        resCont.data.map(record => {\n+            contResult.push(record.Record.controllerID);\n+        });\n+        setControllers(contResult);\n+    }\n+\n+    const tabChangeHandler = async (ev) => {\n+        setActiveIndex(ev.index);\n+        console.log('inside get devices');\n+        const res = await axios({\n+            method: 'get',\n+            url: 'http://' + serverIP + ':8000/device/all'\n+        });\n+\n+        let result = [];\n+        res.data.map(record => {\n+            result.push(record.Record);\n+        });\n+        setDevices(result);\n+\n+        const resCont = await axios({\n+            method: 'get',\n+            url: 'http://' + serverIP + ':8000/controller/all'\n+        });\n+        let contRestult = [];\n+        resCont.data.map(record => {\n+            contRestult.push(record.Record.controllerID);\n+        });\n+        setControllers(contRestult);\n+    }\n+\n+    return (\n+        <div>\n+            <TabView activeIndex={activeIndex} onTabChange={tabChangeHandler}>\n+                <TabPanel header=\"Register Controller\">\n+                    <label> Fill new Controller Info: </label>\n+                    <form onSubmit={registerControllerHandler}>\n+                        <table>\n+                            <tbody>\n+                                <tr>\n+                                    <td>\n+                                        <label>Controller Name:</label>\n+                                        <InputText value={controllerName} onChange={(e) => setControllerName(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Controller SP:</label>\n+                                        <InputText value={serviceProvider} onChange={(e) => setServiceProvider(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Longtitude:</label>\n+                                        <InputText value={long} onChange={(e) => setLong(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Latitude:</label>\n+                                        <InputText value={lat} onChange={(e) => setLat(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <button name=\"submit\">Register</button>\n+                                    </td>\n+                                </tr>\n+                            </tbody>\n+                        </table>\n+                    </form>\n+                </TabPanel>\n+                <TabPanel header=\"Assign/Change Controller\">\n+                    <table>\n+                        <thead>\n+                            <tr>\n+                                <th>Device ID</th>\n+                                <th>Controller ID</th>\n+                                <th>Action</th>\n+                                <th>New Controller ID</th>\n+                            </tr>\n+                        </thead>\n+                        <tbody>\n+                            {devices ? devices.map((rowData, index) => (\n+                                <tr key={index}>\n+                                    <td>{rowData.deviceID}</td>\n+                                    <td>{rowData.controllerID ? rowData.controllerID : 'Not Assigned'}</td>\n+                                    <td>\n+                                        {rowData.controllerID ? <label>Change</label> : <label>Assign</label>}\n+                                    </td>\n+                                    <td>\n+                                        {rowData.controllerID ?\n+                                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => changeControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\" />\n+                                            :\n+                                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => assignControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\" />\n+                                        }\n+                                    </td>\n+                                </tr>\n+                            )) : <tr><td></td></tr>}\n+                        </tbody>\n+                    </table>\n+                </TabPanel>\n+            </TabView>\n+        </div>\n+    );\n+}\n+"
},
{
"sha":"2236c02cbb5b8edffd9acc72b215585c34a34d8c",
"filename":"frontend/src/config.js",
"status":"added",
"additions":5,
"deletions":0,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/config.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/config.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/config.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,5 @@\n+const serverIP = 'localhost';\n+\n+module.exports = {\n+    serverIP: serverIP\n+};\n\\ No newline at end of file"
},
{
"sha":"ec2585e8c0bb8188184ed1e0703c4c8f2a8419b0",
"filename":"frontend/src/index.css",
"status":"added",
"additions":13,
"deletions":0,
"changes":13,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/index.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/index.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/index.css?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,13 @@\n+body {\n+  margin: 0;\n+  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n+    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n+    sans-serif;\n+  -webkit-font-smoothing: antialiased;\n+  -moz-osx-font-smoothing: grayscale;\n+}\n+\n+code {\n+  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n+    monospace;\n+}"
},
{
"sha":"94ae53622caa0fb3f6f32705d54be137517b4b88",
"filename":"frontend/src/index.js",
"status":"added",
"additions":16,
"deletions":0,
"changes":16,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/index.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,16 @@\n+import React from 'react';\n+import ReactDOM from 'react-dom';\n+import './index.css';\n+import App from './App';\n+// Importing the Bootstrap CSS\n+import 'bootstrap/dist/css/bootstrap.min.css';\n+// import reportWebVitals from './reportWebVitals';\n+\n+ReactDOM.render(\n+  <React.StrictMode>\n+    <App />\n+  </React.StrictMode>,\n+  document.getElementById('root')\n+);\n+\n+// reportWebVitals();"
},
{
"sha":"9dfc1c058cebbef8b891c5062be6f31033d7d186",
"filename":"frontend/src/logo.svg",
"status":"added",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/logo.svg",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/logo.svg",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/logo.svg?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\"><g fill=\"#61DAFB\"><path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/><circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/><path d=\"M520.5 78.1z\"/></g></svg>\n\\ No newline at end of file"
},
{
"sha":"5253d3ad9e6be6690549cb255f5952337b02401d",
"filename":"frontend/src/reportWebVitals.js",
"status":"added",
"additions":13,
"deletions":0,
"changes":13,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/reportWebVitals.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/reportWebVitals.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/reportWebVitals.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,13 @@\n+const reportWebVitals = onPerfEntry => {\n+  if (onPerfEntry && onPerfEntry instanceof Function) {\n+    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n+      getCLS(onPerfEntry);\n+      getFID(onPerfEntry);\n+      getFCP(onPerfEntry);\n+      getLCP(onPerfEntry);\n+      getTTFB(onPerfEntry);\n+    });\n+  }\n+};\n+\n+export default reportWebVitals;"
},
{
"sha":"8f2609b7b3e0e3897ab3bcaad13caf6876e48699",
"filename":"frontend/src/setupTests.js",
"status":"added",
"additions":5,
"deletions":0,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/setupTests.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/frontend/src/setupTests.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/setupTests.js?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1",
"patch":"@@ -0,0 +1,5 @@\n+// jest-dom adds custom jest matchers for asserting on DOM nodes.\n+// allows you to do things like:\n+// expect(element).toHaveTextContent(/react/i)\n+// learn more: https://github.com/testing-library/jest-dom\n+import '@testing-library/jest-dom';"
},
{
"sha":"73c6446bb04feddd6be267f25c14a64e53f6c04b",
"filename":"images/BlockchainArchitecture.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/images/BlockchainArchitecture.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/images/BlockchainArchitecture.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/images/BlockchainArchitecture.png?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1"
},
{
"sha":"6a5ad2c322df9eee8db5118aa5bfbdae0399e13d",
"filename":"images/EVCharger-HLF.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/images/EVCharger-HLF.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/images/EVCharger-HLF.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/images/EVCharger-HLF.png?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1"
},
{
"sha":"0fc272d41327b6523253367d3023e2738637321c",
"filename":"images/IOTRegStateDiagram.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/690e93ddd45a8762e33c678075a8fab27c2c94a1/images/IOTRegStateDiagram.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/690e93ddd45a8762e33c678075a8fab27c2c94a1/images/IOTRegStateDiagram.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/images/IOTRegStateDiagram.png?ref=690e93ddd45a8762e33c678075a8fab27c2c94a1"
}
]
},
{
"commit_sha":"21451ed1233b5e3a54a92f6ef2e0f272045bfcdb",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjIxNDUxZWQxMjMzYjVlM2E1NGE5MmY2ZWYyZTBmMjcyMDQ1YmZjZGI=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb",
"commit_date":"2021-03-17T05:51:56Z",
"files":[
{
"sha":"ebf906e8a45390b5916287949c832b8177965929",
"filename":"chaincode/README.md",
"status":"modified",
"additions":55,
"deletions":5,
"changes":60,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/chaincode/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/chaincode/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/README.md?ref=21451ed1233b5e3a54a92f6ef2e0f272045bfcdb",
"patch":"@@ -1,6 +1,56 @@\n-# Chain code\n-<h2> Understanding the chain code </h2>\n-<hr>\n+# Instruction of integrating chaincode to end-to-end app in specific VM\n+## Set up chaincode on specific VM (GCP) on top of backend and frontend\n+1. In GCP, clone the EVCharger git repo \n+\n+2. Copy <em>chaincode</em> directory into  <em>fabric-samples/chaincode/ </em>\n+\n+3. Create <em>EVCharger</em> directory to contain chaincode \n+\n+3. In /chaincode// directory , run  `$ npm install `\n+ \n+4. Run \n+`$ node enrollAdmin.js`\n+\n+5. Run startFabric.sh file \n+ `$ ./startFabric.sh`\n+\n+6. Create EVChargerApp/ directory and move frontend/ and backend/ directory. \n+ `$ ..... [something here]`\n+\n+\n+7. Inside /backend// directory, create /wallet/ directory and copy [identityUser]  from /chaincode directory \n+\n+\n+8. Inside /backend// directory, create /gateway/ directory and copy [connection-profile.json] from [/testnetworkorganization]// directory \n+\n+\n+9. Edit [config.js] in backend/ directory as wallet directory path, wallet directory name, connection directory path, connection directory name, \n+\n+`[maybe can copy snipet of code here]`\n+\n+10. Run  `npm instal`  in <em> backend directory \n+ \n+11. Run `<code>npm start </code>` to monitor the backend services\n+\n+12. In GCP\u2019s interface,  edit firewall rules to allow matching port (8000) to backend \n+\n+14. Test API backend call on GCP\u2019s VM  \n+\n+`curl \u2014request POST localhost:8000/device/register \u2014header \u2018Content-Type: application/json\u2019 \u2014data-raw \u2018{\u201cbrand\u201d: \u201cMicrosoft\u201d,\u201dmodel\u201d: \u201cTwo\u201d,\u201dMac\u201d: \u201c89:334:00:89\u201d,\u201dpowerType\u201d: \u201cAC\u201d,\u201dlocation\u201d: {\u201clong\u201d: \u201c56\u201d,\u201dlat\u201d: \u201c45\u201d}}\u2019`\n+Result: \n+[maybe screenshot]\n+\n+15. Edit  [config.js ] by server IP to the IP  in GCP\u2019s interface \u2026. \n+`[maybe can copy snipet of code here]`\n+\n+15. Run `npm install`  in / frontend/ directory \n+ \n+11. Run <code>npm start </code> to see front-end interaction \n+\n+12. Similar to the equivalent step in frontend of GCP\u2019s interface,  edit firewall rules to allow matching port (3000) to frontend\n+---\n+##  Instruction/ Animation for configurations within GCP ???\n+\n+\n+\n \n-<h2> TO DO:</h2>\n-<hr>"
},
{
"sha":"167141b94ae0588a74cb2017d51118a9eb26fbec",
"filename":"frontend/README.md",
"status":"modified",
"additions":7,
"deletions":3,
"changes":10,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/README.md?ref=21451ed1233b5e3a54a92f6ef2e0f272045bfcdb",
"patch":"@@ -10,11 +10,12 @@ The front end will be the interface through which users will interact with the b\n     <li> <strong> Install dependencies: </strong>  Navigate to the root folder of the frontend directory and\n Run <strong> npm install  </strong>to get the required dependencies. You can open the package.json file to see the required packages \n     </li>\n-    <li> Navigate to <strong> http://localhost:3000 </strong>  on your browser to see the running app\n+    <li> Then the web interface will be shown at  <em> http://<strong>ip-of-frontend</strong>:3000 </em>  on your browser to see the running app\n+    where <strong>ip-of-frontend</strong> is configged in corresponding json file \n     </li>\n </ol>\n \n-![alt text](./public/images/homepage.png?raw=true) <br>\n+![Homepage screenshot](./public/documentation/homepage.png?raw=true) <br>\n \n <p>In our frontend EV Charger System scenario, \n we will have 3 users representing the three participants in the business network:</p>\n@@ -24,5 +25,8 @@ we will have 3 users representing the three participants in the business network\n     <li> Super Admin </li>\n </ul>\n \n-<h2> TO DO:</h2>\n+<h2> Please follow these two animations that walks through the end-user interface of EV Charger</h2>\n+\n+ <img src=\"./public/documentation/walkthrough-1.gif\" width=\"900\" height=\"1000\" /> <br>\n+<img src=\"./public/documentation/walkthrough-2.gif\" width=\"900\" height=\"1000\" /> <br>\n <hr>"
},
{
"sha":"29beeee90f62e53b7048be22ff9ddba35034b81a",
"filename":"frontend/public/documentation/homepage.png",
"status":"renamed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/public/documentation/homepage.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/public/documentation/homepage.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/documentation/homepage.png?ref=21451ed1233b5e3a54a92f6ef2e0f272045bfcdb",
"previous_filename":"frontend/public/images/homepage.png"
},
{
"sha":"e31abca2a1c8b1512beb6d12dee9125efa08d6d4",
"filename":"frontend/public/documentation/walkthrough-1.gif",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/public/documentation/walkthrough-1.gif",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/public/documentation/walkthrough-1.gif",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/documentation/walkthrough-1.gif?ref=21451ed1233b5e3a54a92f6ef2e0f272045bfcdb"
},
{
"sha":"11cbc7ad4e6db422ab4efd1a914162533a725a6c",
"filename":"frontend/public/documentation/walkthrough-2.gif",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/public/documentation/walkthrough-2.gif",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/public/documentation/walkthrough-2.gif",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/documentation/walkthrough-2.gif?ref=21451ed1233b5e3a54a92f6ef2e0f272045bfcdb"
},
{
"sha":"a11777cc471a4344702741ab1c8a588998b1311a",
"filename":"frontend/public/favicon.ico",
"status":"removed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/public/favicon.ico",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/public/favicon.ico",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/favicon.ico?ref=0a314541567ea27ff4a0211b6d4db48cec0212ac"
},
{
"sha":"fc44b0a3796c0e0a64c3d858ca038bd4570465d9",
"filename":"frontend/public/logo192.png",
"status":"removed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/public/logo192.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/public/logo192.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/logo192.png?ref=0a314541567ea27ff4a0211b6d4db48cec0212ac"
},
{
"sha":"a4e47a6545bc15971f8f63fba70e4013df88a664",
"filename":"frontend/public/logo512.png",
"status":"removed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/public/logo512.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/public/logo512.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/logo512.png?ref=0a314541567ea27ff4a0211b6d4db48cec0212ac"
},
{
"sha":"080d6c77ac21bb2ef88a6992b2b73ad93daaca92",
"filename":"frontend/public/manifest.json",
"status":"removed",
"additions":0,
"deletions":25,
"changes":25,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/public/manifest.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/public/manifest.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/manifest.json?ref=0a314541567ea27ff4a0211b6d4db48cec0212ac",
"patch":"@@ -1,25 +0,0 @@\n-{\n-  \"short_name\": \"React App\",\n-  \"name\": \"Create React App Sample\",\n-  \"icons\": [\n-    {\n-      \"src\": \"favicon.ico\",\n-      \"sizes\": \"64x64 32x32 24x24 16x16\",\n-      \"type\": \"image/x-icon\"\n-    },\n-    {\n-      \"src\": \"logo192.png\",\n-      \"type\": \"image/png\",\n-      \"sizes\": \"192x192\"\n-    },\n-    {\n-      \"src\": \"logo512.png\",\n-      \"type\": \"image/png\",\n-      \"sizes\": \"512x512\"\n-    }\n-  ],\n-  \"start_url\": \".\",\n-  \"display\": \"standalone\",\n-  \"theme_color\": \"#000000\",\n-  \"background_color\": \"#ffffff\"\n-}"
},
{
"sha":"e9e57dc4d41b9b46e05112e9f45b7ea6ac0ba15e",
"filename":"frontend/public/robots.txt",
"status":"removed",
"additions":0,
"deletions":3,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/public/robots.txt",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/public/robots.txt",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/robots.txt?ref=0a314541567ea27ff4a0211b6d4db48cec0212ac",
"patch":"@@ -1,3 +0,0 @@\n-# https://www.robotstxt.org/robotstxt.html\n-User-agent: *\n-Disallow:"
},
{
"sha":"ccfe250838b683ed6b4440637f7c6da7dac53da4",
"filename":"frontend/src/App.js",
"status":"modified",
"additions":0,
"deletions":1,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/src/App.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/src/App.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.js?ref=21451ed1233b5e3a54a92f6ef2e0f272045bfcdb",
"patch":"@@ -9,7 +9,6 @@ import 'primereact/resources/primereact.css';\n import {BrowserRouter, Switch, Route, Link} from 'react-router-dom';\n \n import Jumbotron from 'react-bootstrap/Jumbotron';\n-// import NavBar from 'react-bootstrap/Navbar';\n import Container from 'react-bootstrap/Container';\n import Button from 'react-bootstrap/Button';\n import ButtonToolbar from 'react-bootstrap/ButtonToolbar';"
},
{
"sha":"996126787ad61400ac76b18ba4244fc8953a4aa9",
"filename":"frontend/src/components/ControllerPage.js",
"status":"modified",
"additions":18,
"deletions":15,
"changes":33,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/src/components/ControllerPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/src/components/ControllerPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/ControllerPage.js?ref=21451ed1233b5e3a54a92f6ef2e0f272045bfcdb",
"patch":"@@ -20,13 +20,13 @@ export function ControllerPage() {\n     const [controllerId, setControllerId] = useState('');\n \n     const [devices, setDevices] = useState([]);\n-    const [command, setCommand] = useState('Please enter command');\n-\n+    const [command, setCommand] = useState( `\"Please enter\"`);\n     const [activeIndex, setActiveIndex] = useState(0);\n-    \n+\n     // const [controllerInfo, setControllerInfo] = useState([]);\n \n-    const defaultURL = `http://${serverIP}:8000/controller`;\n+    const defaultURL = `http://${serverIP}:8000/`;\n+\n     const getControllerDevicesHandler = async (ev) => {\n         ev.preventDefault();\n         console.log(`device id is ${controllerId}`);\n@@ -42,17 +42,20 @@ export function ControllerPage() {\n \n         const fetchedRes = await axios({\n             method: 'get',\n-            url: `${defaultURL}/devices?id=${controllerId}`\n+            url: `${defaultURL}/controller/devices?id=${controllerId}`\n         });\n         // console.log(`fetchedRes: ${fetchedRes.data}`);\n+        let res = [];\n+        fetchedRes.data.map(each => res.push(each.Record));\n+        setDevices(res);\n     };\n \n     const registerDeviceHandler = async (ev) => {\n         ev.preventDefault();\n \n         const res = await axios({\n             method: 'post',\n-            url: 'http://' + serverIP + ':8000/device/register',\n+            url: `${defaultURL}/device/register`,\n             data: {\n                 brand: brand,\n                 model: model,\n@@ -69,12 +72,12 @@ export function ControllerPage() {\n         console.log(`----inside commandInDeviceHandler: lastExecCommand: ${data.lastExecCommand} -----`);\n         return (\n             <form onSubmit={(ev) => updateCommandHandler(ev, data)}>\n-                {data.lastExecCommand ?\n-                    <label> data.lastExecCommand</label>\n-                    : \n-                    <InputText value={command}\n-                        onChange={ev => setCommand(ev.target.value)} />}\n-                <button> Change command</button>\n+     \n+                    <div>\n+                        <InputText value={command}\n+                            onChange={ev => setCommand(ev.target.value)} />\n+                        <button> Change Command</button>\n+                    </div>\n             </form>\n         );\n     }\n@@ -88,11 +91,11 @@ export function ControllerPage() {\n \n         const res = await axios({\n             method: 'post',\n-            url: 'http://localhost:8000/device/executeCommand',\n+            url: `${defaultURL}/device/executeCommand`,\n             data: {\n                 deviceID: data.deviceID,\n                 command: command\n-             }\n+            }\n         });\n     }\n \n@@ -130,7 +133,7 @@ export function ControllerPage() {\n                 </TabPanel>\n                 <TabPanel header=\"Register Device\">\n                     <form onSubmit={registerDeviceHandler}>\n-                    <Table striped bordered hover size=\"sm\">\n+                        <Table striped bordered hover size=\"sm\">\n                             <tbody>\n                                 <tr>\n                                     <td>"
},
{
"sha":"421729c907dfd16ecbd6315cc022c93c76cb70f6",
"filename":"frontend/src/components/HomePage.js",
"status":"modified",
"additions":15,
"deletions":6,
"changes":21,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/src/components/HomePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/21451ed1233b5e3a54a92f6ef2e0f272045bfcdb/frontend/src/components/HomePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/HomePage.js?ref=21451ed1233b5e3a54a92f6ef2e0f272045bfcdb",
"patch":"@@ -1,16 +1,25 @@\n import React from \"react\";\n+import Jumbotron from 'react-bootstrap/Jumbotron';\n+import Container from 'react-bootstrap/Container';\n \n \n class HomePage extends React.Component {\n \n-\n     render() {\n         return (\n-            <div>\n-                <center>\n-                    Write description about EVCHarger Registry project \n-                </center>\n-            </div>\n+            <Container className=\"p-3\">\n+                <Jumbotron>\n+                    <ul>\n+                        <li>\n+                            A blockchain registry for <b>Electric Vehicle Charging Stations</b>.\n+                        </li>\n+                        <li>\n+                            The system will <em>track, manage and enable accurate and reliable\n+                    data sharing</em> on an open platform where operators provide stations to serve owners of electric vehicles and all the participants are protected from unfair practises.\n+                        </li>\n+                    </ul>\n+                </Jumbotron>\n+            </Container>\n         );\n     }\n }"
},
{
"sha":"e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
"filename":"frontend/src/components/NavigationBar.js",
"status":"removed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/src/components/NavigationBar.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/src/components/NavigationBar.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/NavigationBar.js?ref=0a314541567ea27ff4a0211b6d4db48cec0212ac"
}
]
},
{
"commit_sha":"0a314541567ea27ff4a0211b6d4db48cec0212ac",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjBhMzE0NTQxNTY3ZWEyN2ZmNGEwMjExYjZkNGRiNDhjZWMwMjEyYWM=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/0a314541567ea27ff4a0211b6d4db48cec0212ac",
"commit_date":"2021-03-17T03:56:50Z",
"files":[
{
"sha":"89e62c6ab46c2b186c52b272074edf37e778a208",
"filename":"frontend/src/components/ControllerPage.js",
"status":"modified",
"additions":3,
"deletions":2,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/src/components/ControllerPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/src/components/ControllerPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/ControllerPage.js?ref=0a314541567ea27ff4a0211b6d4db48cec0212ac",
"patch":"@@ -5,6 +5,7 @@ import { TabView, TabPanel } from 'primereact/tabview';\n import { DataTable } from 'primereact/datatable';\n import { Column } from 'primereact/column';\n import Table from 'react-bootstrap/Table';\n+import {serverIP} from '../config';\n \n import axios from 'axios';\n \n@@ -25,7 +26,7 @@ export function ControllerPage() {\n     \n     // const [controllerInfo, setControllerInfo] = useState([]);\n \n-    const defaultURL = `http://localhost:8000/controller`;\n+    const defaultURL = `http://${serverIP}:8000/controller`;\n     const getControllerDevicesHandler = async (ev) => {\n         ev.preventDefault();\n         console.log(`device id is ${controllerId}`);\n@@ -51,7 +52,7 @@ export function ControllerPage() {\n \n         const res = await axios({\n             method: 'post',\n-            url: 'http://localhost:8000/device/register',\n+            url: 'http://' + serverIP + ':8000/device/register',\n             data: {\n                 brand: brand,\n                 model: model,"
},
{
"sha":"7006f2c435a2cee296eadf489d2480a5f04bbc30",
"filename":"frontend/src/components/DevicePage.js",
"status":"modified",
"additions":51,
"deletions":49,
"changes":100,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=0a314541567ea27ff4a0211b6d4db48cec0212ac",
"patch":"@@ -1,13 +1,14 @@\n import React, { useState } from 'react';\n import { InputText } from 'primereact/inputtext';\n-import { InputSwitch } from 'primereact/inputswitch';\n+import {InputSwitch} from 'primereact/inputswitch';\n import Table from 'react-bootstrap/Table';\n import Moment from 'react-moment';\n+import {serverIP} from '../config';\n \n import axios from 'axios';\n \n export function DevicePage() {\n-  const defaultURL = 'http://localhost:8000/device/';\n+  //const defaultURL = 'http://localhost:8000/device/';\n \n   const [deviceId, setDeviceId] = useState('');\n   const [controllerId, setControllerId] = useState('');\n@@ -23,7 +24,7 @@ export function DevicePage() {\n   const [lastCommand, setLastCommand] = useState('');\n   const [inputTemp, setInputTemperature] = useState('');\n   const [inputStatus, setInputStatus] = useState(false);\n-\n+  \n \n   const getDeviceInformationIdHandler = async ev => {\n     ev.preventDefault();\n@@ -32,7 +33,8 @@ export function DevicePage() {\n \n     const res = await axios({\n       method: 'get',\n-      url: 'http://localhost:8000/device/id',\n+      //url: defaultURL + 'controller',\n+      url: 'http://' + serverIP +  ':8000/device/id',\n       params: {\n         deviceId: deviceId,\n       },\n@@ -60,7 +62,7 @@ export function DevicePage() {\n \n     await axios({\n       method: 'post',\n-\n+      \n       url: 'http://localhost:8000/device/update',\n       data: {\n         deviceId: deviceId,\n@@ -73,10 +75,10 @@ export function DevicePage() {\n   const setInUseStatus = async (e) => {\n \n     setInputStatus(e.value);\n-\n+   \n     await axios({\n       method: 'post',\n-\n+      \n       url: 'http://localhost:8000/device/updateStatus',\n       data: {\n         deviceId: deviceId,\n@@ -88,72 +90,72 @@ export function DevicePage() {\n   return (\n     <div>\n       <section className=\"section-setting\">\n-        <form onSubmit={getDeviceInformationIdHandler}>\n-          {/* <label htmlFor=\"Type in deviceID\">Get Device Details </label> */}\n-          <label> Device ID: </label>\n-          <InputText\n-            value={deviceId}\n-            onChange={e => setDeviceId(e.target.value)}\n-          />\n-          <button name=\"submit\"> Submit </button>\n-        </form>\n+      <form onSubmit={getDeviceInformationIdHandler}>\n+        {/* <label htmlFor=\"Type in deviceID\">Get Device Details </label> */}\n+        <label> Device ID: </label>\n+        <InputText\n+          value={deviceId}\n+          onChange={e => setDeviceId(e.target.value)}\n+        />\n+        <button name=\"submit\"> Submit </button>\n+      </form>\n       </section>\n \n       <section className=\"section-setting\">\n         <Table striped bordered hover size=\"sm\">\n           <thead >\n-            <tr className=\"tr-heading\">\n+            <tr className =\"tr-heading\">\n               <th colSpan=\"2\">Device Information </th>\n             </tr>\n           </thead>\n           <tbody>\n             <tr>\n-              <th>Device ID</th>\n-              <td> {deviceId}</td>\n+                <th>Device ID</th>\n+                <td> {deviceId}</td>\n             </tr>\n             <tr>\n-              <th>Brand</th>\n-              <td> {brand} </td>\n+                <th>Brand</th>\n+                <td> {brand} </td>\n             </tr>\n             <tr>\n-              <th>Model</th>\n-              <td> {model} </td>\n+                <th>Model</th>\n+                <td> {model} </td>\n             </tr>\n             <tr>\n-              <th>MAC Address</th>\n-              <td> {mac} </td>\n+                <th>MAC Address</th>\n+                <td> {mac} </td>\n             </tr>\n             <tr>\n-              <th>Power Type</th>\n-              <td> {powerType} </td>\n+                <th>Power Type</th>\n+                <td> {powerType} </td>\n             </tr>\n             <tr>\n-              <th>Controller ID</th>\n-              <td> {controllerId} </td>\n+                <th>Controller ID</th>\n+                <td> {controllerId} </td>\n             </tr>\n             <tr>\n-              <th>Location - Longitude</th>\n-              <td>{long} </td>\n+                <th>Location - Longitude</th>\n+                <td>{long} </td>\n             </tr>\n             <tr>\n-              <th>Location - Latitude </th>\n-              <td> {lat}</td>\n+                <th>Location - Latitude </th>\n+                <td> {lat}</td>\n             </tr>\n             <tr>\n-              <th>Date Last Seen</th>\n-              <td> {lastSeen ? <Moment>{lastSeen}</Moment> : ''} </td>\n+                <th>Date Last Seen</th>\n+                <td> { lastSeen ? <Moment>{lastSeen}</Moment> : '' } </td>\n             </tr>\n             <tr>\n-              <th>Temperature</th>\n-              <td> {temp}</td>\n+                <th>Temperature</th>\n+                <td> {temp}</td>\n             </tr>\n             <tr>\n-              <th>In-Use Status</th>\n-              <td> {status}</td>\n+                <th>In-Use Status</th>\n+                <td> {status}</td>\n             </tr>\n             <tr>\n-              <th>Last Executed Command</th>\n-              <td> {lastCommand}</td>\n+                <th>Last Executed Command</th>\n+                <td> {lastCommand}</td>\n             </tr>\n           </tbody>\n         </Table>\n@@ -164,14 +166,14 @@ export function DevicePage() {\n         <h4>\n           Update Device's Current Temperature\n         </h4>\n-        <form onSubmit={setCurrentTempHandler}>\n-          <label> Current Temperature </label>\n-          <InputText\n-            value={inputTemp}\n-            onChange={e => setInputTemperature(e.target.value)}\n-          />\n-          <button name=\"submit\"> Set Temperature </button>\n-        </form>\n+      <form onSubmit={setCurrentTempHandler}>\n+        <label> Current Temperature </label>\n+        <InputText\n+          value={inputTemp}\n+          onChange={e => setInputTemperature(e.target.value)}\n+        />\n+        <button name=\"submit\"> Set Temperature </button>\n+      </form>\n       </section>\n       <section>\n         <h4>Set In-Use Status</h4>"
},
{
"sha":"374171788fc25c1af6b8178192dcd2be6c44de21",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"modified",
"additions":10,
"deletions":9,
"changes":19,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=0a314541567ea27ff4a0211b6d4db48cec0212ac",
"patch":"@@ -3,6 +3,7 @@ import { InputText } from 'primereact/inputtext';\n import { TabView, TabPanel } from 'primereact/tabview';\n import { Dropdown } from 'primereact/dropdown';\n import axios from 'axios';\n+import {serverIP} from '../config';\n // import 'primereact/resources/themes/saga-blue/theme.css';\n // import 'primereact/resources/primereact.css';\n \n@@ -25,7 +26,7 @@ export function SuperAdminPage() {\n         const res = await axios({\n             method: 'post',\n             //url: defaultURL + 'controller',\n-            url: 'http://localhost:8000/controller/register',\n+            url: 'http://' + serverIP + ':8000/controller/register',\n             data: {\n                 controllerName: controllerName,\n                 serviceProvider: serviceProvider,\n@@ -45,7 +46,7 @@ export function SuperAdminPage() {\n \n         const res1 = await axios({\n             method: 'post',\n-            url: 'http://localhost:8000/controller/assign',\n+            url: 'http://' + serverIP + ':8000/controller/assign',\n             data: {\n                 deviceID: devId,\n                 controllerID: contId\n@@ -54,7 +55,7 @@ export function SuperAdminPage() {\n \n         const res = await axios({\n             method: 'get',\n-            url: 'http://localhost:8000/device/all'\n+            url: 'http://' + serverIP + ':8000/device/all'\n         });\n \n         let result = [];\n@@ -65,7 +66,7 @@ export function SuperAdminPage() {\n \n         const resCont = await axios({\n             method: 'get',\n-            url: 'http://localhost:8000/controller/all'\n+            url: 'http://' + serverIP + ':8000/controller/all'\n         });\n         let contResult = [];\n         resCont.data.map(record => {\n@@ -82,7 +83,7 @@ export function SuperAdminPage() {\n \n         const res1 = await axios({\n             method: 'post',\n-            url: 'http://localhost:8000/controller/change',\n+            url: 'http://' + serverIP + ':8000/controller/change',\n             data: {\n                 deviceID: devId,\n                 newControllerID: contId\n@@ -91,7 +92,7 @@ export function SuperAdminPage() {\n \n         const res = await axios({\n             method: 'get',\n-            url: 'http://localhost:8000/device/all'\n+            url: 'http://' + serverIP + ':8000/device/all'\n         });\n \n         let result = [];\n@@ -102,7 +103,7 @@ export function SuperAdminPage() {\n \n         const resCont = await axios({\n             method: 'get',\n-            url: 'http://localhost:8000/controller/all'\n+            url: 'http://' + serverIP + ':8000/controller/all'\n         });\n         let contResult = [];\n         resCont.data.map(record => {\n@@ -116,7 +117,7 @@ export function SuperAdminPage() {\n         console.log('inside get devices');\n         const res = await axios({\n             method: 'get',\n-            url: 'http://localhost:8000/device/all'\n+            url: 'http://' + serverIP + ':8000/device/all'\n         });\n \n         let result = [];\n@@ -127,7 +128,7 @@ export function SuperAdminPage() {\n \n         const resCont = await axios({\n             method: 'get',\n-            url: 'http://localhost:8000/controller/all'\n+            url: 'http://' + serverIP + ':8000/controller/all'\n         });\n         let contRestult = [];\n         resCont.data.map(record => {"
},
{
"sha":"2236c02cbb5b8edffd9acc72b215585c34a34d8c",
"filename":"frontend/src/config.js",
"status":"added",
"additions":5,
"deletions":0,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/src/config.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0a314541567ea27ff4a0211b6d4db48cec0212ac/frontend/src/config.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/config.js?ref=0a314541567ea27ff4a0211b6d4db48cec0212ac",
"patch":"@@ -0,0 +1,5 @@\n+const serverIP = 'localhost';\n+\n+module.exports = {\n+    serverIP: serverIP\n+};\n\\ No newline at end of file"
}
]
},
{
"commit_sha":"f53222aebfc9c8bc638ef4aca428a7e8a6c3563d",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmY1MzIyMmFlYmZjOWM4YmM2MzhlZjRhY2E0MjhhN2U4YTZjMzU2M2Q=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/f53222aebfc9c8bc638ef4aca428a7e8a6c3563d",
"commit_date":"2021-03-16T23:52:10Z",
"files":[
{
"sha":"26e4377761760537068c7ccd1e382131bad6d84f",
"filename":"backend/endpoint/config.js",
"status":"added",
"additions":15,
"deletions":0,
"changes":15,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f53222aebfc9c8bc638ef4aca428a7e8a6c3563d/backend/endpoint/config.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f53222aebfc9c8bc638ef4aca428a7e8a6c3563d/backend/endpoint/config.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/config.js?ref=f53222aebfc9c8bc638ef4aca428a7e8a6c3563d",
"patch":"@@ -0,0 +1,15 @@\n+const walletFolder = './wallet/Org1';\n+const walletFile = 'Org1 Admin';\n+const connProfileFolder = '../gateway';\n+const connProfile = '1OrgLocalFabricOrg1GatewayConnection.json';\n+const contractName = 'EVChargerReg';\n+const channelName = 'mychannel';\n+\n+module.exports = {\n+    walletFolder: walletFolder,\n+    walletFile: walletFile,\n+    connProfileFolder: connProfileFolder,\n+    connProfile: connProfile,\n+    contractName: contractName,\n+    channelName: channelName\n+};"
},
{
"sha":"4307e538f0c2b533935bebf4274806bb0d385c30",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":23,
"deletions":4,
"changes":27,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f53222aebfc9c8bc638ef4aca428a7e8a6c3563d/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f53222aebfc9c8bc638ef4aca428a7e8a6c3563d/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=f53222aebfc9c8bc638ef4aca428a7e8a6c3563d",
"patch":"@@ -1,3 +1,4 @@\n+const fabricConfig = require('./config');\n let gateway; \n \n async function init() {\n@@ -8,20 +9,38 @@ async function init() {\n         const path = require('path');\n         const fs = require('fs');\n     \n-        const walletPath = path.join(process.cwd(), './wallet/Org1');\n+        //const walletPath = path.join(process.cwd(), './wallet/Org1');\n+        const walletPath = path.join(process.cwd(), fabricConfig.walletFolder);\n+\n         const wallet = await Wallets.newFileSystemWallet(walletPath);\n         gateway = new Gateway();\n-        const connectionProfilePath = path.resolve(__dirname, '../gateway', '1OrgLocalFabricOrg1GatewayConnection.json');\n+        //const connectionProfilePath = path.resolve(__dirname, '../gateway', '1OrgLocalFabricOrg1GatewayConnection.json');\n+\n+        const connectionProfilePath = path.resolve(__dirname, fabricConfig.connProfileFolder, fabricConfig.connProfile);\n+\n         const connectionProfile = JSON.parse(fs.readFileSync(connectionProfilePath, 'utf8'));\n+\n+        /*\n         const connectionOptions = {\n             wallet, identity: 'Org1 Admin', discovery:\n                 { enabled: true, asLocalhost: true }\n         };\n+        */\n+\n+        const connectionOptions = {\n+            wallet, identity: fabricConfig.walletFile, discovery:\n+                { enabled: true, asLocalhost: true }\n+        };\n+\n         await gateway.connect(connectionProfile, connectionOptions);\n+        \n         // Get the network (channel) our contract is deployed to.\n-        const network = await gateway.getNetwork('mychannel');\n+        //const network = await gateway.getNetwork('mychannel');\n+        const network = await gateway.getNetwork(fabricConfig.channelName);\n+        \n         // Get the contract from the network.\n-        contract = network.getContract('EVChargerReg');\n+        //contract = network.getContract('EVChargerReg');\n+        contract = network.getContract(fabricConfig.contractName);\n \n         console.log('---------------------------- RESULT from backend server --------')\n "
}
]
},
{
"commit_sha":"50317f2cc866c0e6a87ff9538670da07ff41ed05",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjUwMzE3ZjJjYzg2NmMwZTZhODdmZjk1Mzg2NzBkYTA3ZmY0MWVkMDU=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/50317f2cc866c0e6a87ff9538670da07ff41ed05",
"commit_date":"2021-03-16T05:51:26Z",
"files":[
{
"sha":"39687b3e1021a78a22fc8c4aea45b2877a749873",
"filename":"README.md",
"status":"modified",
"additions":187,
"deletions":3,
"changes":190,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/50317f2cc866c0e6a87ff9538670da07ff41ed05/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/50317f2cc866c0e6a87ff9538670da07ff41ed05/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=50317f2cc866c0e6a87ff9538670da07ff41ed05",
"patch":"@@ -1,4 +1,5 @@\n # Electric Vehicle Charger Registry\n+\n <h2> Project Description </h2>\n A blockchain registry for  Electric Vehicle Charging Stations. The system will track, manage and enable accurate and reliable \n data sharing on an open platform where operators provide stations to serve owners of electric vehicles and all the participants are protected from unfair practises.\n@@ -24,12 +25,195 @@ for electric vehicles. An open blockchain platform to cater for more Charging St\n environment with multiple participating Service Provider will be very useful.\n <hr>\n \n-![alt text](images/IOTRegStateDiagram.png?raw=true) <br>\n+<h2> Goal </h2>\n+The goal of this project is to develop an open platform with tamper-proof data for collaboration between \n+EV Charging Equipment Manufacturers, Vehicle Manufacturers, and Service Providers to meet the charging needs of \n+growing Electric Vehicle Owners.\n+<hr>\n+\n+<h2> Stakeholders </h2>\n+<ul>\n+    <li> <strong> Vehicle Manufacturers: </strong> Makers of Electric Vehicles. </li>\n+    <li> <strong> EV Charger Manufacturers : </strong>   EV Charging Stations Manufacturers. </li>\n+    <li> <strong> Service Providers : </strong>   Owners of EV Charging Stations. </li>    \n+    <li> <strong> Users: </strong>   Electric Vehicle Owners. </li>\n+    <li> <strong> Development Team </strong>  </li>\n+</ul>\n+<hr>\n+\n+<h2> Team </h2>\n+\n+| Name                | Designation        |\n+|------------------\t|------------------\t|\n+| Moayyad Alfaris    | Development Team    |\n+| Oluwaseun Soetan    | Development Team    |\n+| Trung Ngo            | Development Team    |\n+| Temple Okosun        | Development Team    |\n+\n+<br><hr>\n+\n+<h2> Measuring Success </h2>\n+<ul>\n+    <li> A user should be able to determine the availability of charging stations for use within a \n+    specific geographic location \n+    </li>\n+    <li> Having zero data breach incidence related to devices and controllers </li>\n+</ul>\n+<hr>\n+\n+<h2> Transition descriptions </h2>\n+<h3> Transition Functions </h3>\n+<ul>\n+    <li> Register Controller </li>\n+    <li> Update Controller </li>\n+    <li> Register Device </li>\n+    <li> Assign Controller </li>\n+    <li> Change Controller </li>\n+    <li> Execute Device Command  </li>\n+    <li> Update Device </li>\n+    <li> Update Device Status </li> \n+</ul>\n+\n+<h3> Other Functions </h3>\n+<ul>\n+    <li> Get All Controllers </li>\n+    <li> Get Device Controller </li>\n+    <li> Get Device Logs </li>\n+    <li> Get Controller Devices </li>\n+    <li> Change Controller </li>\n+    <li> Execute Device Command  </li>\n+    <li> Get Device </li>\n+    <li> Get All Devices </li> \n+</ul>\n+<hr>\n+\n+<h2> Transition Functions Details </h2>\n \n+| Function Name           \t| Input                                                                \t| Output       \t| Role                              \t| Description                                  \t|\n+|-------------------------\t|----------------------------------------------------------------------\t|--------------\t|-----------------------------------\t|----------------------------------------------\t|\n+| Register Controller     \t| Controller ID <br>Controller Name <br>Service Provider <br>Location  \t| None         \t| Super System (Administrator <br>  \t| Registers new controller.                    \t|\n+| Update Controller       \t| Location <br>Service Provider                                        \t| None         \t| Super System <br>                 \t| Updates controller details.                  \t|\n+| Register Device         \t| Device ID <br>Brand <br>Model <br>MAC <br>Power Type <br>Location    \t| None         \t| Super System <br>                 \t| Registers a new device.                      \t|\n+| Assign Controller       \t| Device ID <br>Controller ID                                          \t| None         \t| Super System <br>                 \t| Assigns the device to the first controller.  \t|\n+| Change Controller       \t| Device ID <br>Controller ID                                          \t| None         \t| Super System <br>                 \t| Assigns the device to a new controller.      \t|\n+| Execute Device Command  \t| Device ID <br>Command                                                \t| Result <br>  \t| Controller Adminstrator           \t| Sends a command for execution on a device.   \t|\n+| Update Device           \t| Device ID <br>Current Temperature                                    \t| None         \t| Device                            \t| Update device information                    \t|\n+| Update Device Status    \t| Device ID <br>In Use                                                 \t| None         \t| Device                            \t| Update if the device is in use.              \t|\n+<br><hr>\n \n+<h2> Other Functions Details </h2>\n+\n+| Function Name           \t| Input               \t| Output                                       \t| Role                         \t| Description                                             \t|\n+|-------------------------\t|---------------------\t|----------------------------------------------\t|------------------------------\t|---------------------------------------------------------\t|\n+| Get All Controllers     \t| None                \t| Array of Controller ID                       \t| Super System <br>            \t| Returns all the registered controllers in the network.  \t|\n+| Get Device Controller   \t| Device ID           \t| Controller ID                                \t| Device                       \t| Returns who controls this device.                       \t|\n+| Get Device Logs         \t| Device ID           \t| Array of Logs                                \t| Controller                   \t| Returns log data from a device.                         \t|\n+| Get Controller Devices  \t| Controller ID <br>  \t| Array of Controller Devices                  \t| Controller <br>Super System  \t| Returns list of devices of a particular controller.     \t|\n+| Get Device              \t| Device ID <br>      \t| Brand <br>Model <br>Power Type <br>Location  \t| User                         \t| Return device information to a user.                    \t|\n+| Get All Devices         \t| None                \t| Array of Device ID                           \t| Super System                 \t| Returns a list of all devices.                          \t|\n+<br><hr>\n+\n+<h2> State data descriptions </h2>\n+<h3> Controller </h3>\n+<ul>\n+    <li> Controller </li>\n+    <li> Controller ID </li>\n+    <li> Controller Name </li>\n+    <li> Location (Long, Lat) </li>\n+    <li> Service Provider </li>\n+    <li> Devices : [\n+                    Device ID, \n+                    Device Log History [ ]\n+                ]\n+    </li>\n+</ul>\n+\n+| Field Name                \t| Type            \t| Example    \t|\n+|---------------------------\t|-----------------\t|------------\t|\n+| Controller ID             \t| Number          \t| 1234       \t|\n+| Controller Name           \t| String          \t| \u201c\u201d         \t|\n+| Location                  \t| [float, float]  \t| Long, Lat  \t|\n+| Service Provider          \t| Number          \t| 1234       \t|\n+| Devices                   \t| Array           \t| []         \t|\n+|      Device ID            \t| Number          \t| 1234       \t|\n+|      Device Log History   \t| Array           \t| []         \t|\n+|            Log            \t| String          \t| \u201c\u201d         \t|\n+<br><hr>\n+\n+<h3> Device </h3>\n+<ul>\n+    <li> Device ID (Unique Identifier) </li>\n+    <li> Brand </li>\n+    <li> Model </li>\n+    <li> MAC Address  </li>\n+    <li> Location (Long, Lat) </li>\n+    <li> Status (On/Off)  </li>\n+    <li> Last seen (Date/Time) </li>\n+    <li> Power Type (AC/DC) </li>\n+    <li> Current Temp (in Celsius)  </li>\n+    <li> In use (Charging or Not) </li>\n+    <li> Last executed command  </li>\n+    <li> Last execution date/time </li>\n+    <li> Controller ID </li>\n+</ul>\n+\n+| Field Name         \t| Type          \t| Example                               \t|\n+|--------------------\t|---------------\t|---------------------------------------\t|\n+| Device ID          \t| Number        \t| 123                                   \t|\n+| Brand              \t| String        \t| \u201c\u201d                                    \t|\n+| Model              \t| String        \t| \u201c\u201d                                    \t|\n+| MAC Address        \t| String        \t| Format: \u201cABC-123-XYZ\u201d                 \t|\n+| Location           \t| Float, Float  \t| Long, Lat                             \t|\n+| Status             \t| Boolean       \t| On = True, Off = False                \t|\n+| Last seen          \t| Date/Time     \t|                                       \t|\n+| Power Type         \t| String        \t| AC or DC                              \t|\n+| Current Temp       \t| Double        \t| In Celsius                            \t|\n+| In use             \t| Boolean       \t| True for charging, False of stand by  \t|\n+| Last Command       \t| String        \t| Command text                          \t|\n+| Last Command Date  \t| Date/Time     \t|                                       \t|\n+| Controller ID      \t| Number        \t| 123                                   \t|\n+<br><hr>\n+\n+<h2> Role Descriptions </h2>\n+<ul>\n+    <li> Controller </li>\n+    <li> Device </li>\n+    <li> Super System  </li>\n+    <li> User  </li>\n+</ul>\n+\n+| Role          \t| Description                                               \t| Access Rights                                                \t|\n+|---------------\t|-----------------------------------------------------------\t|--------------------------------------------------------------\t|\n+| Controller    \t| A controller device for multiple EV Chargers.             \t| Read and write access to device including execute commands.  \t|\n+| Device        \t| An EV Charger Device.                                     \t| Read access to device data.                                  \t|\n+| Super System  \t| Main terminal that carries out administrative functions.  \t| Read and write access to controllers.                        \t|\n+| User          \t| EV Charger user                                           \t| Read access to a device.                                     \t|\n+<br><hr>\n+\n+<h2> Blockchain Architectural Diagrams </h2>\n+\n+![alt text](images/IOTRegStateDiagram.png?raw=true) <br>\n \n ![alt text](images/EVCharger-HLF.png?raw=true) <br>\n \n ![alt text](images/BlockchainArchitecture.png?raw=true) <br>\n-<h2> TO DO:</h2>\n-<hr>\n+\n+\n+<h2> BACKEND \u2013 RESTful API endpoints </h2>\n+\n+| Endpoint     \t| Path            \t| HTTP method \t| Query input                                                                   \t| Output                        \t|\n+|--------------\t|-----------------\t|-------------\t|-------------------------------------------------------------------------------\t|-------------------------------\t|\n+| /controller  \t| /all <br>       \t| GET         \t| None                                                                          \t| Object - All controllers      \t|\n+|              \t| /register       \t| POST        \t| controllerName,<br>serviceProvider,<br>location.long,<br>location.lat         \t|  success/fail                 \t|\n+|              \t| /update         \t| POST        \t| controllerID,<br>serviceProvider, <br>location.long, <br>location.lang        \t|  success/fail                 \t|\n+|              \t| /change         \t| POST        \t| deviceID, <br>newControllerID                                                 \t|  success/fail                 \t|\n+|              \t| /assign         \t| POST        \t| deviceID, <br>controllerID                                                    \t| success/fail                  \t|\n+|              \t| /devices        \t| GET         \t| id                                                                            \t| Object - Controller's devices \t|\n+| /devices     \t| /all            \t| GET         \t|                                                                               \t| Object - All devices          \t|\n+|              \t| /id             \t| GET         \t| deviceId                                                                      \t| Object- A device's details    \t|\n+|              \t| /update         \t| POST        \t| deviceId, <br>currentTemp                                                     \t| success/fail                  \t|\n+|              \t| /updateStatus   \t| POST        \t| deviceId                                                                      \t| success/fail                  \t|\n+|              \t| /controller     \t| GET         \t| deviceId                                                                      \t| Object - Controller Id        \t|\n+|              \t| /register       \t| POST        \t| brand, <br>model, <br>mac, <br>powerType,<br>location.long, <br>location.lat  \t| success/fail                  \t|\n+|              \t| /executeCommand \t| POST        \t| deviceId, <br>command                                                         \t| success/fail                  \t|\n+<br><hr>"
}
]
},
{
"commit_sha":"be66cdbc445d2dced5e7f946dd09bb8dce7a1259",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmJlNjZjZGJjNDQ1ZDJkY2VkNWU3Zjk0NmRkMDliYjhkY2U3YTEyNTk=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/be66cdbc445d2dced5e7f946dd09bb8dce7a1259",
"commit_date":"2021-03-16T02:25:00Z",
"files":[
{
"sha":"68375058453fc6c1419a1c852fcb48f2a59be3de",
"filename":"README.md",
"status":"modified",
"additions":26,
"deletions":19,
"changes":45,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259",
"patch":"@@ -1,28 +1,35 @@\n-# Main\n-<h2> Setting up the frontend </h2>\n+# Electric Vehicle Charger Registry\n+<h2> Project Description </h2>\n+A blockchain registry for  Electric Vehicle Charging Stations. The system will track, manage and enable accurate and reliable \n+data sharing on an open platform where operators provide stations to serve owners of electric vehicles and all the participants are protected from unfair practises.\n <hr>\n-The front end will be the interface through which users will interact with the business application.\n-<p> The front end has been designed with React and it connects with the fabric run time using a rest server middleware.\n-</p>\n-\n-<h2> Steps </h2>\n+<h2> Network participants </h2>\n <ol>\n-    <li> <strong> Install dependencies: </strong>  Navigate to the root folder of the frontend directory and\n-Run <strong> npm install  </strong>to get the required dependencies. You can open the package.json file to see the required packages \n-    </li>\n-    <li> Navigate to <strong> http://localhost:3000 </strong>  on your browser to see the running app\n+    <li> <strong> Service Providers: </strong>\n+        Investors who purchased EV Charging equipment from manufacturers and rented a location in a \n+        parking lot for hosting these chargers.\n     </li>\n+    <li> <strong> Controller: </strong>\n+        A parking lot owner that hosts those devices or a utility company to which the device is connected\n+    </li>   \n+    <li> <strong> Users: </strong>\n+        Owners of electric vehicles who visit a location to charge their vehicles.\n+    </li>  \n </ol>\n+<hr>\n+\n+<h2> Problem </h2>\n+With the improvement in battery technology, and incentives from various governments we are seeing an increase in demand \n+for electric vehicles. An open blockchain platform to cater for more Charging Station, tracking and managing them in an\n+environment with multiple participating Service Provider will be very useful.\n+<hr>\n+\n+![alt text](images/IOTRegStateDiagram.png?raw=true) <br>\n+\n \n-![alt text](./public/images/homepage.png?raw=true) <br>\n \n-<p>In our frontend EV Charger System scenario, \n-we will have 3 users representing the three participants in the business network:</p>\n-<ul>\n-    <li> Devices</li>\n-    <li> Controller </li>\n-    <li> Super Admin </li>\n-</ul>\n+![alt text](images/EVCharger-HLF.png?raw=true) <br>\n \n+![alt text](images/BlockchainArchitecture.png?raw=true) <br>\n <h2> TO DO:</h2>\n <hr>"
},
{
"sha":"74d5e036c11b1842f4f02aec2afdeed17c2ec4c6",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259",
"patch":"@@ -188,6 +188,8 @@ async function registerDevice(brand, model, mac, powerType, long, lat) {\n \n async function getDeviceController(devID) {\n     const contract = await init();\n+    console.log(`---------- IN BACKEND - MAPPPING getDeviceController(devID=${req.query.id}) --------`)\n+\n     let result;\n     try {\n         result = await contract.submitTransaction('getDeviceController', devID);   "
},
{
"sha":"1135711dab4dcca4a114fb58ad86c765fe172262",
"filename":"backend/routes/controller.js",
"status":"modified",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259",
"patch":"@@ -31,6 +31,8 @@ router.post('/assign', async (req, res, next) => {\n });\n \n router.get('/devices', async (req, res, next) => {\n+    console.log(`---------- BEFORE CONNECTING TO BACKEND: req.query.id = ${req.query.id} --------`)\n+    \n     const result = await connector.getControllerDevices(req.query.id);\n     res.json(result); \n });"
},
{
"sha":"b9003801d940f82b0a2ec2f78aca983afd86d90c",
"filename":"chaincode/lib/controller-device-contract.js",
"status":"modified",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/chaincode/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/chaincode/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/lib/controller-device-contract.js?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259",
"patch":"@@ -1,3 +1,4 @@\n+\n /*\n  * SPDX-License-Identifier: Apache-2.0\n  */\n@@ -18,6 +19,7 @@ class ControllerDeviceContract extends Contract {\n         console.info('============= START : Initialize Ledger ===========');\n \n \n+\n         console.info('============= END : Initialize Ledger ===========');\n     }\n "
},
{
"sha":"faeed0ffc9f707d9a89201e48a60b0818519447e",
"filename":"frontend/src/App.js",
"status":"modified",
"additions":7,
"deletions":0,
"changes":7,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/frontend/src/App.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/frontend/src/App.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.js?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259",
"patch":"@@ -1,4 +1,11 @@\n import './App.css';\n+\n+import 'primereact/resources/themes/saga-blue/theme.css';\n+import 'primereact/resources/primereact.css';\n+\n+// import 'primeicons/primeicons.css';\n+// import 'primeflex/primeflex.css';\n+\n import {BrowserRouter, Switch, Route, Link} from 'react-router-dom';\n \n import Jumbotron from 'react-bootstrap/Jumbotron';"
},
{
"sha":"f65db0ddb9d6f76452af22f725a907ef69bcf498",
"filename":"frontend/src/components/ControllerPage.js",
"status":"modified",
"additions":169,
"deletions":4,
"changes":173,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/frontend/src/components/ControllerPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/frontend/src/components/ControllerPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/ControllerPage.js?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259",
"patch":"@@ -1,11 +1,176 @@\n import React, { useState } from 'react';\n+import { InputText } from 'primereact/inputtext';\n+import { TabView, TabPanel } from 'primereact/tabview';\n \n+import { DataTable } from 'primereact/datatable';\n+import { Column } from 'primereact/column';\n+import Table from 'react-bootstrap/Table';\n+\n+import axios from 'axios';\n \n export function ControllerPage() {\n+    const [brand, setBrand] = useState('');\n+    const [model, setModel] = useState('');\n+    const [powerType, setPowerType] = useState('');\n+\n+    const [long, setLong] = useState('');\n+    const [lat, setLat] = useState('');\n+\n+    const [controllerId, setControllerId] = useState('');\n+\n+    const [devices, setDevices] = useState([]);\n+    const [command, setCommand] = useState('Please enter command');\n+\n+    const [activeIndex, setActiveIndex] = useState(0);\n+    \n+    // const [controllerInfo, setControllerInfo] = useState([]);\n+\n+    const defaultURL = `http://localhost:8000/controller`;\n+    const getControllerDevicesHandler = async (ev) => {\n+        ev.preventDefault();\n+        console.log(`device id is ${controllerId}`);\n+\n+        //NOTE: somehow doesn't work on my end ... very weird anamoly!\n+        // const fetchedRes = await axios({\n+        //     method: 'get',\n+        //     url: 'http://localhost:8000/controller/devices',\n+        //     data: { \n+        //         id: 'CONTR-2',\n+        //         // id: controllerId\n+        //     });\n+\n+        const fetchedRes = await axios({\n+            method: 'get',\n+            url: `${defaultURL}/devices?id=${controllerId}`\n+        });\n+        // console.log(`fetchedRes: ${fetchedRes.data}`);\n+    };\n+\n+    const registerDeviceHandler = async (ev) => {\n+        ev.preventDefault();\n+\n+        const res = await axios({\n+            method: 'post',\n+            url: 'http://localhost:8000/device/register',\n+            data: {\n+                brand: brand,\n+                model: model,\n+                powerType: powerType,\n+                location: {\n+                    long: long,\n+                    lat: lat\n+                }\n+            }\n+        });\n+    };\n+\n+    const commandInDeviceHandler = (data) => {\n+        console.log(`----inside commandInDeviceHandler: lastExecCommand: ${data.lastExecCommand} -----`);\n+        return (\n+            <form onSubmit={(ev) => updateCommandHandler(ev, data)}>\n+                {data.lastExecCommand ?\n+                    <label> data.lastExecCommand</label>\n+                    : \n+                    <InputText value={command}\n+                        onChange={ev => setCommand(ev.target.value)} />}\n+                <button> Change command</button>\n+            </form>\n+        );\n+    }\n+\n+    const updateCommandHandler = async (ev, data) => {\n+        ev.preventDefault();\n+\n+        console.log(`Inside updateCommandHandler(), deviceID: ${data.deviceID}, command: ${ev.target.value}`)\n+\n+        setCommand(ev.target.value);\n+\n+        const res = await axios({\n+            method: 'post',\n+            url: 'http://localhost:8000/device/executeCommand',\n+            data: {\n+                deviceID: data.deviceID,\n+                command: command\n+             }\n+        });\n+    }\n+\n     return (\n-        <div>\n-            <p>NavBar item has 2 tabs  Register Controller,\u200b Show Controller info </p>\n-            <label> Display Controller Info </label>\n-        </div>\n+        <>\n+            <TabView activeIndex={activeIndex} onTabChange={(e) => setActiveIndex(e.index)}>\n+                <TabPanel header=\"Show all Device info of Controller\">\n+                    <label> Controller ID:  </label>\n+                    <form onSubmit={getControllerDevicesHandler}>\n+                        <InputText value={controllerId} onChange={e => setControllerId(e.target.value)} />\n+\n+                        <button name=\"display\">Display</button>\n+                    </form>\n+                    {/* <DataTable value={devices}>\n+                        {dynamicColumns}\n+                        </DataTable>  */}\n+                    <p>Here is table of each device and its command</p>\n+                    <Table striped bordered hover size=\"sm\">\n+                        <thead>\n+                            <tr>\n+                                <th>Device</th>\n+                                <th>Update Command</th>\n+                            </tr>\n+                        </thead>\n+                        <tbody>\n+                            {devices ? devices.map(\n+                                (rowData, index) => (\n+                                    <tr key={index}>\n+                                        <td>{rowData.deviceID}</td>\n+                                        <td>{commandInDeviceHandler(rowData)}</td>\n+                                    </tr>))\n+                                : <tr><td></td></tr>}\n+                        </tbody>\n+                    </Table>\n+                </TabPanel>\n+                <TabPanel header=\"Register Device\">\n+                    <form onSubmit={registerDeviceHandler}>\n+                    <Table striped bordered hover size=\"sm\">\n+                            <tbody>\n+                                <tr>\n+                                    <td>\n+                                        <label>Device Brand:</label>\n+                                        <InputText value={brand} onChange={(e) => setBrand(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Model:</label>\n+                                        <InputText value={model} onChange={(e) => setModel(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Power Type:</label>\n+                                        <InputText value={powerType} onChange={(e) => setPowerType(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Longtitude:</label>\n+                                        <InputText value={long} onChange={(e) => setLong(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Latitude:</label>\n+                                        <InputText value={lat} onChange={(e) => setLat(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <button name=\"submit\">Register</button>\n+                                    </td>\n+                                </tr>\n+                            </tbody>\n+                        </Table>\n+                    </form>\n+                </TabPanel>\n+            </TabView>\n+        </>\n     );\n }\n\\ No newline at end of file"
},
{
"sha":"2002f80cab93a0b5ffb4931a5f0724f40138252a",
"filename":"frontend/src/components/DevicePage.js",
"status":"modified",
"additions":48,
"deletions":49,
"changes":97,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259",
"patch":"@@ -1,13 +1,13 @@\n import React, { useState } from 'react';\n import { InputText } from 'primereact/inputtext';\n-import {InputSwitch} from 'primereact/inputswitch';\n+import { InputSwitch } from 'primereact/inputswitch';\n import Table from 'react-bootstrap/Table';\n import Moment from 'react-moment';\n \n import axios from 'axios';\n \n export function DevicePage() {\n-  //const defaultURL = 'http://localhost:8000/device/';\n+  const defaultURL = 'http://localhost:8000/device/';\n \n   const [deviceId, setDeviceId] = useState('');\n   const [controllerId, setControllerId] = useState('');\n@@ -23,7 +23,7 @@ export function DevicePage() {\n   const [lastCommand, setLastCommand] = useState('');\n   const [inputTemp, setInputTemperature] = useState('');\n   const [inputStatus, setInputStatus] = useState(false);\n-  \n+\n \n   const getDeviceInformationIdHandler = async ev => {\n     ev.preventDefault();\n@@ -32,7 +32,6 @@ export function DevicePage() {\n \n     const res = await axios({\n       method: 'get',\n-      //url: defaultURL + 'controller',\n       url: 'http://localhost:8000/device/id',\n       params: {\n         deviceId: deviceId,\n@@ -61,7 +60,7 @@ export function DevicePage() {\n \n     await axios({\n       method: 'post',\n-      \n+\n       url: 'http://localhost:8000/device/update',\n       data: {\n         deviceId: deviceId,\n@@ -74,10 +73,10 @@ export function DevicePage() {\n   const setInUseStatus = async (e) => {\n \n     setInputStatus(e.value);\n-   \n+\n     await axios({\n       method: 'post',\n-      \n+\n       url: 'http://localhost:8000/device/updateStatus',\n       data: {\n         deviceId: deviceId,\n@@ -89,72 +88,72 @@ export function DevicePage() {\n   return (\n     <div>\n       <section className=\"section-setting\">\n-      <form onSubmit={getDeviceInformationIdHandler}>\n-        {/* <label htmlFor=\"Type in deviceID\">Get Device Details </label> */}\n-        <label> Device ID: </label>\n-        <InputText\n-          value={deviceId}\n-          onChange={e => setDeviceId(e.target.value)}\n-        />\n-        <button name=\"submit\"> Submit </button>\n-      </form>\n+        <form onSubmit={getDeviceInformationIdHandler}>\n+          {/* <label htmlFor=\"Type in deviceID\">Get Device Details </label> */}\n+          <label> Device ID: </label>\n+          <InputText\n+            value={deviceId}\n+            onChange={e => setDeviceId(e.target.value)}\n+          />\n+          <button name=\"submit\"> Submit </button>\n+        </form>\n       </section>\n \n       <section className=\"section-setting\">\n         <Table striped bordered hover size=\"sm\">\n           <thead >\n-            <tr className =\"tr-heading\">\n+            <tr className=\"tr-heading\">\n               <th colSpan=\"2\">Device Information </th>\n             </tr>\n           </thead>\n           <tbody>\n             <tr>\n-                <th>Device ID</th>\n-                <td> {deviceId}</td>\n+              <th>Device ID</th>\n+              <td> {deviceId}</td>\n             </tr>\n             <tr>\n-                <th>Brand</th>\n-                <td> {brand} </td>\n+              <th>Brand</th>\n+              <td> {brand} </td>\n             </tr>\n             <tr>\n-                <th>Model</th>\n-                <td> {model} </td>\n+              <th>Model</th>\n+              <td> {model} </td>\n             </tr>\n             <tr>\n-                <th>MAC Address</th>\n-                <td> {mac} </td>\n+              <th>MAC Address</th>\n+              <td> {mac} </td>\n             </tr>\n             <tr>\n-                <th>Power Type</th>\n-                <td> {powerType} </td>\n+              <th>Power Type</th>\n+              <td> {powerType} </td>\n             </tr>\n             <tr>\n-                <th>Controller ID</th>\n-                <td> {controllerId} </td>\n+              <th>Controller ID</th>\n+              <td> {controllerId} </td>\n             </tr>\n             <tr>\n-                <th>Location - Longitude</th>\n-                <td>{long} </td>\n+              <th>Location - Longitude</th>\n+              <td>{long} </td>\n             </tr>\n             <tr>\n-                <th>Location - Latitude </th>\n-                <td> {lat}</td>\n+              <th>Location - Latitude </th>\n+              <td> {lat}</td>\n             </tr>\n             <tr>\n-                <th>Date Last Seen</th>\n-                <td> { lastSeen ? <Moment>{lastSeen}</Moment> : '' } </td>\n+              <th>Date Last Seen</th>\n+              <td> {lastSeen ? <Moment>{lastSeen}</Moment> : ''} </td>\n             </tr>\n             <tr>\n-                <th>Temperature</th>\n-                <td> {temp}</td>\n+              <th>Temperature</th>\n+              <td> {temp}</td>\n             </tr>\n             <tr>\n-                <th>In-Use Status</th>\n-                <td> {status}</td>\n+              <th>In-Use Status</th>\n+              <td> {status}</td>\n             </tr>\n             <tr>\n-                <th>Last Executed Command</th>\n-                <td> {lastCommand}</td>\n+              <th>Last Executed Command</th>\n+              <td> {lastCommand}</td>\n             </tr>\n           </tbody>\n         </Table>\n@@ -165,14 +164,14 @@ export function DevicePage() {\n         <h4>\n           Update Device's Current Temperature\n         </h4>\n-      <form onSubmit={setCurrentTempHandler}>\n-        <label> Current Temperature </label>\n-        <InputText\n-          value={inputTemp}\n-          onChange={e => setInputTemperature(e.target.value)}\n-        />\n-        <button name=\"submit\"> Set Temperature </button>\n-      </form>\n+        <form onSubmit={setCurrentTempHandler}>\n+          <label> Current Temperature </label>\n+          <InputText\n+            value={inputTemp}\n+            onChange={e => setInputTemperature(e.target.value)}\n+          />\n+          <button name=\"submit\"> Set Temperature </button>\n+        </form>\n       </section>\n       <section>\n         <h4>Set In-Use Status</h4>"
},
{
"sha":"69cd19961f01b9380b5898addf6432b6a496a48d",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"modified",
"additions":25,
"deletions":25,
"changes":50,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259",
"patch":"@@ -3,8 +3,8 @@ import { InputText } from 'primereact/inputtext';\n import { TabView, TabPanel } from 'primereact/tabview';\n import { Dropdown } from 'primereact/dropdown';\n import axios from 'axios';\n-import 'primereact/resources/themes/saga-blue/theme.css';\n-import 'primereact/resources/primereact.css';\n+// import 'primereact/resources/themes/saga-blue/theme.css';\n+// import 'primereact/resources/primereact.css';\n \n export function SuperAdminPage() {\n \n@@ -41,7 +41,7 @@ export function SuperAdminPage() {\n         ev.preventDefault();\n \n         contDropdown[index] = contId;\n-        setContDropdown(contDropdown);        \n+        setContDropdown(contDropdown);\n \n         const res1 = await axios({\n             method: 'post',\n@@ -180,30 +180,30 @@ export function SuperAdminPage() {\n                 <TabPanel header=\"Assign/Change Controller\">\n                     <table>\n                         <thead>\n-                        <tr>\n-                    <th>Device ID</th>\n-                     <th>Controller ID</th>\n-                     <th>Action</th>\n-                     <th>New Controller ID</th>\n-                </tr>\n+                            <tr>\n+                                <th>Device ID</th>\n+                                <th>Controller ID</th>\n+                                <th>Action</th>\n+                                <th>New Controller ID</th>\n+                            </tr>\n                         </thead>\n                         <tbody>\n-{devices ? devices.map((rowData, index) => (\n-                 <tr key={index}>\n-                     <td>{rowData.deviceID}</td>\n-                     <td>{rowData.controllerID ? rowData.controllerID : 'Not Assigned'}</td>\n-                     <td>\n-                         {rowData.controllerID ? <label>Change</label> : <label>Assign</label>}\n-                     </td>\n-                     <td>\n-                        {rowData.controllerID ? \n-                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => changeControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\"/> \n-                            :\n-                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => assignControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\"/>\n-                        }\n-                     </td>\n-                 </tr>\n-)) : <tr><td></td></tr>}\n+                            {devices ? devices.map((rowData, index) => (\n+                                <tr key={index}>\n+                                    <td>{rowData.deviceID}</td>\n+                                    <td>{rowData.controllerID ? rowData.controllerID : 'Not Assigned'}</td>\n+                                    <td>\n+                                        {rowData.controllerID ? <label>Change</label> : <label>Assign</label>}\n+                                    </td>\n+                                    <td>\n+                                        {rowData.controllerID ?\n+                                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => changeControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\" />\n+                                            :\n+                                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => assignControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\" />\n+                                        }\n+                                    </td>\n+                                </tr>\n+                            )) : <tr><td></td></tr>}\n                         </tbody>\n                     </table>\n                 </TabPanel>"
},
{
"sha":"f58af16a851eb251a67389247ee2646b9f83483a",
"filename":"frontend/yarn.lock",
"status":"removed",
"additions":0,
"deletions":12014,
"changes":12014,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/753229b0caff41439e7e212f3b307c3fb540e35e/frontend/yarn.lock",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/753229b0caff41439e7e212f3b307c3fb540e35e/frontend/yarn.lock",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/yarn.lock?ref=753229b0caff41439e7e212f3b307c3fb540e35e"
},
{
"sha":"73c6446bb04feddd6be267f25c14a64e53f6c04b",
"filename":"images/BlockchainArchitecture.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/images/BlockchainArchitecture.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/images/BlockchainArchitecture.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/images/BlockchainArchitecture.png?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259"
},
{
"sha":"6a5ad2c322df9eee8db5118aa5bfbdae0399e13d",
"filename":"images/EVCharger-HLF.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/images/EVCharger-HLF.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/images/EVCharger-HLF.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/images/EVCharger-HLF.png?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259"
},
{
"sha":"0fc272d41327b6523253367d3023e2738637321c",
"filename":"images/IOTRegStateDiagram.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/images/IOTRegStateDiagram.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/be66cdbc445d2dced5e7f946dd09bb8dce7a1259/images/IOTRegStateDiagram.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/images/IOTRegStateDiagram.png?ref=be66cdbc445d2dced5e7f946dd09bb8dce7a1259"
}
]
},
{
"commit_sha":"753229b0caff41439e7e212f3b307c3fb540e35e",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2Ojc1MzIyOWIwY2FmZjQxNDM5ZTdlMjEyZjNiMzA3YzNmYjU0MGUzNWU=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/753229b0caff41439e7e212f3b307c3fb540e35e",
"commit_date":"2021-03-16T02:13:51Z",
"files":[
{
"sha":"49debbf0e30b6e5abd16898355b649ed1fdc088a",
"filename":"chaincode/lib/controller-device-contract.js",
"status":"modified",
"additions":0,
"deletions":6,
"changes":6,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/753229b0caff41439e7e212f3b307c3fb540e35e/chaincode/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/753229b0caff41439e7e212f3b307c3fb540e35e/chaincode/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/lib/controller-device-contract.js?ref=753229b0caff41439e7e212f3b307c3fb540e35e",
"patch":"@@ -17,12 +17,6 @@ class ControllerDeviceContract extends Contract {\n     async initLedger(ctx) {\n         console.info('============= START : Initialize Ledger ===========');\n \n-        \n-        const controller = {};\n-        const device = {};\n-\n-        await ctx.stub.putState(0, Buffer.from(JSON.stringify(controller)));\n-        await ctx.stub.putState(0, Buffer.from(JSON.stringify(device)));\n \n         console.info('============= END : Initialize Ledger ===========');\n     }"
},
{
"sha":"893e06ed4f1b84b9120a0d0504cba2fdbd59cbad",
"filename":"chaincode/package.json",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/753229b0caff41439e7e212f3b307c3fb540e35e/chaincode/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/753229b0caff41439e7e212f3b307c3fb540e35e/chaincode/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/package.json?ref=753229b0caff41439e7e212f3b307c3fb540e35e",
"patch":"@@ -1,5 +1,5 @@\n {\n-  \"name\": \"EVChargerReg\",\n+  \"name\": \"EVChargerReger\",\n   \"version\": \"0.0.0\",\n   \"description\": \"My Smart Contract\",\n   \"main\": \"index.js\","
}
]
},
{
"commit_sha":"2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjJlMDhmMGMyMGVjNjM3ZWM1YTNmYzFmMDMwNDJmNGI1MzQ2YjYwZDA=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0",
"commit_date":"2021-03-15T22:24:33Z",
"files":[
{
"sha":"74d5e036c11b1842f4f02aec2afdeed17c2ec4c6",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0",
"patch":"@@ -188,6 +188,8 @@ async function registerDevice(brand, model, mac, powerType, long, lat) {\n \n async function getDeviceController(devID) {\n     const contract = await init();\n+    console.log(`---------- IN BACKEND - MAPPPING getDeviceController(devID=${req.query.id}) --------`)\n+\n     let result;\n     try {\n         result = await contract.submitTransaction('getDeviceController', devID);   "
},
{
"sha":"1135711dab4dcca4a114fb58ad86c765fe172262",
"filename":"backend/routes/controller.js",
"status":"modified",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0",
"patch":"@@ -31,6 +31,8 @@ router.post('/assign', async (req, res, next) => {\n });\n \n router.get('/devices', async (req, res, next) => {\n+    console.log(`---------- BEFORE CONNECTING TO BACKEND: req.query.id = ${req.query.id} --------`)\n+    \n     const result = await connector.getControllerDevices(req.query.id);\n     res.json(result); \n });"
},
{
"sha":"ceed43247ad4666f7cca1c6fee403361a9a9fe69",
"filename":"chaincode/lib/controller-device-contract.js",
"status":"modified",
"additions":5,
"deletions":4,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/chaincode/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/chaincode/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/lib/controller-device-contract.js?ref=2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0",
"patch":"@@ -1,3 +1,4 @@\n+\n /*\n  * SPDX-License-Identifier: Apache-2.0\n  */\n@@ -18,11 +19,11 @@ class ControllerDeviceContract extends Contract {\n         console.info('============= START : Initialize Ledger ===========');\n \n         \n-        const controller = {};\n-        const device = {};\n+        // const controller = {};\n+        // const device = {};\n \n-        await ctx.stub.putState(0, Buffer.from(JSON.stringify(controller)));\n-        await ctx.stub.putState(0, Buffer.from(JSON.stringify(device)));\n+        // await ctx.stub.putState(0, Buffer.from(JSON.stringify(controller)));\n+        // await ctx.stub.putState(0, Buffer.from(JSON.stringify(device)));\n \n         console.info('============= END : Initialize Ledger ===========');\n     }"
},
{
"sha":"faeed0ffc9f707d9a89201e48a60b0818519447e",
"filename":"frontend/src/App.js",
"status":"modified",
"additions":7,
"deletions":0,
"changes":7,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/frontend/src/App.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/frontend/src/App.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.js?ref=2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0",
"patch":"@@ -1,4 +1,11 @@\n import './App.css';\n+\n+import 'primereact/resources/themes/saga-blue/theme.css';\n+import 'primereact/resources/primereact.css';\n+\n+// import 'primeicons/primeicons.css';\n+// import 'primeflex/primeflex.css';\n+\n import {BrowserRouter, Switch, Route, Link} from 'react-router-dom';\n \n import Jumbotron from 'react-bootstrap/Jumbotron';"
},
{
"sha":"f65db0ddb9d6f76452af22f725a907ef69bcf498",
"filename":"frontend/src/components/ControllerPage.js",
"status":"modified",
"additions":169,
"deletions":4,
"changes":173,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/frontend/src/components/ControllerPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/frontend/src/components/ControllerPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/ControllerPage.js?ref=2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0",
"patch":"@@ -1,11 +1,176 @@\n import React, { useState } from 'react';\n+import { InputText } from 'primereact/inputtext';\n+import { TabView, TabPanel } from 'primereact/tabview';\n \n+import { DataTable } from 'primereact/datatable';\n+import { Column } from 'primereact/column';\n+import Table from 'react-bootstrap/Table';\n+\n+import axios from 'axios';\n \n export function ControllerPage() {\n+    const [brand, setBrand] = useState('');\n+    const [model, setModel] = useState('');\n+    const [powerType, setPowerType] = useState('');\n+\n+    const [long, setLong] = useState('');\n+    const [lat, setLat] = useState('');\n+\n+    const [controllerId, setControllerId] = useState('');\n+\n+    const [devices, setDevices] = useState([]);\n+    const [command, setCommand] = useState('Please enter command');\n+\n+    const [activeIndex, setActiveIndex] = useState(0);\n+    \n+    // const [controllerInfo, setControllerInfo] = useState([]);\n+\n+    const defaultURL = `http://localhost:8000/controller`;\n+    const getControllerDevicesHandler = async (ev) => {\n+        ev.preventDefault();\n+        console.log(`device id is ${controllerId}`);\n+\n+        //NOTE: somehow doesn't work on my end ... very weird anamoly!\n+        // const fetchedRes = await axios({\n+        //     method: 'get',\n+        //     url: 'http://localhost:8000/controller/devices',\n+        //     data: { \n+        //         id: 'CONTR-2',\n+        //         // id: controllerId\n+        //     });\n+\n+        const fetchedRes = await axios({\n+            method: 'get',\n+            url: `${defaultURL}/devices?id=${controllerId}`\n+        });\n+        // console.log(`fetchedRes: ${fetchedRes.data}`);\n+    };\n+\n+    const registerDeviceHandler = async (ev) => {\n+        ev.preventDefault();\n+\n+        const res = await axios({\n+            method: 'post',\n+            url: 'http://localhost:8000/device/register',\n+            data: {\n+                brand: brand,\n+                model: model,\n+                powerType: powerType,\n+                location: {\n+                    long: long,\n+                    lat: lat\n+                }\n+            }\n+        });\n+    };\n+\n+    const commandInDeviceHandler = (data) => {\n+        console.log(`----inside commandInDeviceHandler: lastExecCommand: ${data.lastExecCommand} -----`);\n+        return (\n+            <form onSubmit={(ev) => updateCommandHandler(ev, data)}>\n+                {data.lastExecCommand ?\n+                    <label> data.lastExecCommand</label>\n+                    : \n+                    <InputText value={command}\n+                        onChange={ev => setCommand(ev.target.value)} />}\n+                <button> Change command</button>\n+            </form>\n+        );\n+    }\n+\n+    const updateCommandHandler = async (ev, data) => {\n+        ev.preventDefault();\n+\n+        console.log(`Inside updateCommandHandler(), deviceID: ${data.deviceID}, command: ${ev.target.value}`)\n+\n+        setCommand(ev.target.value);\n+\n+        const res = await axios({\n+            method: 'post',\n+            url: 'http://localhost:8000/device/executeCommand',\n+            data: {\n+                deviceID: data.deviceID,\n+                command: command\n+             }\n+        });\n+    }\n+\n     return (\n-        <div>\n-            <p>NavBar item has 2 tabs  Register Controller,\u200b Show Controller info </p>\n-            <label> Display Controller Info </label>\n-        </div>\n+        <>\n+            <TabView activeIndex={activeIndex} onTabChange={(e) => setActiveIndex(e.index)}>\n+                <TabPanel header=\"Show all Device info of Controller\">\n+                    <label> Controller ID:  </label>\n+                    <form onSubmit={getControllerDevicesHandler}>\n+                        <InputText value={controllerId} onChange={e => setControllerId(e.target.value)} />\n+\n+                        <button name=\"display\">Display</button>\n+                    </form>\n+                    {/* <DataTable value={devices}>\n+                        {dynamicColumns}\n+                        </DataTable>  */}\n+                    <p>Here is table of each device and its command</p>\n+                    <Table striped bordered hover size=\"sm\">\n+                        <thead>\n+                            <tr>\n+                                <th>Device</th>\n+                                <th>Update Command</th>\n+                            </tr>\n+                        </thead>\n+                        <tbody>\n+                            {devices ? devices.map(\n+                                (rowData, index) => (\n+                                    <tr key={index}>\n+                                        <td>{rowData.deviceID}</td>\n+                                        <td>{commandInDeviceHandler(rowData)}</td>\n+                                    </tr>))\n+                                : <tr><td></td></tr>}\n+                        </tbody>\n+                    </Table>\n+                </TabPanel>\n+                <TabPanel header=\"Register Device\">\n+                    <form onSubmit={registerDeviceHandler}>\n+                    <Table striped bordered hover size=\"sm\">\n+                            <tbody>\n+                                <tr>\n+                                    <td>\n+                                        <label>Device Brand:</label>\n+                                        <InputText value={brand} onChange={(e) => setBrand(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Model:</label>\n+                                        <InputText value={model} onChange={(e) => setModel(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Power Type:</label>\n+                                        <InputText value={powerType} onChange={(e) => setPowerType(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Longtitude:</label>\n+                                        <InputText value={long} onChange={(e) => setLong(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Latitude:</label>\n+                                        <InputText value={lat} onChange={(e) => setLat(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <button name=\"submit\">Register</button>\n+                                    </td>\n+                                </tr>\n+                            </tbody>\n+                        </Table>\n+                    </form>\n+                </TabPanel>\n+            </TabView>\n+        </>\n     );\n }\n\\ No newline at end of file"
},
{
"sha":"2002f80cab93a0b5ffb4931a5f0724f40138252a",
"filename":"frontend/src/components/DevicePage.js",
"status":"modified",
"additions":48,
"deletions":49,
"changes":97,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0",
"patch":"@@ -1,13 +1,13 @@\n import React, { useState } from 'react';\n import { InputText } from 'primereact/inputtext';\n-import {InputSwitch} from 'primereact/inputswitch';\n+import { InputSwitch } from 'primereact/inputswitch';\n import Table from 'react-bootstrap/Table';\n import Moment from 'react-moment';\n \n import axios from 'axios';\n \n export function DevicePage() {\n-  //const defaultURL = 'http://localhost:8000/device/';\n+  const defaultURL = 'http://localhost:8000/device/';\n \n   const [deviceId, setDeviceId] = useState('');\n   const [controllerId, setControllerId] = useState('');\n@@ -23,7 +23,7 @@ export function DevicePage() {\n   const [lastCommand, setLastCommand] = useState('');\n   const [inputTemp, setInputTemperature] = useState('');\n   const [inputStatus, setInputStatus] = useState(false);\n-  \n+\n \n   const getDeviceInformationIdHandler = async ev => {\n     ev.preventDefault();\n@@ -32,7 +32,6 @@ export function DevicePage() {\n \n     const res = await axios({\n       method: 'get',\n-      //url: defaultURL + 'controller',\n       url: 'http://localhost:8000/device/id',\n       params: {\n         deviceId: deviceId,\n@@ -61,7 +60,7 @@ export function DevicePage() {\n \n     await axios({\n       method: 'post',\n-      \n+\n       url: 'http://localhost:8000/device/update',\n       data: {\n         deviceId: deviceId,\n@@ -74,10 +73,10 @@ export function DevicePage() {\n   const setInUseStatus = async (e) => {\n \n     setInputStatus(e.value);\n-   \n+\n     await axios({\n       method: 'post',\n-      \n+\n       url: 'http://localhost:8000/device/updateStatus',\n       data: {\n         deviceId: deviceId,\n@@ -89,72 +88,72 @@ export function DevicePage() {\n   return (\n     <div>\n       <section className=\"section-setting\">\n-      <form onSubmit={getDeviceInformationIdHandler}>\n-        {/* <label htmlFor=\"Type in deviceID\">Get Device Details </label> */}\n-        <label> Device ID: </label>\n-        <InputText\n-          value={deviceId}\n-          onChange={e => setDeviceId(e.target.value)}\n-        />\n-        <button name=\"submit\"> Submit </button>\n-      </form>\n+        <form onSubmit={getDeviceInformationIdHandler}>\n+          {/* <label htmlFor=\"Type in deviceID\">Get Device Details </label> */}\n+          <label> Device ID: </label>\n+          <InputText\n+            value={deviceId}\n+            onChange={e => setDeviceId(e.target.value)}\n+          />\n+          <button name=\"submit\"> Submit </button>\n+        </form>\n       </section>\n \n       <section className=\"section-setting\">\n         <Table striped bordered hover size=\"sm\">\n           <thead >\n-            <tr className =\"tr-heading\">\n+            <tr className=\"tr-heading\">\n               <th colSpan=\"2\">Device Information </th>\n             </tr>\n           </thead>\n           <tbody>\n             <tr>\n-                <th>Device ID</th>\n-                <td> {deviceId}</td>\n+              <th>Device ID</th>\n+              <td> {deviceId}</td>\n             </tr>\n             <tr>\n-                <th>Brand</th>\n-                <td> {brand} </td>\n+              <th>Brand</th>\n+              <td> {brand} </td>\n             </tr>\n             <tr>\n-                <th>Model</th>\n-                <td> {model} </td>\n+              <th>Model</th>\n+              <td> {model} </td>\n             </tr>\n             <tr>\n-                <th>MAC Address</th>\n-                <td> {mac} </td>\n+              <th>MAC Address</th>\n+              <td> {mac} </td>\n             </tr>\n             <tr>\n-                <th>Power Type</th>\n-                <td> {powerType} </td>\n+              <th>Power Type</th>\n+              <td> {powerType} </td>\n             </tr>\n             <tr>\n-                <th>Controller ID</th>\n-                <td> {controllerId} </td>\n+              <th>Controller ID</th>\n+              <td> {controllerId} </td>\n             </tr>\n             <tr>\n-                <th>Location - Longitude</th>\n-                <td>{long} </td>\n+              <th>Location - Longitude</th>\n+              <td>{long} </td>\n             </tr>\n             <tr>\n-                <th>Location - Latitude </th>\n-                <td> {lat}</td>\n+              <th>Location - Latitude </th>\n+              <td> {lat}</td>\n             </tr>\n             <tr>\n-                <th>Date Last Seen</th>\n-                <td> { lastSeen ? <Moment>{lastSeen}</Moment> : '' } </td>\n+              <th>Date Last Seen</th>\n+              <td> {lastSeen ? <Moment>{lastSeen}</Moment> : ''} </td>\n             </tr>\n             <tr>\n-                <th>Temperature</th>\n-                <td> {temp}</td>\n+              <th>Temperature</th>\n+              <td> {temp}</td>\n             </tr>\n             <tr>\n-                <th>In-Use Status</th>\n-                <td> {status}</td>\n+              <th>In-Use Status</th>\n+              <td> {status}</td>\n             </tr>\n             <tr>\n-                <th>Last Executed Command</th>\n-                <td> {lastCommand}</td>\n+              <th>Last Executed Command</th>\n+              <td> {lastCommand}</td>\n             </tr>\n           </tbody>\n         </Table>\n@@ -165,14 +164,14 @@ export function DevicePage() {\n         <h4>\n           Update Device's Current Temperature\n         </h4>\n-      <form onSubmit={setCurrentTempHandler}>\n-        <label> Current Temperature </label>\n-        <InputText\n-          value={inputTemp}\n-          onChange={e => setInputTemperature(e.target.value)}\n-        />\n-        <button name=\"submit\"> Set Temperature </button>\n-      </form>\n+        <form onSubmit={setCurrentTempHandler}>\n+          <label> Current Temperature </label>\n+          <InputText\n+            value={inputTemp}\n+            onChange={e => setInputTemperature(e.target.value)}\n+          />\n+          <button name=\"submit\"> Set Temperature </button>\n+        </form>\n       </section>\n       <section>\n         <h4>Set In-Use Status</h4>"
},
{
"sha":"69cd19961f01b9380b5898addf6432b6a496a48d",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"modified",
"additions":25,
"deletions":25,
"changes":50,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=2e08f0c20ec637ec5a3fc1f03042f4b5346b60d0",
"patch":"@@ -3,8 +3,8 @@ import { InputText } from 'primereact/inputtext';\n import { TabView, TabPanel } from 'primereact/tabview';\n import { Dropdown } from 'primereact/dropdown';\n import axios from 'axios';\n-import 'primereact/resources/themes/saga-blue/theme.css';\n-import 'primereact/resources/primereact.css';\n+// import 'primereact/resources/themes/saga-blue/theme.css';\n+// import 'primereact/resources/primereact.css';\n \n export function SuperAdminPage() {\n \n@@ -41,7 +41,7 @@ export function SuperAdminPage() {\n         ev.preventDefault();\n \n         contDropdown[index] = contId;\n-        setContDropdown(contDropdown);        \n+        setContDropdown(contDropdown);\n \n         const res1 = await axios({\n             method: 'post',\n@@ -180,30 +180,30 @@ export function SuperAdminPage() {\n                 <TabPanel header=\"Assign/Change Controller\">\n                     <table>\n                         <thead>\n-                        <tr>\n-                    <th>Device ID</th>\n-                     <th>Controller ID</th>\n-                     <th>Action</th>\n-                     <th>New Controller ID</th>\n-                </tr>\n+                            <tr>\n+                                <th>Device ID</th>\n+                                <th>Controller ID</th>\n+                                <th>Action</th>\n+                                <th>New Controller ID</th>\n+                            </tr>\n                         </thead>\n                         <tbody>\n-{devices ? devices.map((rowData, index) => (\n-                 <tr key={index}>\n-                     <td>{rowData.deviceID}</td>\n-                     <td>{rowData.controllerID ? rowData.controllerID : 'Not Assigned'}</td>\n-                     <td>\n-                         {rowData.controllerID ? <label>Change</label> : <label>Assign</label>}\n-                     </td>\n-                     <td>\n-                        {rowData.controllerID ? \n-                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => changeControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\"/> \n-                            :\n-                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => assignControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\"/>\n-                        }\n-                     </td>\n-                 </tr>\n-)) : <tr><td></td></tr>}\n+                            {devices ? devices.map((rowData, index) => (\n+                                <tr key={index}>\n+                                    <td>{rowData.deviceID}</td>\n+                                    <td>{rowData.controllerID ? rowData.controllerID : 'Not Assigned'}</td>\n+                                    <td>\n+                                        {rowData.controllerID ? <label>Change</label> : <label>Assign</label>}\n+                                    </td>\n+                                    <td>\n+                                        {rowData.controllerID ?\n+                                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => changeControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\" />\n+                                            :\n+                                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => assignControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\" />\n+                                        }\n+                                    </td>\n+                                </tr>\n+                            )) : <tr><td></td></tr>}\n                         </tbody>\n                     </table>\n                 </TabPanel>"
}
]
},
{
"commit_sha":"fbfaf2ad4bcab34a97fc4d70170b74839a72586d",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmZiZmFmMmFkNGJjYWIzNGE5N2ZjNGQ3MDE3MGI3NDgzOWE3MjU4NmQ=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/fbfaf2ad4bcab34a97fc4d70170b74839a72586d",
"commit_date":"2021-03-14T23:33:19Z",
"files":[
{
"sha":"68375058453fc6c1419a1c852fcb48f2a59be3de",
"filename":"README.md",
"status":"modified",
"additions":26,
"deletions":19,
"changes":45,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fbfaf2ad4bcab34a97fc4d70170b74839a72586d/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fbfaf2ad4bcab34a97fc4d70170b74839a72586d/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=fbfaf2ad4bcab34a97fc4d70170b74839a72586d",
"patch":"@@ -1,28 +1,35 @@\n-# Main\n-<h2> Setting up the frontend </h2>\n+# Electric Vehicle Charger Registry\n+<h2> Project Description </h2>\n+A blockchain registry for  Electric Vehicle Charging Stations. The system will track, manage and enable accurate and reliable \n+data sharing on an open platform where operators provide stations to serve owners of electric vehicles and all the participants are protected from unfair practises.\n <hr>\n-The front end will be the interface through which users will interact with the business application.\n-<p> The front end has been designed with React and it connects with the fabric run time using a rest server middleware.\n-</p>\n-\n-<h2> Steps </h2>\n+<h2> Network participants </h2>\n <ol>\n-    <li> <strong> Install dependencies: </strong>  Navigate to the root folder of the frontend directory and\n-Run <strong> npm install  </strong>to get the required dependencies. You can open the package.json file to see the required packages \n-    </li>\n-    <li> Navigate to <strong> http://localhost:3000 </strong>  on your browser to see the running app\n+    <li> <strong> Service Providers: </strong>\n+        Investors who purchased EV Charging equipment from manufacturers and rented a location in a \n+        parking lot for hosting these chargers.\n     </li>\n+    <li> <strong> Controller: </strong>\n+        A parking lot owner that hosts those devices or a utility company to which the device is connected\n+    </li>   \n+    <li> <strong> Users: </strong>\n+        Owners of electric vehicles who visit a location to charge their vehicles.\n+    </li>  \n </ol>\n+<hr>\n+\n+<h2> Problem </h2>\n+With the improvement in battery technology, and incentives from various governments we are seeing an increase in demand \n+for electric vehicles. An open blockchain platform to cater for more Charging Station, tracking and managing them in an\n+environment with multiple participating Service Provider will be very useful.\n+<hr>\n+\n+![alt text](images/IOTRegStateDiagram.png?raw=true) <br>\n+\n \n-![alt text](./public/images/homepage.png?raw=true) <br>\n \n-<p>In our frontend EV Charger System scenario, \n-we will have 3 users representing the three participants in the business network:</p>\n-<ul>\n-    <li> Devices</li>\n-    <li> Controller </li>\n-    <li> Super Admin </li>\n-</ul>\n+![alt text](images/EVCharger-HLF.png?raw=true) <br>\n \n+![alt text](images/BlockchainArchitecture.png?raw=true) <br>\n <h2> TO DO:</h2>\n <hr>"
},
{
"sha":"f58af16a851eb251a67389247ee2646b9f83483a",
"filename":"frontend/yarn.lock",
"status":"removed",
"additions":0,
"deletions":12014,
"changes":12014,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/73d5b89c5508711f61a9b24079ce9faabf2f58c9/frontend/yarn.lock",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/73d5b89c5508711f61a9b24079ce9faabf2f58c9/frontend/yarn.lock",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/yarn.lock?ref=73d5b89c5508711f61a9b24079ce9faabf2f58c9"
},
{
"sha":"73c6446bb04feddd6be267f25c14a64e53f6c04b",
"filename":"images/BlockchainArchitecture.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fbfaf2ad4bcab34a97fc4d70170b74839a72586d/images/BlockchainArchitecture.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fbfaf2ad4bcab34a97fc4d70170b74839a72586d/images/BlockchainArchitecture.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/images/BlockchainArchitecture.png?ref=fbfaf2ad4bcab34a97fc4d70170b74839a72586d"
},
{
"sha":"6a5ad2c322df9eee8db5118aa5bfbdae0399e13d",
"filename":"images/EVCharger-HLF.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fbfaf2ad4bcab34a97fc4d70170b74839a72586d/images/EVCharger-HLF.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fbfaf2ad4bcab34a97fc4d70170b74839a72586d/images/EVCharger-HLF.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/images/EVCharger-HLF.png?ref=fbfaf2ad4bcab34a97fc4d70170b74839a72586d"
},
{
"sha":"0fc272d41327b6523253367d3023e2738637321c",
"filename":"images/IOTRegStateDiagram.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fbfaf2ad4bcab34a97fc4d70170b74839a72586d/images/IOTRegStateDiagram.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fbfaf2ad4bcab34a97fc4d70170b74839a72586d/images/IOTRegStateDiagram.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/images/IOTRegStateDiagram.png?ref=fbfaf2ad4bcab34a97fc4d70170b74839a72586d"
}
]
},
{
"commit_sha":"73d5b89c5508711f61a9b24079ce9faabf2f58c9",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjczZDViODljNTUwODcxMWY2MWE5YjI0MDc5Y2U5ZmFhYmYyZjU4Yzk=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/73d5b89c5508711f61a9b24079ce9faabf2f58c9",
"commit_date":"2021-03-14T17:09:31Z",
"files":[
{
"sha":"2dbd9351ba7ed8c8a0feac407bf794a357527169",
"filename":"README.md",
"status":"added",
"additions":28,
"deletions":0,
"changes":28,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/73d5b89c5508711f61a9b24079ce9faabf2f58c9/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/73d5b89c5508711f61a9b24079ce9faabf2f58c9/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=73d5b89c5508711f61a9b24079ce9faabf2f58c9",
"patch":"@@ -0,0 +1,28 @@\n+# Main\n+<h2> Setting up the frontend </h2>\n+<hr>\n+The front end will be the interface through which users will interact with the business application.\n+<p> The front end has been designed with React and it connects with the fabric run time using a rest server middleware.\n+</p>\n+\n+<h2> Steps </h2>\n+<ol>\n+    <li> <strong> Install dependencies: </strong>  Navigate to the root folder of the frontend directory and\n+Run <strong> npm install  </strong>to get the required dependencies. You can open the package.json file to see the required packages \n+    </li>\n+    <li> Navigate to <strong> http://localhost:3000 </strong>  on your browser to see the running app\n+    </li>\n+</ol>\n+\n+![alt text](./public/images/homepage.png?raw=true) <br>\n+\n+<p>In our frontend EV Charger System scenario, \n+we will have 3 users representing the three participants in the business network:</p>\n+<ul>\n+    <li> Devices</li>\n+    <li> Controller </li>\n+    <li> Super Admin </li>\n+</ul>\n+\n+<h2> TO DO:</h2>\n+<hr>"
},
{
"sha":"21fc59be2635e3233aebc99847bfc75f25568d0c",
"filename":"chaincode/README.md",
"status":"added",
"additions":6,
"deletions":0,
"changes":6,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/73d5b89c5508711f61a9b24079ce9faabf2f58c9/chaincode/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/73d5b89c5508711f61a9b24079ce9faabf2f58c9/chaincode/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/README.md?ref=73d5b89c5508711f61a9b24079ce9faabf2f58c9",
"patch":"@@ -0,0 +1,6 @@\n+# Chain code\n+<h2> Understanding the chain code </h2>\n+<hr>\n+\n+<h2> TO DO:</h2>\n+<hr>"
}
]
},
{
"commit_sha":"7882afd352db4392e558a2cc655216c6c6d1eb35",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2Ojc4ODJhZmQzNTJkYjQzOTJlNTU4YTJjYzY1NTIxNmM2YzZkMWViMzU=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/7882afd352db4392e558a2cc655216c6c6d1eb35",
"commit_date":"2021-03-12T04:23:00Z",
"files":[
{
"sha":"406be6c000b06bae3452264a5c2f8904d2baf7ac",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"modified",
"additions":51,
"deletions":39,
"changes":90,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/7882afd352db4392e558a2cc655216c6c6d1eb35/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/7882afd352db4392e558a2cc655216c6c6d1eb35/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=7882afd352db4392e558a2cc655216c6c6d1eb35",
"patch":"@@ -14,8 +14,9 @@ export function SuperAdminPage() {\n     const [lat, setLat] = useState('');\n     const [activeIndex, setActiveIndex] = useState(0);\n     const [devices, setDevices] = useState('');\n-    const [controllers, setControllers] = useState('');\n+    const [controllers, setControllers] = useState([]);\n     const [controller, setController] = useState('');\n+    const [contDropdown, setContDropdown] = useState([]);\n \n     const registerControllerHandler = async (ev) => {\n         ev.preventDefault();\n@@ -36,8 +37,21 @@ export function SuperAdminPage() {\n         });\n     };\n \n-    const getDevicesHandler = async (ev) => {\n-        console.log('inside get devices');\n+    const assignControllerEvent = async (ev, contId, devId, index) => {\n+        ev.preventDefault();\n+\n+        contDropdown[index] = contId;\n+        setContDropdown(contDropdown);        \n+\n+        const res1 = await axios({\n+            method: 'post',\n+            url: 'http://localhost:8000/controller/assign',\n+            data: {\n+                deviceID: devId,\n+                controllerID: contId\n+            }\n+        });\n+\n         const res = await axios({\n             method: 'get',\n             url: 'http://localhost:8000/device/all'\n@@ -53,24 +67,25 @@ export function SuperAdminPage() {\n             method: 'get',\n             url: 'http://localhost:8000/controller/all'\n         });\n-        let contRestult = [];\n+        let contResult = [];\n         resCont.data.map(record => {\n-            contRestult.push(record.Record.controllerID);\n+            contResult.push(record.Record.controllerID);\n         });\n-        console.log('resCont = ' + JSON.stringify(contRestult));\n-        setControllers(contRestult);\n-    };\n+        setControllers(contResult);\n+    }\n \n-    const assignControllerEvent = async (ev, contId, devId) => {\n+    const changeControllerEvent = async (ev, contId, devId, index) => {\n         ev.preventDefault();\n-        console.log('inside assign, contID= ' + contId + ', devId = ' + devId);\n-        setController(contId);\n+\n+        contDropdown[index] = contId;\n+        setContDropdown(contDropdown);\n+\n         const res1 = await axios({\n             method: 'post',\n-            url: 'http://localhost:8000/controller/assign',\n+            url: 'http://localhost:8000/controller/change',\n             data: {\n                 deviceID: devId,\n-                controllerID: contId\n+                newControllerID: contId\n             }\n         });\n \n@@ -96,19 +111,9 @@ export function SuperAdminPage() {\n         setControllers(contResult);\n     }\n \n-    const changeControllerEvent = async (ev, contId, devId) => {\n-        ev.preventDefault();\n-        console.log('inside change, contID= ' + contId + ', devId = ' + devId);\n-        setController(contId);\n-        const res1 = await axios({\n-            method: 'post',\n-            url: 'http://localhost:8000/controller/change',\n-            data: {\n-                deviceID: devId,\n-                newControllerID: contId\n-            }\n-        });\n-\n+    const tabChangeHandler = async (ev) => {\n+        setActiveIndex(ev.index);\n+        console.log('inside get devices');\n         const res = await axios({\n             method: 'get',\n             url: 'http://localhost:8000/device/all'\n@@ -124,18 +129,18 @@ export function SuperAdminPage() {\n             method: 'get',\n             url: 'http://localhost:8000/controller/all'\n         });\n-        let contResult = [];\n+        let contRestult = [];\n         resCont.data.map(record => {\n-            contResult.push(record.Record.controllerID);\n+            contRestult.push(record.Record.controllerID);\n         });\n-        setControllers(contResult);\n+        setControllers(contRestult);\n     }\n \n     return (\n         <div>\n-            <TabView activeIndex={activeIndex} onTabChange={(e) => setActiveIndex(e.index)}>\n-                <TabPanel header=\"Register\">\n-                    <label> Display Controller Info </label>\n+            <TabView activeIndex={activeIndex} onTabChange={tabChangeHandler}>\n+                <TabPanel header=\"Register Controller\">\n+                    <label> Fill new Controller Info: </label>\n                     <form onSubmit={registerControllerHandler}>\n                         <table>\n                             <tbody>\n@@ -172,24 +177,31 @@ export function SuperAdminPage() {\n                         </table>\n                     </form>\n                 </TabPanel>\n-                <TabPanel header=\"Display\">\n-                    <button name=\"display\" onClick={(e) => getDevicesHandler(e.target.value)}>Display</button>\n+                <TabPanel header=\"Assign/Change Controller\">\n                     <table>\n                         <thead>\n                         <tr>\n                     <th>Device ID</th>\n                      <th>Controller ID</th>\n-                     <th></th>\n-                     <th></th>\n+                     <th>Action</th>\n+                     <th>New Controller ID</th>\n                 </tr>\n                         </thead>\n                         <tbody>\n {devices ? devices.map((rowData, index) => (\n-                 <tr>\n+                 <tr key={index}>\n                      <td>{rowData.deviceID}</td>\n                      <td>{rowData.controllerID ? rowData.controllerID : 'Not Assigned'}</td>\n-                     <td>{rowData.controllerID ? <button>Change</button> : controllers ? <Dropdown value={controller} options={controllers} onChange={(e) => assignControllerEvent(e, e.value, rowData.deviceID)} placeholder=\"Select a Controller\"/> : '' }</td>\n-                     <td>{rowData.controllerID ? controllers ? <Dropdown value={controller} options={controllers} onChange={(e) => changeControllerEvent(e, e.value, rowData.deviceID)} placeholder=\"Select a Controller\"/> : '' : <button>Assign</button>}</td>\n+                     <td>\n+                         {rowData.controllerID ? <label>Change</label> : <label>Assign</label>}\n+                     </td>\n+                     <td>\n+                        {rowData.controllerID ? \n+                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => changeControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\"/> \n+                            :\n+                            <Dropdown value={contDropdown[index]} options={controllers} onChange={(e) => assignControllerEvent(e, e.value, rowData.deviceID, index)} placeholder=\"Select a Controller\"/>\n+                        }\n+                     </td>\n                  </tr>\n )) : <tr><td></td></tr>}\n                         </tbody>"
}
]
},
{
"commit_sha":"bfc94a81cf319425f8322908210b79e455a4bfa2",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmJmYzk0YTgxY2YzMTk0MjVmODMyMjkwODIxMGI3OWU0NTVhNGJmYTI=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/bfc94a81cf319425f8322908210b79e455a4bfa2",
"commit_date":"2021-03-12T03:49:53Z",
"files":[
{
"sha":"566ab2f54847a25340d6b9bb14ef4c9f0e546663",
"filename":"EVCGoveranceFramework.md",
"status":"modified",
"additions":6,
"deletions":6,
"changes":12,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/bfc94a81cf319425f8322908210b79e455a4bfa2/EVCGoveranceFramework.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/bfc94a81cf319425f8322908210b79e455a4bfa2/EVCGoveranceFramework.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/EVCGoveranceFramework.md?ref=bfc94a81cf319425f8322908210b79e455a4bfa2",
"patch":"@@ -1,13 +1,13 @@\n-  ## EVC Governance Framework Documentation \n+  # EVC Governance Framework Documentation \n \n-  ### Overview\n+  ## Overview\n   The Electric Vehicle Charger (EVC) Platform Governance Framework is the legal foundation for the blockchain-based EVC network - an IoT registry for private sectors.   \n \n Members that constitute the EVC platform are manufacturers/operators of the EV charging systems. The project is open source and allows any organizations of this nature to join.   \n \n The EVC Platform Governance framework supports the system by executing the various agreements relating to the management of or transacting in the system.  \n \n-### Motivation  \n+## Motivation  \n The governance framework is needed to allow deliberation on the overhead required to operate an open network of EVC devices across certain geographical areas like the Greater Toronto Area (GTA). Some of the deliberations could be on:  \n \n * Agreement on the accuracy and latest information about the controllers and their related devices on the blockchain network  \n@@ -45,7 +45,7 @@ It is envisioned that the governing body may be registered as a non-profit entit\n \n * **Governing Board Policy:** This policy centered on governing board's activities executed by consensuses like voting, board term, and the major technical decisions related to operating the network. \n \n-# Rules  \n+## Rules  \n * **Ledger Access Rules:**  \n participating parties MUST register as an EVC Owner to participate in the blockchain network.  \n \n@@ -58,13 +58,13 @@ Data of each participating party MUST remain private for editing just for the en\n    * Every participant MUST be given opportunities to present to the individual in Governing Board.\n    * When a formal vote is required, it MUST be conducted using a voting process agreeable to the majority of the group. \n \n-# Agreements\n+## Agreements\n * **Participation Membership Agreement:** between members of the Governing Board to agree on decisions by consensus.\n * **Transaction Author Agreement:** between Platform and participating party to initiate a write transaction to the EVC Ledger.\n * **Transaction Endorser Agreement:** between Platform and participating party to request permission for write access to the EVC Ledger.  \n * **Data Processing Agreement:** the agreement between the platform and the participating party establishes the responsibilities of complying with GDPR and other data protection regulations.  \n \n-# Membership  \n+## Membership  \n \n **The membership process:**    \n * For instructions on how to become a member, show the intention to apply. Please email us at the following address: governingboard@evcharger.com"
}
]
},
{
"commit_sha":"39c6efc1b9a0dce39acb488e34a4ab6604108fe3",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjM5YzZlZmMxYjlhMGRjZTM5YWNiNDg4ZTM0YTRhYjY2MDQxMDhmZTM=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/39c6efc1b9a0dce39acb488e34a4ab6604108fe3",
"commit_date":"2021-03-12T03:36:25Z",
"files":[
{
"sha":"8e15d1c2e8d1a21f06e9f968f61fdc1b52295094",
"filename":"EVCGoveranceFramework.md",
"status":"added",
"additions":79,
"deletions":0,
"changes":79,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/39c6efc1b9a0dce39acb488e34a4ab6604108fe3/EVCGoveranceFramework.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/39c6efc1b9a0dce39acb488e34a4ab6604108fe3/EVCGoveranceFramework.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/EVCGoveranceFramework.md?ref=39c6efc1b9a0dce39acb488e34a4ab6604108fe3",
"patch":"@@ -0,0 +1,79 @@\n+  ## EVC Governance Framework Documentation \n+\n+  ### Overview\n+  The Electric Vehicle Charger (EVC) Platform Governance Framework is the legal foundation for the blockchain-based EVC network - an IoT registry for private sectors.   \n+\n+Members that constitute the EVC platform are manufacturers/operators of the EV charging systems. The project is open source and allows any organizations of this nature to join.   \n+\n+The EVC Platform Governance framework supports the system by executing the various agreements relating to the management of or transacting in the system.  \n+\n+### Motivation  \n+The governance framework is needed to allow deliberation on the overhead required to operate an open network of EVC devices across certain geographical areas like the Greater Toronto Area (GTA). Some of the deliberations could be on:  \n+\n+* Agreement on the accuracy and latest information about the controllers and their related devices on the blockchain network  \n+* Updates to the codes. Deliberation on features or initiatives for the next system iteration.  \n+* Changes to the governing rules for the governance of the platform.   \n+* Ideas to ensure the financial sustainability of the platform. \n+\n+## Corporate structure\u00a0\n+The Governing Board is responsible for overseeing the EVC Governance Framework. Members that constitute the governing board are representatives from each participating party on the EVC platform. Recommendations of potential representatives that would be voted into the governing body would be provided by the participating organizations.  \n+\n+It is envisioned that the governing body may be registered as a non-profit entity to allow it to carry out its activities legally.  \n+\n+## Roles  \n+1.  **Governing Board:** This is the body responsible for making decisions related to the network and its participants.  \n+\n+2.  **(Blockchain Network) Operators:** These are roles that are contributing to the infrastructure, maintenance, and financial needs of the platform conforming to the EVC Governance Framework.  \n+\n+3.  **EVC Owners:** These are investors who buy EV chargers or manufacturers of EV chargers who are participants in the EV charger network.  \n+\n+4.  **Developers:** These are technical staff members responsible for writing source code for the blockchain network. \n+\n+## Policies  \n+* **Ledger Access Policy:**  \n+\n+    * Each participating party is permitted to join the network with a specified number of peers based on the governing body's approval.  \n+    * Each node is provisioned using the certificate provided to them at the onboarding time.\n+    * Transactions are started and processed by the peer nodes of the participating party.  \n+\n+* **Ledger Data Policy:** \n+\n+    * Participating parties can view and edit data that is related to their EV Chargers.  \n+    * Devices and controllers registration\n+    * Devices and controllers data modification.\n+    * Assigning a device to a controller or changing a device controller.  \n+\n+* **Governing Board Policy:** This policy centered on governing board's activities executed by consensuses like voting, board term, and the major technical decisions related to operating the network. \n+\n+# Rules  \n+* **Ledger Access Rules:**  \n+participating parties MUST register as an EVC Owner to participate in the blockchain network.  \n+\n+* **Ledger Data Rules:**  \n+Data of each participating party MUST remain private for editing just for the entity that owns it but open for viewing to all entities.  \n+\n+* **Governing Board Rules:**    \n+   * The Governing Board MUST be modified every three years to allow for rotation of more representatives for their contributions to the EVC platform Governance.  \n+   * The number of representatives on the Governing Board MUST be capped at 10.\n+   * Every participant MUST be given opportunities to present to the individual in Governing Board.\n+   * When a formal vote is required, it MUST be conducted using a voting process agreeable to the majority of the group. \n+\n+# Agreements\n+* **Participation Membership Agreement:** between members of the Governing Board to agree on decisions by consensus.\n+* **Transaction Author Agreement:** between Platform and participating party to initiate a write transaction to the EVC Ledger.\n+* **Transaction Endorser Agreement:** between Platform and participating party to request permission for write access to the EVC Ledger.  \n+* **Data Processing Agreement:** the agreement between the platform and the participating party establishes the responsibilities of complying with GDPR and other data protection regulations.  \n+\n+# Membership  \n+\n+**The membership process:**    \n+* For instructions on how to become a member, show the intention to apply. Please email us at the following address: governingboard@evcharger.com\n+* The participating organization will propose an individual to the current governing board. \n+* The governing board will then vote to accept or decline the proposed representative.  \n+  \n+The Governing Board must constitute ten members - three founding members are elected, and the remaining seven will be voted in from among the participating parties on the platform.  \n+\n+**Periodic Membership**   \n+Members of the Governing Board must be replaced every three years. This allows other participating organizations to have their representatives onboard. \n+\n+"
}
]
},
{
"commit_sha":"e4936c74f523ffe9d0ee8bdde4ab5d38359c89e0",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmU0OTM2Yzc0ZjUyM2ZmZTlkMGVlOGJkZGU0YWI1ZDM4MzU5Yzg5ZTA=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/e4936c74f523ffe9d0ee8bdde4ab5d38359c89e0",
"commit_date":"2021-03-12T02:16:18Z",
"files":[
{
"sha":"845f382621d7adf61cad21da6cfbef1bc2285c90",
"filename":"backend/README.md",
"status":"modified",
"additions":33,
"deletions":2,
"changes":35,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e4936c74f523ffe9d0ee8bdde4ab5d38359c89e0/backend/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e4936c74f523ffe9d0ee8bdde4ab5d38359c89e0/backend/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/README.md?ref=e4936c74f523ffe9d0ee8bdde4ab5d38359c89e0",
"patch":"@@ -1,3 +1,34 @@\n-# EVChargerReg Backend App\n+# Back End\n+<h2> Setting up the backend </h2>\n+<hr>\n+The backend is an express server that connects to the blockchain through the fabric sdk and exposes api endpoints \n+that enables transactions and queries from users utilizing the front end to be executed on the network.\n \n-<h2> How to run guide </h2>\n\\ No newline at end of file\n+<h2> Steps </h2>\n+<ol>\n+    <li> <strong> Install dependencies: </strong>  Navigate to the root of the backend directory and\n+Run <strong> npm install  </strong>to get the required dependencies. You can open the package.json file to see the \n+required packages \n+    </li>\n+    <li> Navigate to <strong> http://localhost:8000 </strong>  on your browser and you should see the express server welcome page <br>\n+    <em> Note: If you change the port on which the backend server is running,\n+    you will also have to update that on the frontend/src/components everywhere calls are made to endpoints through axios library.</em>\n+    </li>\n+</ol>\n+\n+![alt text](./public/images/backend.png?raw=true) <br>\n+\n+<p>In our frontend EV Charger System scenario, \n+we will have 3 users representing the three participants in the business network:</p>\n+<ul>\n+    <li> Devices</li>\n+    <li> Controller </li>\n+    <li> Super Admin </li>\n+</ul>\n+\n+<h2> TO DO:</h2>\n+<hr>\n+<ul>\n+    <li> Multi-user support with JWT Authentication </li>\n+</ul>\n+<hr>\n\\ No newline at end of file"
},
{
"sha":"2745d729d17b25a638a4e4e92c722d28f0a6fc43",
"filename":"backend/public/images/backend.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e4936c74f523ffe9d0ee8bdde4ab5d38359c89e0/backend/public/images/backend.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e4936c74f523ffe9d0ee8bdde4ab5d38359c89e0/backend/public/images/backend.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/public/images/backend.png?ref=e4936c74f523ffe9d0ee8bdde4ab5d38359c89e0"
}
]
},
{
"commit_sha":"87f677492d406add902149353a379ee409472af1",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2Ojg3ZjY3NzQ5MmQ0MDZhZGQ5MDIxNDkzNTNhMzc5ZWU0MDk0NzJhZjE=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/87f677492d406add902149353a379ee409472af1",
"commit_date":"2021-03-12T02:11:52Z",
"files":[
{
"sha":"9b88a6694d610cd73e1d28e5da9d10403d9d7a1f",
"filename":"frontend/README.md",
"status":"modified",
"additions":28,
"deletions":70,
"changes":98,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/87f677492d406add902149353a379ee409472af1/frontend/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/87f677492d406add902149353a379ee409472af1/frontend/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/README.md?ref=87f677492d406add902149353a379ee409472af1",
"patch":"@@ -1,70 +1,28 @@\n-# Getting Started with Create React App\n-\n-This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n-\n-## Available Scripts\n-\n-In the project directory, you can run:\n-\n-### `yarn start`\n-\n-Runs the app in the development mode.\\\n-Open [http://localhost:3000](http://localhost:3000) to view it in the browser.\n-\n-The page will reload if you make edits.\\\n-You will also see any lint errors in the console.\n-\n-### `yarn test`\n-\n-Launches the test runner in the interactive watch mode.\\\n-See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n-\n-### `yarn build`\n-\n-Builds the app for production to the `build` folder.\\\n-It correctly bundles React in production mode and optimizes the build for the best performance.\n-\n-The build is minified and the filenames include the hashes.\\\n-Your app is ready to be deployed!\n-\n-See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n-\n-### `yarn eject`\n-\n-**Note: this is a one-way operation. Once you `eject`, you can\u2019t go back!**\n-\n-If you aren\u2019t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n-\n-Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you\u2019re on your own.\n-\n-You don\u2019t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn\u2019t feel obligated to use this feature. However we understand that this tool wouldn\u2019t be useful if you couldn\u2019t customize it when you are ready for it.\n-\n-## Learn More\n-\n-You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n-\n-To learn React, check out the [React documentation](https://reactjs.org/).\n-\n-### Code Splitting\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)\n-\n-### Analyzing the Bundle Size\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)\n-\n-### Making a Progressive Web App\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)\n-\n-### Advanced Configuration\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)\n-\n-### Deployment\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)\n-\n-### `yarn build` fails to minify\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)\n+# Front End\n+<h2> Setting up the frontend </h2>\n+<hr>\n+The front end will be the interface through which users will interact with the business application.\n+<p> The front end has been designed with React and it connects with the fabric run time using a rest server middleware.\n+</p>\n+\n+<h2> Steps </h2>\n+<ol>\n+    <li> <strong> Install dependencies: </strong>  Navigate to the root folder of the frontend directory and\n+Run <strong> npm install  </strong>to get the required dependencies. You can open the package.json file to see the required packages \n+    </li>\n+    <li> Navigate to <strong> http://localhost:3000 </strong>  on your browser to see the running app\n+    </li>\n+</ol>\n+\n+![alt text](./public/images/homepage.png?raw=true) <br>\n+\n+<p>In our frontend EV Charger System scenario, \n+we will have 3 users representing the three participants in the business network:</p>\n+<ul>\n+    <li> Devices</li>\n+    <li> Controller </li>\n+    <li> Super Admin </li>\n+</ul>\n+\n+<h2> TO DO:</h2>\n+<hr>"
},
{
"sha":"29beeee90f62e53b7048be22ff9ddba35034b81a",
"filename":"frontend/public/images/homepage.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/87f677492d406add902149353a379ee409472af1/frontend/public/images/homepage.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/87f677492d406add902149353a379ee409472af1/frontend/public/images/homepage.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/images/homepage.png?ref=87f677492d406add902149353a379ee409472af1"
}
]
},
{
"commit_sha":"8c81001fca1d5a1b8e456017138cd82453f5a8ba",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjhjODEwMDFmY2ExZDVhMWI4ZTQ1NjAxNzEzOGNkODI0NTNmNWE4YmE=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/8c81001fca1d5a1b8e456017138cd82453f5a8ba",
"commit_date":"2021-03-11T22:23:19Z",
"files":[
{
"sha":"b0448caa36d750129ae5d7589d92976e63e8064e",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"modified",
"additions":6,
"deletions":6,
"changes":12,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8c81001fca1d5a1b8e456017138cd82453f5a8ba/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8c81001fca1d5a1b8e456017138cd82453f5a8ba/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=8c81001fca1d5a1b8e456017138cd82453f5a8ba",
"patch":"@@ -89,11 +89,11 @@ export function SuperAdminPage() {\n             method: 'get',\n             url: 'http://localhost:8000/controller/all'\n         });\n-        let contRestult = [];\n+        let contResult = [];\n         resCont.data.map(record => {\n-            contRestult.push(record.Record.controllerID);\n+            contResult.push(record.Record.controllerID);\n         });\n-        setControllers(contRestult);\n+        setControllers(contResult);\n     }\n \n     const changeControllerEvent = async (ev, contId, devId) => {\n@@ -124,11 +124,11 @@ export function SuperAdminPage() {\n             method: 'get',\n             url: 'http://localhost:8000/controller/all'\n         });\n-        let contRestult = [];\n+        let contResult = [];\n         resCont.data.map(record => {\n-            contRestult.push(record.Record.controllerID);\n+            contResult.push(record.Record.controllerID);\n         });\n-        setControllers(contRestult);\n+        setControllers(contResult);\n     }\n \n     return ("
}
]
},
{
"commit_sha":"27a000950986d3ef16dda9ece9dca42123f52d6d",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjI3YTAwMDk1MDk4NmQzZWYxNmRkYTllY2U5ZGNhNDIxMjNmNTJkNmQ=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/27a000950986d3ef16dda9ece9dca42123f52d6d",
"commit_date":"2021-03-11T22:14:09Z",
"files":[
{
"sha":"523be50d8e52c9aa3eac4ba0dfea2d25b0e98fd6",
"filename":"frontend/src/components/DevicePage.js",
"status":"modified",
"additions":13,
"deletions":16,
"changes":29,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/27a000950986d3ef16dda9ece9dca42123f52d6d/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/27a000950986d3ef16dda9ece9dca42123f52d6d/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=27a000950986d3ef16dda9ece9dca42123f52d6d",
"patch":"@@ -19,10 +19,13 @@ export function DevicePage() {\n   const [lat, setLat] = useState('');\n   const [lastSeen, setLastSeen] = useState('');\n   const [temp, setTemperature] = useState('');\n-  const [status, setStatus] = useState(true);\n+  const [status, setStatus] = useState('');\n   const [lastCommand, setLastCommand] = useState('');\n+  const [inputTemp, setInputTemperature] = useState('');\n+  const [inputStatus, setInputStatus] = useState(false);\n+  \n \n-  const getControllerIdHandler = async ev => {\n+  const getDeviceInformationIdHandler = async ev => {\n     ev.preventDefault();\n     // try {\n     console.log('deviceId selected ' + deviceId);\n@@ -62,15 +65,15 @@ export function DevicePage() {\n       url: 'http://localhost:8000/device/update',\n       data: {\n         deviceId: deviceId,\n-        currentTemp: temp,\n+        currentTemp: inputTemp,\n       },\n     });\n \n   }\n \n   const setInUseStatus = async (e) => {\n \n-    setStatus(e.value);\n+    setInputStatus(e.value);\n    \n     await axios({\n       method: 'post',\n@@ -86,15 +89,14 @@ export function DevicePage() {\n   return (\n     <div>\n       <section className=\"section-setting\">\n-      <form onSubmit={getControllerIdHandler}>\n+      <form onSubmit={getDeviceInformationIdHandler}>\n+        {/* <label htmlFor=\"Type in deviceID\">Get Device Details </label> */}\n+        <label> Device ID: </label>\n         <InputText\n           value={deviceId}\n           onChange={e => setDeviceId(e.target.value)}\n         />\n-        {/* <label htmlFor=\"Type in deviceID\">Get Controller </label> */}\n-        <label> Get Controller </label>\n         <button name=\"submit\"> Submit </button>\n-        <label>Controller ID: {controllerId}</label>\n       </form>\n       </section>\n \n@@ -164,22 +166,17 @@ export function DevicePage() {\n           Update Device's Current Temperature\n         </h4>\n       <form onSubmit={setCurrentTempHandler}>\n-        <label> Device ID </label>\n-        <InputText\n-          value={deviceId}\n-          onChange={e => setDeviceId(e.target.value)}\n-        />\n         <label> Current Temperature </label>\n         <InputText\n-          value={temp}\n-          onChange={e => setTemperature(e.target.value)}\n+          value={inputTemp}\n+          onChange={e => setInputTemperature(e.target.value)}\n         />\n         <button name=\"submit\"> Set Temperature </button>\n       </form>\n       </section>\n       <section>\n         <h4>Set In-Use Status</h4>\n-        <InputSwitch checked={status} onChange={setInUseStatus} />\n+        <InputSwitch checked={inputStatus} onChange={setInUseStatus} />\n       </section>\n     </div>\n   );"
}
]
},
{
"commit_sha":"16528305d7f8cf2f0f4662c57f83512675caea56",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjE2NTI4MzA1ZDdmOGNmMmYwZjQ2NjJjNTdmODM1MTI2NzVjYWVhNTY=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/16528305d7f8cf2f0f4662c57f83512675caea56",
"commit_date":"2021-03-11T22:13:56Z",
"files":[
{
"sha":"ff2874611bf2d63997c308bdc019448bcda54ae0",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"modified",
"additions":72,
"deletions":2,
"changes":74,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/16528305d7f8cf2f0f4662c57f83512675caea56/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/16528305d7f8cf2f0f4662c57f83512675caea56/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=16528305d7f8cf2f0f4662c57f83512675caea56",
"patch":"@@ -61,6 +61,76 @@ export function SuperAdminPage() {\n         setControllers(contRestult);\n     };\n \n+    const assignControllerEvent = async (ev, contId, devId) => {\n+        ev.preventDefault();\n+        console.log('inside assign, contID= ' + contId + ', devId = ' + devId);\n+        setController(contId);\n+        const res1 = await axios({\n+            method: 'post',\n+            url: 'http://localhost:8000/controller/assign',\n+            data: {\n+                deviceID: devId,\n+                controllerID: contId\n+            }\n+        });\n+\n+        const res = await axios({\n+            method: 'get',\n+            url: 'http://localhost:8000/device/all'\n+        });\n+\n+        let result = [];\n+        res.data.map(record => {\n+            result.push(record.Record);\n+        });\n+        setDevices(result);\n+\n+        const resCont = await axios({\n+            method: 'get',\n+            url: 'http://localhost:8000/controller/all'\n+        });\n+        let contRestult = [];\n+        resCont.data.map(record => {\n+            contRestult.push(record.Record.controllerID);\n+        });\n+        setControllers(contRestult);\n+    }\n+\n+    const changeControllerEvent = async (ev, contId, devId) => {\n+        ev.preventDefault();\n+        console.log('inside change, contID= ' + contId + ', devId = ' + devId);\n+        setController(contId);\n+        const res1 = await axios({\n+            method: 'post',\n+            url: 'http://localhost:8000/controller/change',\n+            data: {\n+                deviceID: devId,\n+                newControllerID: contId\n+            }\n+        });\n+\n+        const res = await axios({\n+            method: 'get',\n+            url: 'http://localhost:8000/device/all'\n+        });\n+\n+        let result = [];\n+        res.data.map(record => {\n+            result.push(record.Record);\n+        });\n+        setDevices(result);\n+\n+        const resCont = await axios({\n+            method: 'get',\n+            url: 'http://localhost:8000/controller/all'\n+        });\n+        let contRestult = [];\n+        resCont.data.map(record => {\n+            contRestult.push(record.Record.controllerID);\n+        });\n+        setControllers(contRestult);\n+    }\n+\n     return (\n         <div>\n             <TabView activeIndex={activeIndex} onTabChange={(e) => setActiveIndex(e.index)}>\n@@ -118,8 +188,8 @@ export function SuperAdminPage() {\n                  <tr>\n                      <td>{rowData.deviceID}</td>\n                      <td>{rowData.controllerID ? rowData.controllerID : 'Not Assigned'}</td>\n-                     <td>{rowData.controllerID ? <button>Change</button> : controllers ? <Dropdown className=\"p-dropdown-items\" value={controllers} options={controllers} onChange={(e) => setController(e.value)} placeholder=\"Select a Controller\"/> : '' }</td>\n-                     <td>{rowData.controllerID ? controllers ? <Dropdown value={controllers} options={controllers} onChange={(e) => setController(e.value)} placeholder=\"Select a Controller\"/> : '' : <button>Assign</button>}</td>\n+                     <td>{rowData.controllerID ? <button>Change</button> : controllers ? <Dropdown value={controller} options={controllers} onChange={(e) => assignControllerEvent(e, e.value, rowData.deviceID)} placeholder=\"Select a Controller\"/> : '' }</td>\n+                     <td>{rowData.controllerID ? controllers ? <Dropdown value={controller} options={controllers} onChange={(e) => changeControllerEvent(e, e.value, rowData.deviceID)} placeholder=\"Select a Controller\"/> : '' : <button>Assign</button>}</td>\n                  </tr>\n )) : <tr><td></td></tr>}\n                         </tbody>"
}
]
},
{
"commit_sha":"34029d7dba410befb634ae876869c3727eaea1a1",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjM0MDI5ZDdkYmE0MTBiZWZiNjM0YWU4NzY4NjljMzcyN2VhZWExYTE=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/34029d7dba410befb634ae876869c3727eaea1a1",
"commit_date":"2021-03-11T22:08:07Z",
"files":[
{
"sha":"523be50d8e52c9aa3eac4ba0dfea2d25b0e98fd6",
"filename":"frontend/src/components/DevicePage.js",
"status":"modified",
"additions":13,
"deletions":16,
"changes":29,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/34029d7dba410befb634ae876869c3727eaea1a1/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/34029d7dba410befb634ae876869c3727eaea1a1/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=34029d7dba410befb634ae876869c3727eaea1a1",
"patch":"@@ -19,10 +19,13 @@ export function DevicePage() {\n   const [lat, setLat] = useState('');\n   const [lastSeen, setLastSeen] = useState('');\n   const [temp, setTemperature] = useState('');\n-  const [status, setStatus] = useState(true);\n+  const [status, setStatus] = useState('');\n   const [lastCommand, setLastCommand] = useState('');\n+  const [inputTemp, setInputTemperature] = useState('');\n+  const [inputStatus, setInputStatus] = useState(false);\n+  \n \n-  const getControllerIdHandler = async ev => {\n+  const getDeviceInformationIdHandler = async ev => {\n     ev.preventDefault();\n     // try {\n     console.log('deviceId selected ' + deviceId);\n@@ -62,15 +65,15 @@ export function DevicePage() {\n       url: 'http://localhost:8000/device/update',\n       data: {\n         deviceId: deviceId,\n-        currentTemp: temp,\n+        currentTemp: inputTemp,\n       },\n     });\n \n   }\n \n   const setInUseStatus = async (e) => {\n \n-    setStatus(e.value);\n+    setInputStatus(e.value);\n    \n     await axios({\n       method: 'post',\n@@ -86,15 +89,14 @@ export function DevicePage() {\n   return (\n     <div>\n       <section className=\"section-setting\">\n-      <form onSubmit={getControllerIdHandler}>\n+      <form onSubmit={getDeviceInformationIdHandler}>\n+        {/* <label htmlFor=\"Type in deviceID\">Get Device Details </label> */}\n+        <label> Device ID: </label>\n         <InputText\n           value={deviceId}\n           onChange={e => setDeviceId(e.target.value)}\n         />\n-        {/* <label htmlFor=\"Type in deviceID\">Get Controller </label> */}\n-        <label> Get Controller </label>\n         <button name=\"submit\"> Submit </button>\n-        <label>Controller ID: {controllerId}</label>\n       </form>\n       </section>\n \n@@ -164,22 +166,17 @@ export function DevicePage() {\n           Update Device's Current Temperature\n         </h4>\n       <form onSubmit={setCurrentTempHandler}>\n-        <label> Device ID </label>\n-        <InputText\n-          value={deviceId}\n-          onChange={e => setDeviceId(e.target.value)}\n-        />\n         <label> Current Temperature </label>\n         <InputText\n-          value={temp}\n-          onChange={e => setTemperature(e.target.value)}\n+          value={inputTemp}\n+          onChange={e => setInputTemperature(e.target.value)}\n         />\n         <button name=\"submit\"> Set Temperature </button>\n       </form>\n       </section>\n       <section>\n         <h4>Set In-Use Status</h4>\n-        <InputSwitch checked={status} onChange={setInUseStatus} />\n+        <InputSwitch checked={inputStatus} onChange={setInUseStatus} />\n       </section>\n     </div>\n   );"
}
]
},
{
"commit_sha":"ce3106d6f4d9314221676d0abe32f00efc9c49fa",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmNlMzEwNmQ2ZjRkOTMxNDIyMTY3NmQwYWJlMzJmMDBlZmM5YzQ5ZmE=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/ce3106d6f4d9314221676d0abe32f00efc9c49fa",
"commit_date":"2021-03-10T21:24:22Z",
"files":[
{
"sha":"14393ed4d6ccbb80bbc0e926bce14fdd2f941027",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"modified",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/ce3106d6f4d9314221676d0abe32f00efc9c49fa/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/ce3106d6f4d9314221676d0abe32f00efc9c49fa/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=ce3106d6f4d9314221676d0abe32f00efc9c49fa",
"patch":"@@ -3,6 +3,8 @@ import { InputText } from 'primereact/inputtext';\n import { TabView, TabPanel } from 'primereact/tabview';\n import { Dropdown } from 'primereact/dropdown';\n import axios from 'axios';\n+import 'primereact/resources/themes/saga-blue/theme.css';\n+import 'primereact/resources/primereact.css';\n \n export function SuperAdminPage() {\n "
}
]
},
{
"commit_sha":"01023b1ff1499633881259e71b0fd3be9faa9ac6",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjAxMDIzYjFmZjE0OTk2MzM4ODEyNTllNzFiMGZkM2JlOWZhYTlhYzY=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/01023b1ff1499633881259e71b0fd3be9faa9ac6",
"commit_date":"2021-03-10T03:56:58Z",
"files":[
{
"sha":"6015ff26245ced5a791c6ff483ff30fc7ba8ff39",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"modified",
"additions":94,
"deletions":13,
"changes":107,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/01023b1ff1499633881259e71b0fd3be9faa9ac6/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/01023b1ff1499633881259e71b0fd3be9faa9ac6/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=01023b1ff1499633881259e71b0fd3be9faa9ac6",
"patch":"@@ -1,5 +1,7 @@\n import React, { useState } from 'react';\n import { InputText } from 'primereact/inputtext';\n+import { TabView, TabPanel } from 'primereact/tabview';\n+import { Dropdown } from 'primereact/dropdown';\n import axios from 'axios';\n \n export function SuperAdminPage() {\n@@ -8,6 +10,10 @@ export function SuperAdminPage() {\n     const [serviceProvider, setServiceProvider] = useState('');\n     const [long, setLong] = useState('');\n     const [lat, setLat] = useState('');\n+    const [activeIndex, setActiveIndex] = useState(0);\n+    const [devices, setDevices] = useState('');\n+    const [controllers, setControllers] = useState('');\n+    const [controller, setController] = useState('');\n \n     const registerControllerHandler = async (ev) => {\n         ev.preventDefault();\n@@ -28,21 +34,96 @@ export function SuperAdminPage() {\n         });\n     };\n \n+    const getDevicesHandler = async (ev) => {\n+        console.log('inside get devices');\n+        const res = await axios({\n+            method: 'get',\n+            url: 'http://localhost:8000/device/all'\n+        });\n+\n+        let result = [];\n+        res.data.map(record => {\n+            result.push(record.Record);\n+        });\n+        setDevices(result);\n+\n+        const resCont = await axios({\n+            method: 'get',\n+            url: 'http://localhost:8000/controller/all'\n+        });\n+        let contRestult = [];\n+        resCont.data.map(record => {\n+            contRestult.push(record.Record.controllerID);\n+        });\n+        console.log('resCont = ' + JSON.stringify(contRestult));\n+        setControllers(contRestult);\n+    };\n+\n     return (\n         <div>\n-            <p>NavBar item has 2 tabs  Register Controller,\u200b Show Controller info </p>\n-            <label> Display Controller Info </label>\n-            <form onSubmit={registerControllerHandler}>\n-                <InputText value={controllerName} onChange={(e) =>\n-                    setControllerName(e.target.value)} />\n-                <InputText value={serviceProvider} onChange={(e) =>\n-                    setServiceProvider(e.target.value)} />\n-                <InputText value={long} onChange={(e) =>\n-                    setLong(e.target.value)} />\n-                <InputText value={lat} onChange={(e) =>\n-                    setLat(e.target.value)} />\n-                <button name=\"submit\"> register </button>\n-            </form>\n+            <TabView activeIndex={activeIndex} onTabChange={(e) => setActiveIndex(e.index)}>\n+                <TabPanel header=\"Register\">\n+                    <label> Display Controller Info </label>\n+                    <form onSubmit={registerControllerHandler}>\n+                        <table>\n+                            <tbody>\n+                                <tr>\n+                                    <td>\n+                                        <label>Controller Name:</label>\n+                                        <InputText value={controllerName} onChange={(e) => setControllerName(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Controller SP:</label>\n+                                        <InputText value={serviceProvider} onChange={(e) => setServiceProvider(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Longtitude:</label>\n+                                        <InputText value={long} onChange={(e) => setLong(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <label>Latitude:</label>\n+                                        <InputText value={lat} onChange={(e) => setLat(e.target.value)} />\n+                                    </td>\n+                                </tr>\n+                                <tr>\n+                                    <td>\n+                                        <button name=\"submit\">Register</button>\n+                                    </td>\n+                                </tr>\n+                            </tbody>\n+                        </table>\n+                    </form>\n+                </TabPanel>\n+                <TabPanel header=\"Display\">\n+                    <button name=\"display\" onClick={(e) => getDevicesHandler(e.target.value)}>Display</button>\n+                    <table>\n+                        <thead>\n+                        <tr>\n+                    <th>Device ID</th>\n+                     <th>Controller ID</th>\n+                     <th></th>\n+                     <th></th>\n+                </tr>\n+                        </thead>\n+                        <tbody>\n+{devices ? devices.map((rowData, index) => (\n+                 <tr>\n+                     <td>{rowData.deviceID}</td>\n+                     <td>{rowData.controllerID ? rowData.controllerID : 'Not Assigned'}</td>\n+                     <td>{rowData.controllerID ? <button>Change</button> : controllers ? <Dropdown className=\"p-dropdown-items\" value={controllers} options={controllers} onChange={(e) => setController(e.value)} placeholder=\"Select a Controller\"/> : '' }</td>\n+                     <td>{rowData.controllerID ? controllers ? <Dropdown value={controllers} options={controllers} onChange={(e) => setController(e.value)} placeholder=\"Select a Controller\"/> : '' : <button>Assign</button>}</td>\n+                 </tr>\n+)) : <tr><td></td></tr>}\n+                        </tbody>\n+                    </table>\n+                </TabPanel>\n+            </TabView>\n         </div>\n     );\n }"
}
]
},
{
"commit_sha":"3fb7cc5962a8334de485309408d87112dca45a24",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjNmYjdjYzU5NjJhODMzNGRlNDg1MzA5NDA4ZDg3MTEyZGNhNDVhMjQ=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/3fb7cc5962a8334de485309408d87112dca45a24",
"commit_date":"2021-03-09T21:31:42Z",
"files":[
{
"sha":"90f4afe630ea4927749c4d04596c66cbad7450ef",
"filename":"frontend/src/components/DevicePage.js",
"status":"modified",
"additions":58,
"deletions":3,
"changes":61,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/3fb7cc5962a8334de485309408d87112dca45a24/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/3fb7cc5962a8334de485309408d87112dca45a24/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=3fb7cc5962a8334de485309408d87112dca45a24",
"patch":"@@ -1,13 +1,13 @@\n import React, { useState } from 'react';\n import { InputText } from 'primereact/inputtext';\n+import {InputSwitch} from 'primereact/inputswitch';\n import Table from 'react-bootstrap/Table';\n import Moment from 'react-moment';\n \n import axios from 'axios';\n \n-//class DevicePage extends React.Component {\n export function DevicePage() {\n-  const defaultURL = 'http://localhost:8000/device/';\n+  //const defaultURL = 'http://localhost:8000/device/';\n \n   const [deviceId, setDeviceId] = useState('');\n   const [controllerId, setControllerId] = useState('');\n@@ -19,7 +19,7 @@ export function DevicePage() {\n   const [lat, setLat] = useState('');\n   const [lastSeen, setLastSeen] = useState('');\n   const [temp, setTemperature] = useState('');\n-  const [status, setStatus] = useState('');\n+  const [status, setStatus] = useState(true);\n   const [lastCommand, setLastCommand] = useState('');\n \n   const getControllerIdHandler = async ev => {\n@@ -53,8 +53,39 @@ export function DevicePage() {\n     // }\n   };\n \n+  const setCurrentTempHandler = async (ev) => {\n+    ev.preventDefault();\n+\n+    await axios({\n+      method: 'post',\n+      \n+      url: 'http://localhost:8000/device/update',\n+      data: {\n+        deviceId: deviceId,\n+        currentTemp: temp,\n+      },\n+    });\n+\n+  }\n+\n+  const setInUseStatus = async (e) => {\n+\n+    setStatus(e.value);\n+   \n+    await axios({\n+      method: 'post',\n+      \n+      url: 'http://localhost:8000/device/updateStatus',\n+      data: {\n+        deviceId: deviceId,\n+      },\n+    });\n+\n+  }\n+\n   return (\n     <div>\n+      <section className=\"section-setting\">\n       <form onSubmit={getControllerIdHandler}>\n         <InputText\n           value={deviceId}\n@@ -65,6 +96,7 @@ export function DevicePage() {\n         <button name=\"submit\"> Submit </button>\n         <label>Controller ID: {controllerId}</label>\n       </form>\n+      </section>\n \n       <section className=\"section-setting\">\n         <Table striped bordered hover size=\"sm\">\n@@ -126,6 +158,29 @@ export function DevicePage() {\n         </Table>\n       </section>\n       {/* <label> Current Device </label> */}\n+\n+      <section>\n+        <h4>\n+          Update Device's Current Temperature\n+        </h4>\n+      <form onSubmit={setCurrentTempHandler}>\n+        <label> Device ID </label>\n+        <InputText\n+          value={deviceId}\n+          onChange={e => setDeviceId(e.target.value)}\n+        />\n+        <label> Current Temperature </label>\n+        <InputText\n+          value={temp}\n+          onChange={e => setTemperature(e.target.value)}\n+        />\n+        <button name=\"submit\"> Set Temperature </button>\n+      </form>\n+      </section>\n+      <section>\n+        <h4>Set In-Use Status</h4>\n+        <InputSwitch checked={status} onChange={setInUseStatus} />\n+      </section>\n     </div>\n   );\n }"
},
{
"sha":"f58af16a851eb251a67389247ee2646b9f83483a",
"filename":"frontend/yarn.lock",
"status":"modified",
"additions":11,
"deletions":12,
"changes":23,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/3fb7cc5962a8334de485309408d87112dca45a24/frontend/yarn.lock",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/3fb7cc5962a8334de485309408d87112dca45a24/frontend/yarn.lock",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/yarn.lock?ref=3fb7cc5962a8334de485309408d87112dca45a24",
"patch":"@@ -1298,7 +1298,6 @@\n     \"jest-resolve\" \"^26.6.2\"\n     \"jest-util\" \"^26.6.2\"\n     \"jest-worker\" \"^26.6.2\"\n-    \"node-notifier\" \"^8.0.0\"\n     \"slash\" \"^3.0.0\"\n     \"source-map\" \"^0.6.0\"\n     \"string-length\" \"^4.0.1\"\n@@ -3227,7 +3226,6 @@\n     \"anymatch\" \"^2.0.0\"\n     \"async-each\" \"^1.0.1\"\n     \"braces\" \"^2.3.2\"\n-    \"fsevents\" \"^1.2.7\"\n     \"glob-parent\" \"^3.1.0\"\n     \"inherits\" \"^2.0.3\"\n     \"is-binary-path\" \"^1.0.0\"\n@@ -3246,7 +3244,6 @@\n   dependencies:\n     \"anymatch\" \"~3.1.1\"\n     \"braces\" \"~3.0.2\"\n-    \"fsevents\" \"~2.3.1\"\n     \"glob-parent\" \"~5.1.0\"\n     \"is-binary-path\" \"~2.1.0\"\n     \"is-glob\" \"~4.0.1\"\n@@ -4522,7 +4519,6 @@\n     \"estraverse\" \"^4.2.0\"\n     \"esutils\" \"^2.0.2\"\n     \"optionator\" \"^0.8.1\"\n-    \"source-map\" \"~0.6.1\"\n   optionalDependencies:\n     \"source-map\" \"~0.6.1\"\n \n@@ -6240,7 +6236,12 @@\n   dependencies:\n     \"is-docker\" \"^2.0.0\"\n \n-\"isarray@^1.0.0\", \"isarray@~1.0.0\", \"isarray@1.0.0\":\n+\"isarray@^1.0.0\":\n+  \"integrity\" \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\n+  \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\"\n+  \"version\" \"1.0.0\"\n+\n+\"isarray@~1.0.0\":\n   \"integrity\" \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\n   \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\"\n   \"version\" \"1.0.0\"\n@@ -6250,6 +6251,11 @@\n   \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\"\n   \"version\" \"0.0.1\"\n \n+\"isarray@1.0.0\":\n+  \"integrity\" \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\n+  \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\"\n+  \"version\" \"1.0.0\"\n+\n \"isexe@^2.0.0\":\n   \"integrity\" \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\"\n   \"resolved\" \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\"\n@@ -6460,7 +6466,6 @@\n     \"@types/node\" \"*\"\n     \"anymatch\" \"^3.0.3\"\n     \"fb-watchman\" \"^2.0.0\"\n-    \"fsevents\" \"^2.1.2\"\n     \"graceful-fs\" \"^4.2.4\"\n     \"jest-regex-util\" \"^26.0.0\"\n     \"jest-serializer\" \"^26.6.2\"\n@@ -6872,8 +6877,6 @@\n   \"integrity\" \"sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=\"\n   \"resolved\" \"https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz\"\n   \"version\" \"4.0.0\"\n-  dependencies:\n-    \"graceful-fs\" \"^4.1.6\"\n   optionalDependencies:\n     \"graceful-fs\" \"^4.1.6\"\n \n@@ -6882,7 +6885,6 @@\n   \"resolved\" \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\"\n   \"version\" \"6.1.0\"\n   dependencies:\n-    \"graceful-fs\" \"^4.1.6\"\n     \"universalify\" \"^2.0.0\"\n   optionalDependencies:\n     \"graceful-fs\" \"^4.1.6\"\n@@ -9378,7 +9380,6 @@\n     \"eslint-webpack-plugin\" \"^2.5.2\"\n     \"file-loader\" \"6.1.1\"\n     \"fs-extra\" \"^9.0.1\"\n-    \"fsevents\" \"^2.1.3\"\n     \"html-webpack-plugin\" \"4.5.0\"\n     \"identity-obj-proxy\" \"3.0.0\"\n     \"jest\" \"26.6.0\"\n@@ -11507,10 +11508,8 @@\n   \"resolved\" \"https://registry.npmjs.org/watchpack/-/watchpack-1.7.5.tgz\"\n   \"version\" \"1.7.5\"\n   dependencies:\n-    \"chokidar\" \"^3.4.1\"\n     \"graceful-fs\" \"^4.1.2\"\n     \"neo-async\" \"^2.5.0\"\n-    \"watchpack-chokidar2\" \"^2.0.1\"\n   optionalDependencies:\n     \"chokidar\" \"^3.4.1\"\n     \"watchpack-chokidar2\" \"^2.0.1\""
}
]
},
{
"commit_sha":"29f2393d38c0283677513d49611e0fc967dee7ad",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjI5ZjIzOTNkMzhjMDI4MzY3NzUxM2Q0OTYxMWUwZmM5NjdkZWU3YWQ=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/29f2393d38c0283677513d49611e0fc967dee7ad",
"commit_date":"2021-03-08T02:01:42Z",
"files":[
{
"sha":"b8f950643ca4ac5c0081cd4b2cbe17d85c3fb508",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":36,
"deletions":16,
"changes":52,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/29f2393d38c0283677513d49611e0fc967dee7ad/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/29f2393d38c0283677513d49611e0fc967dee7ad/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=29f2393d38c0283677513d49611e0fc967dee7ad",
"patch":"@@ -37,9 +37,11 @@ async function getAllControllers() {\n     let result;\n     try {\n         result = await contract.submitTransaction('getAllControllers');\n-        await disconnectGateway();    \n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n     }\n     console.log('result from chaincode = ' + result.toString());\n     return JSON.parse(result.toString());\n@@ -51,8 +53,10 @@ async function registerController(controllerName, serProvider, long, lat) {\n         await contract.submitTransaction('registerController', controllerName, serProvider, long, lat);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway(); \n     }\n-    await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n }\n \n@@ -62,8 +66,10 @@ async function updateController(controllerID, serProvider, long, lat) {\n         await contract.submitTransaction('updateController', controllerID, serProvider, long, lat);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n     }\n-    await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n }\n \n@@ -73,8 +79,10 @@ async function changeController(deviceID, newControllerID) {\n         await contract.submitTransaction('changeController', deviceID, newControllerID);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n     }\n-    await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n }\n \n@@ -84,24 +92,27 @@ async function assignController(deviceID, controllerID) {\n         await contract.submitTransaction('assignController', deviceID, controllerID);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n     }\n-    await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n }\n \n async function disconnectGateway() {\n     gateway.disconnect();\n }\n \n-\n async function getAllDevices() {\n     const contract = await init();\n     let result;\n     try {\n         result = await contract.submitTransaction('getAllDevices');\n-        await disconnectGateway();    \n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n     }\n     console.log('result from chaincode = ' + result.toString());\n     return JSON.parse(result.toString());\n@@ -112,23 +123,25 @@ async function getDevice(id) {\n     let result;\n     try {\n         result = await contract.submitTransaction('getDevice', id);\n-        await disconnectGateway();    \n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n     }\n-    console.log('result from chaincode = ' + result.toString());\n     return JSON.parse(result.toString());\n }\n \n-\n async function getControllerDevices(id) {\n     const contract = await init();\n     let result;\n     try {\n         result = await contract.submitTransaction('getControllerDevices', id);\n-        await disconnectGateway();    \n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n     }\n     console.log('result from chaincode = ' + result.toString());\n     return JSON.parse(result.toString());\n@@ -140,8 +153,10 @@ async function updateDevice(deviceId, currentTemp) {\n         await contract.submitTransaction('updateDevice', deviceId, currentTemp);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();  \n     }\n-    await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n }\n \n@@ -151,8 +166,10 @@ async function updateDeviceStatus(deviceId) {\n         await contract.submitTransaction('updateDeviceStatus', deviceId);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n     }\n-    await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n }\n \n@@ -162,8 +179,10 @@ async function registerDevice(brand, model, mac, powerType, long, lat) {\n         await contract.submitTransaction('registerDevice', brand, model, mac, powerType, long, lat);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();\n     }\n-    await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n }\n \n@@ -188,12 +207,13 @@ async function executeDeviceCommand(devID, command) {\n         await contract.submitTransaction('executeDeviceCommand', devID, command);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway();    \n     }\n-    await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n }\n \n-\n module.exports = {\n     /* controller */\n     getAllControllers: getAllControllers,"
},
{
"sha":"64495023e75f71756b8092df701902958dbf88fb",
"filename":"backend/routes/controller.js",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/29f2393d38c0283677513d49611e0fc967dee7ad/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/29f2393d38c0283677513d49611e0fc967dee7ad/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=29f2393d38c0283677513d49611e0fc967dee7ad",
"patch":"@@ -31,7 +31,7 @@ router.post('/assign', async (req, res, next) => {\n });\n \n router.get('/devices', async (req, res, next) => {\n-    const result = await connector.getControllerDevices(req.body.id);\n+    const result = await connector.getControllerDevices(req.query.id);\n     res.json(result); \n });\n "
},
{
"sha":"670d3db83f0c5826e7e4ac431897d338ca0fd245",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":2,
"deletions":1,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/29f2393d38c0283677513d49611e0fc967dee7ad/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/29f2393d38c0283677513d49611e0fc967dee7ad/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=29f2393d38c0283677513d49611e0fc967dee7ad",
"patch":"@@ -12,7 +12,8 @@ router.get('/all', async function(req, res, next) {\n \n router.get('/id', async function(req, res, next) {\n     //let queryObj = req.query;\n-    const result = await connector.getDevice(req.body.deviceId);\n+    console.log('query param deviceId = ' + req.query.deviceId);\n+    const result = await connector.getDevice(req.query.deviceId);\n     res.json(result); \n });\n "
},
{
"sha":"45d8caaf197263b13bd569459c04bf59a32c2b88",
"filename":"frontend/package.json",
"status":"modified",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/package.json?ref=29f2393d38c0283677513d49611e0fc967dee7ad",
"patch":"@@ -8,10 +8,12 @@\n     \"@testing-library/user-event\": \"^12.1.10\",\n     \"axios\": \"^0.21.1\",\n     \"bootstrap\": \"^4.6.0\",\n+    \"moment\": \"^2.29.1\",\n     \"primereact\": \"^6.0.2\",\n     \"react\": \"^17.0.1\",\n     \"react-bootstrap\": \"^1.5.1\",\n     \"react-dom\": \"^17.0.1\",\n+    \"react-moment\": \"^1.1.1\",\n     \"react-router-bootstrap\": \"^0.25.0\",\n     \"react-router-dom\": \"^5.2.0\",\n     \"react-scripts\": \"4.0.3\","
},
{
"sha":"e01c37dd695cf9ec442e26069bf8fa0b40180362",
"filename":"frontend/src/App.js",
"status":"modified",
"additions":2,
"deletions":2,
"changes":4,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/src/App.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/src/App.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.js?ref=29f2393d38c0283677513d49611e0fc967dee7ad",
"patch":"@@ -11,8 +11,8 @@ import {LinkContainer} from 'react-router-bootstrap';\n \n import HomePage from './components/HomePage';\n import {DevicePage} from './components/DevicePage';\n-import ControllerPage from './components/ControllerPage';\n-import SuperAdminPage from './components/SuperAdminPage';\n+import {ControllerPage} from './components/ControllerPage';\n+import {SuperAdminPage} from './components/SuperAdminPage';\n \n \n function App() {"
},
{
"sha":"70ca7dd4f8402b8d9f4f47d01b38d08a18dfc145",
"filename":"frontend/src/components/ControllerPage.js",
"status":"modified",
"additions":9,
"deletions":15,
"changes":24,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/src/components/ControllerPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/src/components/ControllerPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/ControllerPage.js?ref=29f2393d38c0283677513d49611e0fc967dee7ad",
"patch":"@@ -1,17 +1,11 @@\n-import React from \"react\";\n+import React, { useState } from 'react';\n \n \n-class ControllerPage extends React.Component {\n-\n-\n-    render() {\n-        return (\n-            <div>\n-                <p>NavBar item has 2 tabs  Register Controller,\u200b Show Controller info </p>\n-                <label> Display Controller Info </label>\n-            </div>\n-        );\n-    }\n-}\n-\n-export default ControllerPage;\n+export function ControllerPage() {\n+    return (\n+        <div>\n+            <p>NavBar item has 2 tabs  Register Controller,\u200b Show Controller info </p>\n+            <label> Display Controller Info </label>\n+        </div>\n+    );\n+}\n\\ No newline at end of file"
},
{
"sha":"d5f42325868f98daed7aba3930b31c4ab77a090d",
"filename":"frontend/src/components/DevicePage.js",
"status":"modified",
"additions":26,
"deletions":15,
"changes":41,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=29f2393d38c0283677513d49611e0fc967dee7ad",
"patch":"@@ -1,6 +1,7 @@\n import React, { useState } from 'react';\n import { InputText } from 'primereact/inputtext';\n import Table from 'react-bootstrap/Table';\n+import Moment from 'react-moment';\n \n import axios from 'axios';\n \n@@ -29,13 +30,23 @@ export function DevicePage() {\n     const res = await axios({\n       method: 'get',\n       //url: defaultURL + 'controller',\n-      url: 'http://localhost:8000/device/controller',\n+      url: 'http://localhost:8000/device/id',\n       params: {\n-        deviceID: deviceId,\n+        deviceId: deviceId,\n       },\n     });\n     console.log('json ' + res.data);\n-    setControllerId(res.data.ControllerID);\n+    setControllerId(res.data.controllerID);\n+    setMac(res.data.macAddress);\n+    setBrand(res.data.brand);\n+    setModel(res.data.model);\n+    setPowerType(res.data.powerType);\n+    res.data.location ? setLong(res.data.location.long) : setLong('');\n+    res.data.location ? setLat(res.data.location.lat) : setLat('');\n+    setLastSeen(res.data.lastSeen);\n+    setLastCommand(res.data.lastExecCommand);\n+    res.data.inUse ? setStatus(res.data.inUse + \"\") : setStatus('');\n+    setTemperature(res.data.currentTemp);\n \n     // } catch (e) {\n     //     console.error(e)\n@@ -44,6 +55,17 @@ export function DevicePage() {\n \n   return (\n     <div>\n+      <form onSubmit={getControllerIdHandler}>\n+        <InputText\n+          value={deviceId}\n+          onChange={e => setDeviceId(e.target.value)}\n+        />\n+        {/* <label htmlFor=\"Type in deviceID\">Get Controller </label> */}\n+        <label> Get Controller </label>\n+        <button name=\"submit\"> Submit </button>\n+        <label>Controller ID: {controllerId}</label>\n+      </form>\n+\n       <section className=\"section-setting\">\n         <Table striped bordered hover size=\"sm\">\n           <thead >\n@@ -86,7 +108,7 @@ export function DevicePage() {\n             </tr>\n             <tr>\n                 <th>Date Last Seen</th>\n-                <td> {lastSeen}</td>\n+                <td> { lastSeen ? <Moment>{lastSeen}</Moment> : '' } </td>\n             </tr>\n             <tr>\n                 <th>Temperature</th>\n@@ -104,17 +126,6 @@ export function DevicePage() {\n         </Table>\n       </section>\n       {/* <label> Current Device </label> */}\n-      <form onSubmit={getControllerIdHandler}>\n-        <InputText\n-          value={deviceId}\n-          onChange={e => setDeviceId(e.target.value)}\n-        />\n-\n-        {/* <label htmlFor=\"Type in deviceID\">Get Controller </label> */}\n-        <label> Get Controller </label>\n-        <button name=\"submit\"> Submit </button>\n-        <label>Controller ID: {controllerId}</label>\n-      </form>\n     </div>\n   );\n }"
},
{
"sha":"afb0621af47ec80f0c8a04462cfed4415af4a240",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"modified",
"additions":43,
"deletions":11,
"changes":54,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=29f2393d38c0283677513d49611e0fc967dee7ad",
"patch":"@@ -1,17 +1,49 @@\n-import React from \"react\";\n+import React, { useState } from 'react';\n+import { InputText } from 'primereact/inputtext';\n+import axios from 'axios';\n \n+export function SuperAdminPage() {\n \n-class SuperAdminPage extends React.Component {\n+    const [controllerName, setControllerName] = useState('');\n+    const [serviceProvider, setServiceProvider] = useState('');\n+    const [long, setLong] = useState('');\n+    const [lat, setLat] = useState('');\n \n+    const registerControllerHandler = async (ev) => {\n+        ev.preventDefault();\n+        // try {\n \n-    render() {\n-        return (\n-            <div>\n-                <p> NavBar item has 2 tabs  Show Device info\u200b\u200b, Register Controller\u200b </p>\n-                <label> List of Devices with Assign n Change buttons </label>\n-            </div>\n-        );\n-    }\n+        const res = await axios({\n+            method: 'post',\n+            //url: defaultURL + 'controller',\n+            url: 'http://localhost:8000/controller/register',\n+            data: {\n+                controllerName: controllerName,\n+                serviceProvider: serviceProvider,\n+                location: {\n+                    long: long,\n+                    lat: lat\n+                }\n+            }\n+        });\n+    };\n+\n+    return (\n+        <div>\n+            <p>NavBar item has 2 tabs  Register Controller,\u200b Show Controller info </p>\n+            <label> Display Controller Info </label>\n+            <form onSubmit={registerControllerHandler}>\n+                <InputText value={controllerName} onChange={(e) =>\n+                    setControllerName(e.target.value)} />\n+                <InputText value={serviceProvider} onChange={(e) =>\n+                    setServiceProvider(e.target.value)} />\n+                <InputText value={long} onChange={(e) =>\n+                    setLong(e.target.value)} />\n+                <InputText value={lat} onChange={(e) =>\n+                    setLat(e.target.value)} />\n+                <button name=\"submit\"> register </button>\n+            </form>\n+        </div>\n+    );\n }\n \n-export default SuperAdminPage;"
},
{
"sha":"efed54b962e188949be944e9d0bc4407fbcb4d39",
"filename":"frontend/yarn.lock",
"status":"modified",
"additions":24,
"deletions":13,
"changes":37,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/yarn.lock",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/29f2393d38c0283677513d49611e0fc967dee7ad/frontend/yarn.lock",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/yarn.lock?ref=29f2393d38c0283677513d49611e0fc967dee7ad",
"patch":"@@ -1298,6 +1298,7 @@\n     \"jest-resolve\" \"^26.6.2\"\n     \"jest-util\" \"^26.6.2\"\n     \"jest-worker\" \"^26.6.2\"\n+    \"node-notifier\" \"^8.0.0\"\n     \"slash\" \"^3.0.0\"\n     \"source-map\" \"^0.6.0\"\n     \"string-length\" \"^4.0.1\"\n@@ -3226,6 +3227,7 @@\n     \"anymatch\" \"^2.0.0\"\n     \"async-each\" \"^1.0.1\"\n     \"braces\" \"^2.3.2\"\n+    \"fsevents\" \"^1.2.7\"\n     \"glob-parent\" \"^3.1.0\"\n     \"inherits\" \"^2.0.3\"\n     \"is-binary-path\" \"^1.0.0\"\n@@ -3244,6 +3246,7 @@\n   dependencies:\n     \"anymatch\" \"~3.1.1\"\n     \"braces\" \"~3.0.2\"\n+    \"fsevents\" \"~2.3.1\"\n     \"glob-parent\" \"~5.1.0\"\n     \"is-binary-path\" \"~2.1.0\"\n     \"is-glob\" \"~4.0.1\"\n@@ -4519,6 +4522,7 @@\n     \"estraverse\" \"^4.2.0\"\n     \"esutils\" \"^2.0.2\"\n     \"optionator\" \"^0.8.1\"\n+    \"source-map\" \"~0.6.1\"\n   optionalDependencies:\n     \"source-map\" \"~0.6.1\"\n \n@@ -6236,12 +6240,7 @@\n   dependencies:\n     \"is-docker\" \"^2.0.0\"\n \n-\"isarray@^1.0.0\":\n-  \"integrity\" \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\n-  \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\"\n-  \"version\" \"1.0.0\"\n-\n-\"isarray@~1.0.0\":\n+\"isarray@^1.0.0\", \"isarray@~1.0.0\", \"isarray@1.0.0\":\n   \"integrity\" \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\n   \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\"\n   \"version\" \"1.0.0\"\n@@ -6251,11 +6250,6 @@\n   \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\"\n   \"version\" \"0.0.1\"\n \n-\"isarray@1.0.0\":\n-  \"integrity\" \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\n-  \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\"\n-  \"version\" \"1.0.0\"\n-\n \"isexe@^2.0.0\":\n   \"integrity\" \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\"\n   \"resolved\" \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\"\n@@ -6466,6 +6460,7 @@\n     \"@types/node\" \"*\"\n     \"anymatch\" \"^3.0.3\"\n     \"fb-watchman\" \"^2.0.0\"\n+    \"fsevents\" \"^2.1.2\"\n     \"graceful-fs\" \"^4.2.4\"\n     \"jest-regex-util\" \"^26.0.0\"\n     \"jest-serializer\" \"^26.6.2\"\n@@ -6877,6 +6872,8 @@\n   \"integrity\" \"sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=\"\n   \"resolved\" \"https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz\"\n   \"version\" \"4.0.0\"\n+  dependencies:\n+    \"graceful-fs\" \"^4.1.6\"\n   optionalDependencies:\n     \"graceful-fs\" \"^4.1.6\"\n \n@@ -6885,6 +6882,7 @@\n   \"resolved\" \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\"\n   \"version\" \"6.1.0\"\n   dependencies:\n+    \"graceful-fs\" \"^4.1.6\"\n     \"universalify\" \"^2.0.0\"\n   optionalDependencies:\n     \"graceful-fs\" \"^4.1.6\"\n@@ -7462,6 +7460,11 @@\n   \"resolved\" \"https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz\"\n   \"version\" \"1.0.4\"\n \n+\"moment@^2.29.0\", \"moment@^2.29.1\":\n+  \"integrity\" \"sha512-kHmoybcPV8Sqy59DwNDY3Jefr64lK/by/da0ViFcuA4DH0vQg5Q6Ze5VimxkfQNSC+Mls/Kx53s7TjP1RhFEDQ==\"\n+  \"resolved\" \"https://registry.npmjs.org/moment/-/moment-2.29.1.tgz\"\n+  \"version\" \"2.29.1\"\n+\n \"move-concurrently@^1.0.1\":\n   \"integrity\" \"sha1-viwAX9oy4LKa8fBdfEszIUxwH5I=\"\n   \"resolved\" \"https://registry.npmjs.org/move-concurrently/-/move-concurrently-1.0.1.tgz\"\n@@ -9008,7 +9011,7 @@\n     \"react-is\" \"^16.3.2\"\n     \"warning\" \"^4.0.0\"\n \n-\"prop-types@^15.0.0\", \"prop-types@^15.5.10\", \"prop-types@^15.6.2\", \"prop-types@^15.7.2\":\n+\"prop-types@^15.0.0\", \"prop-types@^15.5.10\", \"prop-types@^15.6.2\", \"prop-types@^15.7.0\", \"prop-types@^15.7.2\":\n   \"integrity\" \"sha512-8QQikdH7//R2vurIJSutZ1smHYTcLpRWEOlHnzcWHmBYrOGUysKwSsrC89BCiFj3CbrfJ/nXFdJepOVrY1GCHQ==\"\n   \"resolved\" \"https://registry.npmjs.org/prop-types/-/prop-types-15.7.2.tgz\"\n   \"version\" \"15.7.2\"\n@@ -9282,6 +9285,11 @@\n   \"resolved\" \"https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-3.0.4.tgz\"\n   \"version\" \"3.0.4\"\n \n+\"react-moment@^1.1.1\":\n+  \"integrity\" \"sha512-WjwvxBSnmLMRcU33do0KixDB+9vP3e84eCse+rd+HNklAMNWyRgZTDEQlay/qK6lcXFPRuEIASJTpEt6pyK7Ww==\"\n+  \"resolved\" \"https://registry.npmjs.org/react-moment/-/react-moment-1.1.1.tgz\"\n+  \"version\" \"1.1.1\"\n+\n \"react-overlays@^5.0.0\":\n   \"integrity\" \"sha512-TKbqfAv23TFtCJ2lzISdx76p97G/DP8Rp4TOFdqM9n8GTruVYgE3jX7Zgb8+w7YJ18slTVcDTQ1/tFzdCqjVhA==\"\n   \"resolved\" \"https://registry.npmjs.org/react-overlays/-/react-overlays-5.0.0.tgz\"\n@@ -9370,6 +9378,7 @@\n     \"eslint-webpack-plugin\" \"^2.5.2\"\n     \"file-loader\" \"6.1.1\"\n     \"fs-extra\" \"^9.0.1\"\n+    \"fsevents\" \"^2.1.3\"\n     \"html-webpack-plugin\" \"4.5.0\"\n     \"identity-obj-proxy\" \"3.0.0\"\n     \"jest\" \"26.6.0\"\n@@ -9413,7 +9422,7 @@\n     \"loose-envify\" \"^1.4.0\"\n     \"prop-types\" \"^15.6.2\"\n \n-\"react@*\", \"react@^0.14.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\", \"react@^17.0.1\", \"react@>= 16\", \"react@>=0.14.0\", \"react@>=15\", \"react@>=15.0.0\", \"react@>=16.3.0\", \"react@>=16.3.2\", \"react@>=16.6.0\", \"react@>=16.8.0\", \"react@17.0.1\":\n+\"react@*\", \"react@^0.14.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\", \"react@^16.0 || ^17.0.0\", \"react@^17.0.1\", \"react@>= 16\", \"react@>=0.14.0\", \"react@>=15\", \"react@>=15.0.0\", \"react@>=16.3.0\", \"react@>=16.3.2\", \"react@>=16.6.0\", \"react@>=16.8.0\", \"react@17.0.1\":\n   \"integrity\" \"sha512-lG9c9UuMHdcAexXtigOZLX8exLWkW0Ku29qPRU8uhF2R9BN96dLCt0psvzPLlHc5OWkgymP3qwTRgbnw5BKx3w==\"\n   \"resolved\" \"https://registry.npmjs.org/react/-/react-17.0.1.tgz\"\n   \"version\" \"17.0.1\"\n@@ -11498,8 +11507,10 @@\n   \"resolved\" \"https://registry.npmjs.org/watchpack/-/watchpack-1.7.5.tgz\"\n   \"version\" \"1.7.5\"\n   dependencies:\n+    \"chokidar\" \"^3.4.1\"\n     \"graceful-fs\" \"^4.1.2\"\n     \"neo-async\" \"^2.5.0\"\n+    \"watchpack-chokidar2\" \"^2.0.1\"\n   optionalDependencies:\n     \"chokidar\" \"^3.4.1\"\n     \"watchpack-chokidar2\" \"^2.0.1\""
}
]
},
{
"commit_sha":"fba0f50315504ef4dde6e0f8adfad5bd704f64bf",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmZiYTBmNTAzMTU1MDRlZjRkZGU2ZTBmOGFkZmFkNWJkNzA0ZjY0YmY=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/fba0f50315504ef4dde6e0f8adfad5bd704f64bf",
"commit_date":"2021-03-07T23:50:43Z",
"files":[
{
"sha":"19d2d08b45070e5a15bd8045597801bf0b07905e",
"filename":"frontend/src/App.css",
"status":"modified",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fba0f50315504ef4dde6e0f8adfad5bd704f64bf/frontend/src/App.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fba0f50315504ef4dde6e0f8adfad5bd704f64bf/frontend/src/App.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.css?ref=fba0f50315504ef4dde6e0f8adfad5bd704f64bf",
"patch":"@@ -13,3 +13,12 @@\n .custom-btn-toolbar > .btn {\n   margin-right: 1rem;\n }\n+\n+.section-setting {\n+  margin: 2rem;\n+\n+}\n+\n+.tr-heading{\n+  text-align: center;\n+}"
},
{
"sha":"9a0836d2ac53c38d33fb60e4e84c236a3591109d",
"filename":"frontend/src/components/DevicePage.js",
"status":"modified",
"additions":114,
"deletions":44,
"changes":158,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fba0f50315504ef4dde6e0f8adfad5bd704f64bf/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fba0f50315504ef4dde6e0f8adfad5bd704f64bf/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=fba0f50315504ef4dde6e0f8adfad5bd704f64bf",
"patch":"@@ -1,50 +1,120 @@\n import React, { useState } from 'react';\n import { InputText } from 'primereact/inputtext';\n+import Table from 'react-bootstrap/Table';\n \n-import axios from \"axios\";\n-\n+import axios from 'axios';\n \n //class DevicePage extends React.Component {\n export function DevicePage() {\n-    const defaultURL = 'http://localhost:8000/device/';\n-\n-    const [deviceId, setDeviceId] = useState('');\n-    const [controllerId, setControllerId] = useState('');\n-\n-    const getControllerIdHandler = async (ev) => {\n-        ev.preventDefault();\n-        // try {\n-            console.log('deviceId selected ' + deviceId);\n-\n-            const res = await axios({\n-                method: 'get',\n-                //url: defaultURL + 'controller',\n-                url: 'http://localhost:8000/device/controller',\n-                params: {\n-                    deviceID: deviceId\n-                }\n-            });\n-            console.log('json ' + res.data);\n-            setControllerId(res.data.ControllerID);\n-\n-        // } catch (e) {\n-        //     console.error(e)\n-        // }\n-    }\n-\n-\n-    return (\n-        <div>\n-            {/* <label> Current Device </label> */}\n-            <form onSubmit={getControllerIdHandler}>\n-                <InputText value={deviceId} onChange={(e) =>\n-                    setDeviceId(e.target.value)} />\n-\n-                {/* <label htmlFor=\"Type in deviceID\">Get Controller </label> */}\n-                <label> Get Controller </label>\n-                <button name=\"submit\"> Submit </button>\n-                <label>Controller ID: {controllerId}</label>\n-            </form>\n-        </div>\n-    );\n-}\n\\ No newline at end of file\n+  const defaultURL = 'http://localhost:8000/device/';\n+\n+  const [deviceId, setDeviceId] = useState('');\n+  const [controllerId, setControllerId] = useState('');\n+  const [brand, setBrand] = useState('');\n+  const [model, setModel] = useState('');\n+  const [mac, setMac] = useState('');\n+  const [powerType, setPowerType] = useState('');\n+  const [long, setLong] = useState('');\n+  const [lat, setLat] = useState('');\n+  const [lastSeen, setLastSeen] = useState('');\n+  const [temp, setTemperature] = useState('');\n+  const [status, setStatus] = useState('');\n+  const [lastCommand, setLastCommand] = useState('');\n+\n+  const getControllerIdHandler = async ev => {\n+    ev.preventDefault();\n+    // try {\n+    console.log('deviceId selected ' + deviceId);\n+\n+    const res = await axios({\n+      method: 'get',\n+      //url: defaultURL + 'controller',\n+      url: 'http://localhost:8000/device/controller',\n+      params: {\n+        deviceID: deviceId,\n+      },\n+    });\n+    console.log('json ' + res.data);\n+    setControllerId(res.data.ControllerID);\n+\n+    // } catch (e) {\n+    //     console.error(e)\n+    // }\n+  };\n+\n+  return (\n+    <div>\n+      <section className=\"section-setting\">\n+        <Table striped bordered hover size=\"sm\">\n+          <thead >\n+            <tr className =\"tr-heading\">\n+              <th colSpan=\"2\">Device Information </th>\n+            </tr>\n+          </thead>\n+          <tbody>\n+            <tr>\n+                <th>Device ID</th>\n+                <td> {deviceId}</td>\n+            </tr>\n+            <tr>\n+                <th>Brand</th>\n+                <td> {brand} </td>\n+            </tr>\n+            <tr>\n+                <th>Model</th>\n+                <td> {model} </td>\n+            </tr>\n+            <tr>\n+                <th>MAC Address</th>\n+                <td> {mac} </td>\n+            </tr>\n+            <tr>\n+                <th>Power Type</th>\n+                <td> {powerType} </td>\n+            </tr>\n+            <tr>\n+                <th>Controller ID</th>\n+                <td> {controllerId} </td>\n+            </tr>\n+            <tr>\n+                <th>Location - Longitude</th>\n+                <td>{long} </td>\n+            </tr>\n+            <tr>\n+                <th>Location - Latitude </th>\n+                <td> {lat}</td>\n+            </tr>\n+            <tr>\n+                <th>Date Last Seen</th>\n+                <td> {lastSeen}</td>\n+            </tr>\n+            <tr>\n+                <th>Temperature</th>\n+                <td> {temp}</td>\n+            </tr>\n+            <tr>\n+                <th>In-Use Status</th>\n+                <td> {status}</td>\n+            </tr>\n+            <tr>\n+                <th>Last Executed Command</th>\n+                <td> {lastCommand}</td>\n+            </tr>\n+          </tbody>\n+        </Table>\n+      </section>\n+      {/* <label> Current Device </label> */}\n+      <form onSubmit={getControllerIdHandler}>\n+        <InputText\n+          value={deviceId}\n+          onChange={e => setDeviceId(e.target.value)}\n+        />\n+\n+        {/* <label htmlFor=\"Type in deviceID\">Get Controller </label> */}\n+        <label> Get Controller </label>\n+        <button name=\"submit\"> Submit </button>\n+        <label>Controller ID: {controllerId}</label>\n+      </form>\n+    </div>\n+  );\n+}"
}
]
},
{
"commit_sha":"4873c8556451a5835870731d3f44af961670b19d",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjQ4NzNjODU1NjQ1MWE1ODM1ODcwNzMxZDNmNDRhZjk2MTY3MGIxOWQ=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/4873c8556451a5835870731d3f44af961670b19d",
"commit_date":"2021-03-07T22:09:57Z",
"files":[
{
"sha":"ac360560f6222e04e445a39053569dc4cf35c873",
"filename":"frontend/package.json",
"status":"modified",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4873c8556451a5835870731d3f44af961670b19d/frontend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4873c8556451a5835870731d3f44af961670b19d/frontend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/package.json?ref=4873c8556451a5835870731d3f44af961670b19d",
"patch":"@@ -12,6 +12,7 @@\n     \"react\": \"^17.0.1\",\n     \"react-bootstrap\": \"^1.5.1\",\n     \"react-dom\": \"^17.0.1\",\n+    \"react-router-bootstrap\": \"^0.25.0\",\n     \"react-router-dom\": \"^5.2.0\",\n     \"react-scripts\": \"4.0.3\",\n     \"web-vitals\": \"^1.0.1\""
},
{
"sha":"09b781103250c57901da0df13a83302ffc512ff6",
"filename":"frontend/public/index.html",
"status":"modified",
"additions":12,
"deletions":0,
"changes":12,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4873c8556451a5835870731d3f44af961670b19d/frontend/public/index.html",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4873c8556451a5835870731d3f44af961670b19d/frontend/public/index.html",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/index.html?ref=4873c8556451a5835870731d3f44af961670b19d",
"patch":"@@ -15,6 +15,8 @@\n       user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n     -->\n     <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n+\n+\n     <!--\n       Notice the use of %PUBLIC_URL% in the tags above.\n       It will be replaced with the URL of the `public` folder during the build.\n@@ -39,5 +41,15 @@\n       To begin the development, run `npm start` or `yarn start`.\n       To create a production bundle, use `npm run build` or `yarn build`.\n     -->\n+\n+    <!-- Latest compiled and minified CSS -->\n+    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n+\n+    <!-- jQuery library -->\n+    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n+\n+    <!-- Latest compiled JavaScript -->\n+    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n+\n   </body>\n </html>"
},
{
"sha":"f5c912f9e099105d108c900904880db6bcf45360",
"filename":"frontend/src/App.css",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4873c8556451a5835870731d3f44af961670b19d/frontend/src/App.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4873c8556451a5835870731d3f44af961670b19d/frontend/src/App.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.css?ref=4873c8556451a5835870731d3f44af961670b19d",
"patch":"@@ -1,6 +1,7 @@\n .App {\n   text-align: center;\n }\n+\n .header {\n   text-align: center;\n }\n@@ -12,4 +13,3 @@\n .custom-btn-toolbar > .btn {\n   margin-right: 1rem;\n }\n-"
},
{
"sha":"6ee02b986f1ab07afcfaca1ae2795d437f352bd3",
"filename":"frontend/src/App.js",
"status":"modified",
"additions":34,
"deletions":39,
"changes":73,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4873c8556451a5835870731d3f44af961670b19d/frontend/src/App.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4873c8556451a5835870731d3f44af961670b19d/frontend/src/App.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.js?ref=4873c8556451a5835870731d3f44af961670b19d",
"patch":"@@ -1,12 +1,12 @@\n import './App.css';\n-\n-import { MemoryRouter, BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n+import {BrowserRouter, Switch, Route, Link} from 'react-router-dom';\n \n import Jumbotron from 'react-bootstrap/Jumbotron';\n // import NavBar from 'react-bootstrap/Navbar';\n import Container from 'react-bootstrap/Container';\n import Button from 'react-bootstrap/Button';\n import ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n+import {LinkContainer} from 'react-router-bootstrap';\n \n \n import HomePage from './components/HomePage';\n@@ -17,44 +17,39 @@ import SuperAdminPage from './components/SuperAdminPage';\n \n function App() {\n   return (\n-    <>\n-      <BrowserRouter>\n-        <Container className=\"p-3\">\n-          <Jumbotron>\n-            <h1 className=\"header\">Electrical Vehicles Charger Station</h1>\n-\n-            <center>\n-\n-            <ButtonToolbar className=\"custom-btn-toolbar\">\n-              <Link to=\"/home\">\n-                <Button> Home </Button>\n-              </Link>\n-\n-              <Link to=\"/device\">\n-                <Button> Device </Button>\n-              </Link>\n-\n-              <Link to=\"/controller\">\n-                <Button> Controller </Button>\n-              </Link>\n-\n-              <Link to=\"/superAdmin\">\n-                <Button> SuperAdmin </Button>\n-              </Link>\n+      <>\n+        <BrowserRouter>\n+          <Container className=\"p-3\">\n+            <Jumbotron>\n+              <h1 className=\"header\">Electrical Vehicles Charger Station</h1>\n+\n+              <ButtonToolbar className=\"custom-btn-toolbar\">\n+                <LinkContainer to=\"/home\">\n+                  <Button>Home</Button>\n+                </LinkContainer>\n+                <LinkContainer to=\"/device\">\n+                  <Button>Device</Button>\n+                </LinkContainer>\n+                <LinkContainer to=\"/controller\">\n+                  <Button>Controller</Button>\n+                </LinkContainer>\n+                <LinkContainer to=\"/superAdmin\">\n+                  <Button>Super Admin</Button>\n+                </LinkContainer>\n               </ButtonToolbar>\n-            </center>\n-\n-            <Switch>\n-              <Route path=\"/home\" component={HomePage} />\n-              <Route path=\"/device\" component={DevicePage} />\n-              <Route path=\"/controller\" component={ControllerPage} />\n-              <Route path=\"/superAdmin\" component={SuperAdminPage} />\n-            </Switch>\n-\n-          </Jumbotron>\n-        </Container>\n-      </BrowserRouter>\n-    </>\n+\n+              <Switch>\n+                <Route path=\"/home\" component={HomePage}/>\n+                <Route path=\"/device\" component={DevicePage}/>\n+                <Route path=\"/controller\" component={ControllerPage}/>\n+                <Route path=\"/superAdmin\" component={SuperAdminPage}/>\n+              </Switch>\n+\n+\n+            </Jumbotron>\n+          </Container>\n+        </BrowserRouter>\n+      </>\n   );\n }\n "
},
{
"sha":"94ae53622caa0fb3f6f32705d54be137517b4b88",
"filename":"frontend/src/index.js",
"status":"modified",
"additions":2,
"deletions":3,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4873c8556451a5835870731d3f44af961670b19d/frontend/src/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4873c8556451a5835870731d3f44af961670b19d/frontend/src/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/index.js?ref=4873c8556451a5835870731d3f44af961670b19d",
"patch":"@@ -1,10 +1,9 @@\n import React from 'react';\n import ReactDOM from 'react-dom';\n-\n-import 'bootstrap/dist/css/bootstrap.min.css';\n-\n import './index.css';\n import App from './App';\n+// Importing the Bootstrap CSS\n+import 'bootstrap/dist/css/bootstrap.min.css';\n // import reportWebVitals from './reportWebVitals';\n \n ReactDOM.render("
},
{
"sha":"5cef5e1a9022f75bbe5b2eea1fbc4ed89ab03ff1",
"filename":"frontend/yarn.lock",
"status":"modified",
"additions":20,
"deletions":14,
"changes":34,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4873c8556451a5835870731d3f44af961670b19d/frontend/yarn.lock",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4873c8556451a5835870731d3f44af961670b19d/frontend/yarn.lock",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/yarn.lock?ref=4873c8556451a5835870731d3f44af961670b19d",
"patch":"@@ -1298,7 +1298,6 @@\n     \"jest-resolve\" \"^26.6.2\"\n     \"jest-util\" \"^26.6.2\"\n     \"jest-worker\" \"^26.6.2\"\n-    \"node-notifier\" \"^8.0.0\"\n     \"slash\" \"^3.0.0\"\n     \"source-map\" \"^0.6.0\"\n     \"string-length\" \"^4.0.1\"\n@@ -3227,7 +3226,6 @@\n     \"anymatch\" \"^2.0.0\"\n     \"async-each\" \"^1.0.1\"\n     \"braces\" \"^2.3.2\"\n-    \"fsevents\" \"^1.2.7\"\n     \"glob-parent\" \"^3.1.0\"\n     \"inherits\" \"^2.0.3\"\n     \"is-binary-path\" \"^1.0.0\"\n@@ -3246,7 +3244,6 @@\n   dependencies:\n     \"anymatch\" \"~3.1.1\"\n     \"braces\" \"~3.0.2\"\n-    \"fsevents\" \"~2.3.1\"\n     \"glob-parent\" \"~5.1.0\"\n     \"is-binary-path\" \"~2.1.0\"\n     \"is-glob\" \"~4.0.1\"\n@@ -4522,7 +4519,6 @@\n     \"estraverse\" \"^4.2.0\"\n     \"esutils\" \"^2.0.2\"\n     \"optionator\" \"^0.8.1\"\n-    \"source-map\" \"~0.6.1\"\n   optionalDependencies:\n     \"source-map\" \"~0.6.1\"\n \n@@ -6240,7 +6236,12 @@\n   dependencies:\n     \"is-docker\" \"^2.0.0\"\n \n-\"isarray@^1.0.0\", \"isarray@~1.0.0\", \"isarray@1.0.0\":\n+\"isarray@^1.0.0\":\n+  \"integrity\" \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\n+  \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\"\n+  \"version\" \"1.0.0\"\n+\n+\"isarray@~1.0.0\":\n   \"integrity\" \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\n   \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\"\n   \"version\" \"1.0.0\"\n@@ -6250,6 +6251,11 @@\n   \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz\"\n   \"version\" \"0.0.1\"\n \n+\"isarray@1.0.0\":\n+  \"integrity\" \"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\"\n+  \"resolved\" \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\"\n+  \"version\" \"1.0.0\"\n+\n \"isexe@^2.0.0\":\n   \"integrity\" \"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\"\n   \"resolved\" \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\"\n@@ -6460,7 +6466,6 @@\n     \"@types/node\" \"*\"\n     \"anymatch\" \"^3.0.3\"\n     \"fb-watchman\" \"^2.0.0\"\n-    \"fsevents\" \"^2.1.2\"\n     \"graceful-fs\" \"^4.2.4\"\n     \"jest-regex-util\" \"^26.0.0\"\n     \"jest-serializer\" \"^26.6.2\"\n@@ -6872,8 +6877,6 @@\n   \"integrity\" \"sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=\"\n   \"resolved\" \"https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz\"\n   \"version\" \"4.0.0\"\n-  dependencies:\n-    \"graceful-fs\" \"^4.1.6\"\n   optionalDependencies:\n     \"graceful-fs\" \"^4.1.6\"\n \n@@ -6882,7 +6885,6 @@\n   \"resolved\" \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\"\n   \"version\" \"6.1.0\"\n   dependencies:\n-    \"graceful-fs\" \"^4.1.6\"\n     \"universalify\" \"^2.0.0\"\n   optionalDependencies:\n     \"graceful-fs\" \"^4.1.6\"\n@@ -9006,7 +9008,7 @@\n     \"react-is\" \"^16.3.2\"\n     \"warning\" \"^4.0.0\"\n \n-\"prop-types@^15.0.0\", \"prop-types@^15.6.2\", \"prop-types@^15.7.2\":\n+\"prop-types@^15.0.0\", \"prop-types@^15.5.10\", \"prop-types@^15.6.2\", \"prop-types@^15.7.2\":\n   \"integrity\" \"sha512-8QQikdH7//R2vurIJSutZ1smHYTcLpRWEOlHnzcWHmBYrOGUysKwSsrC89BCiFj3CbrfJ/nXFdJepOVrY1GCHQ==\"\n   \"resolved\" \"https://registry.npmjs.org/prop-types/-/prop-types-15.7.2.tgz\"\n   \"version\" \"15.7.2\"\n@@ -9299,7 +9301,14 @@\n   \"resolved\" \"https://registry.npmjs.org/react-refresh/-/react-refresh-0.8.3.tgz\"\n   \"version\" \"0.8.3\"\n \n-\"react-router-dom@^5.2.0\":\n+\"react-router-bootstrap@^0.25.0\":\n+  \"integrity\" \"sha512-/22eqxjn6Zv5fvY2rZHn57SKmjmJfK7xzJ6/G1OgxAjLtKVfWgV5sn41W2yiqzbtV5eE4/i4LeDLBGYTqx7jbA==\"\n+  \"resolved\" \"https://registry.npmjs.org/react-router-bootstrap/-/react-router-bootstrap-0.25.0.tgz\"\n+  \"version\" \"0.25.0\"\n+  dependencies:\n+    \"prop-types\" \"^15.5.10\"\n+\n+\"react-router-dom@^5.2.0\", \"react-router-dom@>=4.0.0\":\n   \"integrity\" \"sha512-gxAmfylo2QUjcwxI63RhQ5G85Qqt4voZpUXSEqCwykV0baaOTQDR1f0PmY8AELqIyVc0NEZUj0Gov5lNGcXgsA==\"\n   \"resolved\" \"https://registry.npmjs.org/react-router-dom/-/react-router-dom-5.2.0.tgz\"\n   \"version\" \"5.2.0\"\n@@ -9361,7 +9370,6 @@\n     \"eslint-webpack-plugin\" \"^2.5.2\"\n     \"file-loader\" \"6.1.1\"\n     \"fs-extra\" \"^9.0.1\"\n-    \"fsevents\" \"^2.1.3\"\n     \"html-webpack-plugin\" \"4.5.0\"\n     \"identity-obj-proxy\" \"3.0.0\"\n     \"jest\" \"26.6.0\"\n@@ -11490,10 +11498,8 @@\n   \"resolved\" \"https://registry.npmjs.org/watchpack/-/watchpack-1.7.5.tgz\"\n   \"version\" \"1.7.5\"\n   dependencies:\n-    \"chokidar\" \"^3.4.1\"\n     \"graceful-fs\" \"^4.1.2\"\n     \"neo-async\" \"^2.5.0\"\n-    \"watchpack-chokidar2\" \"^2.0.1\"\n   optionalDependencies:\n     \"chokidar\" \"^3.4.1\"\n     \"watchpack-chokidar2\" \"^2.0.1\""
}
]
},
{
"commit_sha":"999c138eb7d8ffd5aa37d3e8fa1181de84ab863c",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2Ojk5OWMxMzhlYjdkOGZmZDVhYTM3ZDNlOGZhMTE4MWRlODRhYjg2M2M=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/999c138eb7d8ffd5aa37d3e8fa1181de84ab863c",
"commit_date":"2021-03-06T03:59:41Z",
"files":[
{
"sha":"b500da08f10a101fa91addf0e99ccfe2f3cd1917",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":6,
"deletions":12,
"changes":18,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/999c138eb7d8ffd5aa37d3e8fa1181de84ab863c/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/999c138eb7d8ffd5aa37d3e8fa1181de84ab863c/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=999c138eb7d8ffd5aa37d3e8fa1181de84ab863c",
"patch":"@@ -168,24 +168,18 @@ async function registerDevice(brand, model, mac, powerType, long, lat) {\n }\n \n async function getDeviceController(devID) {\n-    console.log(devID == null ? 'devID ' + devID : \"UNDEFINED param\"); \n-\n     const contract = await init();\n     let result;\n     try {\n-        result = await contract.submitTransaction('getDeviceController', devID\n-        );   \n+        result = await contract.submitTransaction('getDeviceController', devID);   \n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n+        // In case of business error from chaincode (for example: non-existing ID return an empty JSON)\n+        return '{\"error\": \"' + error.message + '\"}';\n+    } finally {\n+        await disconnectGateway(); \n     }\n-    await disconnectGateway(); \n-    // console.log('result from chaincode = ' + result.toString());\n-\n-    if (result !== null)\n-        return JSON.parse('{\"ControllerID\": \"' + result.toString() + '\"}');\n-    else \n-        //NOTE: meaning controllerID is not existed, default to empty array\n-        return [];\n+    return JSON.parse('{\"ControllerID\": \"' + result.toString() + '\"}');\n }\n \n async function executeDeviceCommand(devID, command) {"
},
{
"sha":"de23bbca894ec0a88d0c5b71904fd98b4dff4cad",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":2,
"deletions":1,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/999c138eb7d8ffd5aa37d3e8fa1181de84ab863c/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/999c138eb7d8ffd5aa37d3e8fa1181de84ab863c/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=999c138eb7d8ffd5aa37d3e8fa1181de84ab863c",
"patch":"@@ -27,7 +27,8 @@ router.post('/updateStatus', async function(req, res, next) {\n });\n \n router.get('/controller', async function(req, res, next) {\n-    const result = await connector.getDeviceController(req.body.deviceID);\n+    // For GET method, change req.body to query instead of body. It is not recommended to have body parameters while using GET method in HTTP.\n+    const result = await connector.getDeviceController(req.query.deviceID);\n     res.json(result); \n });\n "
},
{
"sha":"ec2e8b38fb65451884ae2aedf7866c0c41b72718",
"filename":"frontend/src/components/DevicePage.js",
"status":"modified",
"additions":8,
"deletions":6,
"changes":14,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/999c138eb7d8ffd5aa37d3e8fa1181de84ab863c/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/999c138eb7d8ffd5aa37d3e8fa1181de84ab863c/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=999c138eb7d8ffd5aa37d3e8fa1181de84ab863c",
"patch":"@@ -9,6 +9,7 @@ export function DevicePage() {\n     const defaultURL = 'http://localhost:8000/device/';\n \n     const [deviceId, setDeviceId] = useState('');\n+    const [controllerId, setControllerId] = useState('');\n \n     const getControllerIdHandler = async (ev) => {\n         ev.preventDefault();\n@@ -17,13 +18,14 @@ export function DevicePage() {\n \n             const res = await axios({\n                 method: 'get',\n-                url: defaultURL + 'controller',\n-                data: {\n-                    deviceID: 'DEV-1'\n+                //url: defaultURL + 'controller',\n+                url: 'http://localhost:8000/device/controller',\n+                params: {\n+                    deviceID: deviceId\n                 }\n-            })\n-\n+            });\n             console.log('json ' + res.data);\n+            setControllerId(res.data.ControllerID);\n \n         // } catch (e) {\n         //     console.error(e)\n@@ -41,7 +43,7 @@ export function DevicePage() {\n                 {/* <label htmlFor=\"Type in deviceID\">Get Controller </label> */}\n                 <label> Get Controller </label>\n                 <button name=\"submit\"> Submit </button>\n-\n+                <label>Controller ID: {controllerId}</label>\n             </form>\n         </div>\n     );"
},
{
"sha":"1b3cdb41def972725b1b102c5da4b802bd101a50",
"filename":"frontend/yarn.lock",
"status":"modified",
"additions":3,
"deletions":3,
"changes":6,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/999c138eb7d8ffd5aa37d3e8fa1181de84ab863c/frontend/yarn.lock",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/999c138eb7d8ffd5aa37d3e8fa1181de84ab863c/frontend/yarn.lock",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/yarn.lock?ref=999c138eb7d8ffd5aa37d3e8fa1181de84ab863c",
"patch":"@@ -5141,9 +5141,9 @@\n     \"readable-stream\" \"^2.3.6\"\n \n \"follow-redirects@^1.0.0\", \"follow-redirects@^1.10.0\":\n-  \"integrity\" \"sha512-6mPTgLxYm3r6Bkkg0vNM0HTjfGrOEtsfbhagQvbxDEsEkpNhw582upBaoRZylzen6krEmxXJgt9Ju6HiI4O7BA==\"\n-  \"resolved\" \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.13.2.tgz\"\n-  \"version\" \"1.13.2\"\n+  \"integrity\" \"sha512-DUgl6+HDzB0iEptNQEXLx/KhTmDb8tZUHSeLqpnjpknR70H0nC2t9N73BK6fN4hOvJ84pKlIQVQ4k5FFlBedKA==\"\n+  \"resolved\" \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.13.3.tgz\"\n+  \"version\" \"1.13.3\"\n \n \"for-in@^1.0.2\":\n   \"integrity\" \"sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=\""
}
]
},
{
"commit_sha":"fceca783d4025fa818af172d47bc1f278943ddeb",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmZjZWNhNzgzZDQwMjVmYTgxOGFmMTcyZDQ3YmMxZjI3ODk0M2RkZWI=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/fceca783d4025fa818af172d47bc1f278943ddeb",
"commit_date":"2021-03-06T03:14:00Z",
"files":[
{
"sha":"34f0ebcedb8485eeb191c3b9491ef74c9fdbaf17",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":10,
"deletions":3,
"changes":13,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=fceca783d4025fa818af172d47bc1f278943ddeb",
"patch":"@@ -22,6 +22,9 @@ async function init() {\n         const network = await gateway.getNetwork('mychannel');\n         // Get the contract from the network.\n         contract = network.getContract('EVChargerReg');\n+\n+        console.log('---------------------------- RESULT from backend server --------')\n+\n         return contract;\n     } catch (error) {\n         console.error('Failed to initialize transaction:', error);\n@@ -165,6 +168,7 @@ async function registerDevice(brand, model, mac, powerType, long, lat) {\n }\n \n async function getDeviceController(devID) {\n+    console.log(devID == null ? 'devID ' + devID : \"UNDEFINED param\"); \n \n     const contract = await init();\n     let result;\n@@ -175,10 +179,13 @@ async function getDeviceController(devID) {\n         console.error('Failed to submit transaction:', error);\n     }\n     await disconnectGateway(); \n-    console.log('result from chaincode = ' + result.toString());\n-    return JSON.parse('{\"ControllerID\": \"' + result.toString() + '\"}');\n-    //result.toString();\n+    // console.log('result from chaincode = ' + result.toString());\n \n+    if (result !== null)\n+        return JSON.parse('{\"ControllerID\": \"' + result.toString() + '\"}');\n+    else \n+        //NOTE: meaning controllerID is not existed, default to empty array\n+        return [];\n }\n \n async function executeDeviceCommand(devID, command) {"
},
{
"sha":"e80aef63e587fd5c401577803244305a406e3c07",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":0,
"deletions":2,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=fceca783d4025fa818af172d47bc1f278943ddeb",
"patch":"@@ -41,6 +41,4 @@ router.post('/executeCommand', async function(req, res, next) {\n     res.json(result); \n });\n \n-\n-\n module.exports = router;\n\\ No newline at end of file"
},
{
"sha":"0a27e5882e4eed29e733941b97e494a45abd5552",
"filename":"frontend/package.json",
"status":"modified",
"additions":5,
"deletions":0,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/package.json?ref=fceca783d4025fa818af172d47bc1f278943ddeb",
"patch":"@@ -6,8 +6,13 @@\n     \"@testing-library/jest-dom\": \"^5.11.4\",\n     \"@testing-library/react\": \"^11.1.0\",\n     \"@testing-library/user-event\": \"^12.1.10\",\n+    \"axios\": \"^0.21.1\",\n+    \"bootstrap\": \"^4.6.0\",\n+    \"primereact\": \"^6.0.2\",\n     \"react\": \"^17.0.1\",\n+    \"react-bootstrap\": \"^1.5.1\",\n     \"react-dom\": \"^17.0.1\",\n+    \"react-router-dom\": \"^5.2.0\",\n     \"react-scripts\": \"4.0.3\",\n     \"web-vitals\": \"^1.0.1\"\n   },"
},
{
"sha":"be559a3009c8e23fe55ceb4bcd25c69ad4ffa0f8",
"filename":"frontend/src/App.css",
"status":"modified",
"additions":6,
"deletions":29,
"changes":35,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/App.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/App.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.css?ref=fceca783d4025fa818af172d47bc1f278943ddeb",
"patch":"@@ -1,38 +1,15 @@\n .App {\n   text-align: center;\n }\n-\n-.App-logo {\n-  height: 40vmin;\n-  pointer-events: none;\n-}\n-\n-@media (prefers-reduced-motion: no-preference) {\n-  .App-logo {\n-    animation: App-logo-spin infinite 20s linear;\n-  }\n+.header {\n+  text-align: center;\n }\n \n-.App-header {\n-  background-color: #282c34;\n-  min-height: 100vh;\n-  display: flex;\n-  flex-direction: column;\n-  align-items: center;\n-  justify-content: center;\n-  font-size: calc(10px + 2vmin);\n-  color: white;\n+.custom-btn-toolbar {\n+  display: inline !important;\n }\n \n-.App-link {\n-  color: #61dafb;\n+.custom-btn-toolbar > .btn {\n+  margin-right: 1rem;\n }\n \n-@keyframes App-logo-spin {\n-  from {\n-    transform: rotate(0deg);\n-  }\n-  to {\n-    transform: rotate(360deg);\n-  }\n-}"
},
{
"sha":"72bc261949ea539ed0cc6558695fa64b6200f691",
"filename":"frontend/src/App.js",
"status":"modified",
"additions":50,
"deletions":16,
"changes":66,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/App.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/App.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.js?ref=fceca783d4025fa818af172d47bc1f278943ddeb",
"patch":"@@ -1,25 +1,59 @@\n import './App.css';\n-import { Route, Switch, Link, BrowserRouter } from \"react-router-dom\";\n+\n+import { MemoryRouter, BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n+\n+import Jumbotron from 'react-bootstrap/Jumbotron';\n+// import NavBar from 'react-bootstrap/Navbar';\n+import Container from 'react-bootstrap/Container';\n+import Button from 'react-bootstrap/Button';\n+import ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n+\n+\n import HomePage from './components/HomePage';\n+import {DevicePage} from './components/DevicePage';\n+import ControllerPage from './components/ControllerPage';\n+import SuperAdminPage from './components/SuperAdminPage';\n+\n \n function App() {\n   return (\n     <>\n-      <HomePage/>\n-        <BrowserRouter>\n-          <center>\n-            <ul>\n-              <li>\n-                <Link to=\"\">  new component</Link>\n-                \n-              </li>\n-              </ul>\n-          </center>\n-          <Switch> \n-            <Route path=\"\" component=\"\"/>\n-            <Route path=\"\" component=\"\"/>\n-          </Switch>\n-        </BrowserRouter>\n+      <BrowserRouter>\n+        <Container className=\"p-3\">\n+          <Jumbotron>\n+            <h1 className=\"header\">Electrical Vehicles Charger Station</h1>\n+\n+            <center>\n+\n+            <ButtonToolbar className=\"custom-btn-toolbar\">\n+              <Link to=\"/home\">\n+                <Button> Home </Button>\n+              </Link>\n+\n+              <Link to=\"/device\">\n+                <Button> Device </Button>\n+              </Link>\n+\n+              <Link to=\"/controller\">\n+                <Button> Controller </Button>\n+              </Link>\n+\n+              <Link to=\"/superAdmin\">\n+                <Button> SuperAdmin </Button>\n+              </Link>\n+              </ButtonToolbar>\n+            </center>\n+\n+            <Switch>\n+              <Route path=\"/home\" component={HomePage} />\n+              <Route path=\"/device\" component={DevicePage} />\n+              <Route path=\"/controller\" component={ControllerPage} />\n+              <Route path=\"/superAdmin\" component={SuperAdminPage} />\n+            </Switch>\n+\n+          </Jumbotron>\n+        </Container>\n+      </BrowserRouter>\n     </>\n   );\n }"
},
{
"sha":"93aad506ad6a82d0cffb44e1c7088e3600c4ada5",
"filename":"frontend/src/components/ControllerPage.js",
"status":"added",
"additions":17,
"deletions":0,
"changes":17,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/components/ControllerPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/components/ControllerPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/ControllerPage.js?ref=fceca783d4025fa818af172d47bc1f278943ddeb",
"patch":"@@ -0,0 +1,17 @@\n+import React from \"react\";\n+\n+\n+class ControllerPage extends React.Component {\n+\n+\n+    render() {\n+        return (\n+            <div>\n+                <p>NavBar item has 2 tabs  Register Controller,\u200b Show Controller info </p>\n+                <label> Display Controller Info </label>\n+            </div>\n+        );\n+    }\n+}\n+\n+export default ControllerPage;"
},
{
"sha":"f8334de0defb74c4b06d2fd1b2d758e200117724",
"filename":"frontend/src/components/DevicePage.js",
"status":"added",
"additions":48,
"deletions":0,
"changes":48,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/components/DevicePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/components/DevicePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/DevicePage.js?ref=fceca783d4025fa818af172d47bc1f278943ddeb",
"patch":"@@ -0,0 +1,48 @@\n+import React, { useState } from 'react';\n+import { InputText } from 'primereact/inputtext';\n+\n+import axios from \"axios\";\n+\n+\n+//class DevicePage extends React.Component {\n+export function DevicePage() {\n+    const defaultURL = 'http://localhost:8000/device/';\n+\n+    const [deviceId, setDeviceId] = useState('');\n+\n+    const getControllerIdHandler = async (ev) => {\n+        ev.preventDefault();\n+        // try {\n+            console.log('deviceId selected ' + deviceId);\n+\n+            const res = await axios({\n+                method: 'get',\n+                url: defaultURL + 'controller',\n+                data: {\n+                    deviceID: 'DEV-1'\n+                }\n+            })\n+\n+            console.log('json ' + res.data);\n+\n+        // } catch (e) {\n+        //     console.error(e)\n+        // }\n+    }\n+\n+\n+    return (\n+        <div>\n+            {/* <label> Current Device </label> */}\n+            <form onSubmit={getControllerIdHandler}>\n+                <InputText value={deviceId} onChange={(e) =>\n+                    setDeviceId(e.target.value)} />\n+\n+                {/* <label htmlFor=\"Type in deviceID\">Get Controller </label> */}\n+                <label> Get Controller </label>\n+                <button name=\"submit\"> Submit </button>\n+\n+            </form>\n+        </div>\n+    );\n+}\n\\ No newline at end of file"
},
{
"sha":"d48d25a84159692d047448bf0c7ca533c3ac5a44",
"filename":"frontend/src/components/HomePage.js",
"status":"modified",
"additions":4,
"deletions":5,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/components/HomePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/components/HomePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/HomePage.js?ref=fceca783d4025fa818af172d47bc1f278943ddeb",
"patch":"@@ -1,19 +1,18 @@\n import React from \"react\";\n \n-//import {}\n \n class HomePage extends React.Component {\n \n \n     render() {\n         return (\n             <div>\n-                <div><h1><center>Electrical Vehicles Charger Station</center></h1></div>\n-                \n-                <div><h2><center> roles???</center></h2></div>\n+                <center>\n+                    Write description about EVCHarger Registry project \n+                </center>\n             </div>\n         );\n     }\n }\n \n-export default Home;\n+export default HomePage;"
},
{
"sha":"e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
"filename":"frontend/src/components/NavigationBar.js",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/components/NavigationBar.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/components/NavigationBar.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/NavigationBar.js?ref=fceca783d4025fa818af172d47bc1f278943ddeb"
},
{
"sha":"465d225e20c9eba2567ffbe28373a2bff27081fc",
"filename":"frontend/src/components/SuperAdminPage.js",
"status":"added",
"additions":17,
"deletions":0,
"changes":17,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/components/SuperAdminPage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/components/SuperAdminPage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/SuperAdminPage.js?ref=fceca783d4025fa818af172d47bc1f278943ddeb",
"patch":"@@ -0,0 +1,17 @@\n+import React from \"react\";\n+\n+\n+class SuperAdminPage extends React.Component {\n+\n+\n+    render() {\n+        return (\n+            <div>\n+                <p> NavBar item has 2 tabs  Show Device info\u200b\u200b, Register Controller\u200b </p>\n+                <label> List of Devices with Assign n Change buttons </label>\n+            </div>\n+        );\n+    }\n+}\n+\n+export default SuperAdminPage;"
},
{
"sha":"69fc8a1db8c1f2a070428de8c529cec98f9befe4",
"filename":"frontend/src/index.js",
"status":"modified",
"additions":5,
"deletions":2,
"changes":7,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/src/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/index.js?ref=fceca783d4025fa818af172d47bc1f278943ddeb",
"patch":"@@ -1,8 +1,11 @@\n import React from 'react';\n import ReactDOM from 'react-dom';\n+\n+import 'bootstrap/dist/css/bootstrap.min.css';\n+\n import './index.css';\n import App from './App';\n-import reportWebVitals from './reportWebVitals';\n+// import reportWebVitals from './reportWebVitals';\n \n ReactDOM.render(\n   <React.StrictMode>\n@@ -11,4 +14,4 @@ ReactDOM.render(\n   document.getElementById('root')\n );\n \n-reportWebVitals();\n+// reportWebVitals();"
},
{
"sha":"16f200699b1ba0b272c7608fa18fa4423a2ca164",
"filename":"frontend/yarn.lock",
"status":"modified",
"additions":10533,
"deletions":9933,
"changes":20466,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/yarn.lock",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/fceca783d4025fa818af172d47bc1f278943ddeb/frontend/yarn.lock",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/yarn.lock?ref=fceca783d4025fa818af172d47bc1f278943ddeb"
}
]
},
{
"commit_sha":"e6475c2475fbed091a1519b803980ef27856ff97",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmU2NDc1YzI0NzVmYmVkMDkxYTE1MTliODAzOTgwZWYyNzg1NmZmOTc=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/e6475c2475fbed091a1519b803980ef27856ff97",
"commit_date":"2021-03-05T03:16:38Z",
"files":[
{
"sha":"a5e4967e0e0193d0439a8ebf8339784a972d02a2",
"filename":".gitignore",
"status":"modified",
"additions":100,
"deletions":1,
"changes":101,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -1,4 +1,4 @@\n-# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n+\n \n # dependencies\n /node_modules\n@@ -21,3 +21,102 @@\n npm-debug.log*\n yarn-debug.log*\n yarn-error.log*\n+*~\n+*#\n+.#*\n+\n+# Vim file artifacts\n+.*.sw*\n+# installed platform-specific binaries\n+backend/node_modules\n+backend/config\n+backend/gateway/\n+backend/wallet/\n+.DS_Store\n+.project\n+\n+# omit Go vendor directories\n+vendor/\n+.vscode\n+.gradle\n+.idea\n+\n+# Ignore Gradle build output directory\n+build\n+package-lock.json\n+\n+# Logs\n+logs\n+*.log\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\n+*.pid.lock\n+\n+# Directory for instrumented libs generated by jscoverage/JSCover\n+lib-cov\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+\n+# nyc test coverage\n+.nyc_output\n+\n+# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n+.grunt\n+\n+# Bower dependency directory (https://bower.io/)\n+bower_components\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Compiled binary addons (https://nodejs.org/api/addons.html)\n+build/Release\n+\n+# Dependency directories\n+chaincode/node_modules/\n+chaincode/jspm_packages/\n+\n+# TypeScript v1 declaration files\n+chaincode/typings/\n+\n+# Optional npm cache directory\n+chaincode/.npm\n+\n+# Optional eslint cache\n+chaincode/.eslintcache\n+\n+# Optional REPL history\n+chaincode/.node_repl_history\n+\n+# Output of 'npm pack'\n+chaincode/*.tgz\n+\n+# Yarn Integrity file\n+chaincode/.yarn-integrity\n+\n+# dotenv environment variables file\n+chaincode/.env\n+\n+# parcel-bundler cache (https://parceljs.org/)\n+chaincode/.cache\n+\n+# next.js build output\n+chaincode/.next\n+\n+# nuxt.js build output\n+chaincode/.nuxt\n+\n+# vuepress build output\n+chaincode/.vuepress/dist\n+\n+# Serverless directories\n+chaincode/.serverless\n+\n+>>>>>>> backend"
},
{
"sha":"82b5ce861386f5c8691ed8486ffd36ddc17f7421",
"filename":"backend/README.md",
"status":"added",
"additions":3,
"deletions":0,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/README.md?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,3 @@\n+# EVChargerReg Backend App\n+\n+<h2> How to run guide </h2>\n\\ No newline at end of file"
},
{
"sha":"7c3ae381ad64942fd5739c0093785d59013fd2fd",
"filename":"backend/app.js",
"status":"added",
"additions":53,
"deletions":0,
"changes":53,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/app.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/app.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/app.js?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,53 @@\n+var createError = require('http-errors');\n+var express = require('express');\n+var path = require('path');\n+var cookieParser = require('cookie-parser');\n+var logger = require('morgan');\n+const bodyParser = require('body-parser');\n+var cors = require('cors');\n+\n+\n+var controllerRouter = require('./routes/controller');\n+var deviceRouter = require('./routes/device');\n+\n+var indexRouter = require('./routes');\n+var usersRouter = require('./routes/users');\n+\n+var app = express();\n+\n+app.use(bodyParser.urlencoded());\n+app.use(bodyParser.json());\n+app.use(cors());\n+\n+// view engine setup\n+app.set('views', path.join(__dirname, 'views'));\n+app.set('view engine', 'jade');\n+\n+app.use(logger('dev'));\n+app.use(express.json());\n+app.use(express.urlencoded({ extended: false }));\n+app.use(cookieParser());\n+app.use(express.static(path.join(__dirname, 'public')));\n+\n+app.use('/', indexRouter);\n+app.use('/users', usersRouter);\n+app.use('/controller', controllerRouter);\n+app.use('/device', deviceRouter);\n+\n+// catch 404 and forward to error handler\n+app.use(function(req, res, next) {\n+  next(createError(404));\n+});\n+\n+// error handler\n+app.use(function(err, req, res, next) {\n+  // set locals, only providing error in development\n+  res.locals.message = err.message;\n+  res.locals.error = req.app.get('env') === 'development' ? err : {};\n+\n+  // render the error page\n+  res.status(err.status || 500);\n+  res.render('error');\n+});\n+\n+module.exports = app;"
},
{
"sha":"cc1a611fad5061d3e2726ec8e261ffa52148074e",
"filename":"backend/bin/www",
"status":"added",
"additions":90,
"deletions":0,
"changes":90,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/bin/www",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/bin/www",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/bin/www?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,90 @@\n+#!/usr/bin/env node\n+\n+/**\n+ * Module dependencies.\n+ */\n+\n+var app = require('../app');\n+var debug = require('debug')('evchargerreg-server');\n+var http = require('http');\n+\n+/**\n+ * Get port from environment and store in Express.\n+ */\n+\n+var port = normalizePort(process.env.PORT || '8000');\n+app.set('port', port);\n+\n+/**\n+ * Create HTTP server.\n+ */\n+\n+var server = http.createServer(app);\n+\n+/**\n+ * Listen on provided port, on all network interfaces.\n+ */\n+\n+server.listen(port);\n+server.on('error', onError);\n+server.on('listening', onListening);\n+\n+/**\n+ * Normalize a port into a number, string, or false.\n+ */\n+\n+function normalizePort(val) {\n+  var port = parseInt(val, 10);\n+\n+  if (isNaN(port)) {\n+    // named pipe\n+    return val;\n+  }\n+\n+  if (port >= 0) {\n+    // port number\n+    return port;\n+  }\n+\n+  return false;\n+}\n+\n+/**\n+ * Event listener for HTTP server \"error\" event.\n+ */\n+\n+function onError(error) {\n+  if (error.syscall !== 'listen') {\n+    throw error;\n+  }\n+\n+  var bind = typeof port === 'string'\n+    ? 'Pipe ' + port\n+    : 'Port ' + port;\n+\n+  // handle specific listen errors with friendly messages\n+  switch (error.code) {\n+    case 'EACCES':\n+      console.error(bind + ' requires elevated privileges');\n+      process.exit(1);\n+      break;\n+    case 'EADDRINUSE':\n+      console.error(bind + ' is already in use');\n+      process.exit(1);\n+      break;\n+    default:\n+      throw error;\n+  }\n+}\n+\n+/**\n+ * Event listener for HTTP server \"listening\" event.\n+ */\n+\n+function onListening() {\n+  var addr = server.address();\n+  var bind = typeof addr === 'string'\n+    ? 'pipe ' + addr\n+    : 'port ' + addr.port;\n+  debug('Listening on ' + bind);\n+}"
},
{
"sha":"d965c7917aff96e0aa4538da4e6e07b958b51267",
"filename":"backend/connection.js",
"status":"added",
"additions":38,
"deletions":0,
"changes":38,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/connection.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/connection.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/connection.js?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,38 @@\n+import { Gateway, Wallets } from 'fabric-network';\n+import * as path from 'path';\n+import * as fs from 'fs';\n+\n+async function main() {\n+    try {\n+        // Create a new file system based wallet for managing identities.\n+        const walletPath = path.join(process.cwd(), 'Org1');\n+\n+        const wallet = await Wallets.newFileSystemWallet(walletPath);\n+        console.log(`Wallet path: ${walletPath}`);\n+        // Create a new gateway for connecting to our peer node.\n+        const gateway = new Gateway();\n+        const connectionProfilePath = path.resolve(__dirname, '../gateway', '1OrgLocalFabricOrg1GatewayConnection.json');\n+        const connectionProfile = JSON.parse(fs.readFileSync(connectionProfilePath, 'utf8'));\n+        const connectionOptions = {\n+            wallet, identity: 'Org1 Admin', discovery:\n+                { enabled: true, asLocalhost: true }\n+        };\n+        await gateway.connect(connectionProfile, connectionOptions);\n+        // Get the network (channel) our contract is deployed to.\n+        const network = await gateway.getNetwork('mychannel');\n+        // Get the contract from the network.\n+        const contract = network.getContract('controller-device-contract');\n+        // Submit the specified transaction.\n+        await contract.submitTransaction('registerController', 'Test Controller from NodeJS', 'SP from NodeJS', '10', '20');\n+        console.log('Transaction has been submitted');\n+        // Disconnect from the gateway.\n+        gateway.disconnect();\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+}\n+\n+module.exports = {\n+    main: main\n+}\n\\ No newline at end of file"
},
{
"sha":"093c848ddeb3b73eff12c90accbd4e36b882c955",
"filename":"backend/endpoint/PostmanTest/EVCharger.postman_collection.json",
"status":"added",
"additions":372,
"deletions":0,
"changes":372,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/endpoint/PostmanTest/EVCharger.postman_collection.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/endpoint/PostmanTest/EVCharger.postman_collection.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/PostmanTest/EVCharger.postman_collection.json?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,372 @@\n+{\n+\t\"info\": {\n+\t\t\"_postman_id\": \"2068d3a0-2419-4cd1-8723-8adc75565914\",\n+\t\t\"name\": \"EVCharger\",\n+\t\t\"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n+\t},\n+\t\"item\": [\n+\t\t{\n+\t\t\t\"name\": \"Register Device\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"brand\\\": \\\"TestDevice\\\",\\n    \\\"model\\\": \\\"PSDG\\\",\\n    \\\"mac\\\": \\\"89:334:00:89\\\",\\n    \\\"powerType\\\": \\\"AC\\\",\\n    \\\"location\\\": {\\n        \\\"long\\\": \\\"56\\\",\\n        \\\"lat\\\": \\\"45\\\"\\n    }\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/register\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"register\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetAllDevices\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"\"\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/all\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"all\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetDeviceController\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n   \\\"deviceID\\\": \\\"DEV-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/controller\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"controller\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"executeCommand\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n   \\\"deviceID\\\": \\\"DEV-2\\\",\\n   \\\"command\\\": \\\"show inUSe status\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/executeCommand\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"executeCommand\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetDetailsofDevice\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceId\\\": \\\"DEV-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/id\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"id\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetAllController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/all\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"all\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"AssignController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceID\\\": \\\"DEV-1\\\",\\n    \\\"controllerID\\\" : \\\"CONTR-2\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/assign\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"assign\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetControllerDevices\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"id\\\": \\\"CONTR-2\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/devices\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"devices\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"UpdateController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"controllerID\\\" :  \\\"CONTR-2\\\",\\n    \\\"serviceProvider\\\" : \\\"SP98\\\",\\n    \\\"location\\\": {\\n        \\\"long\\\": \\\"89\\\",\\n        \\\"lat\\\": \\\"45\\\"\\n    }\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/update\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"update\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"changeController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceID\\\": \\\"DEV-2\\\",\\n    \\\"newControllerID\\\" : \\\"CONTR-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/change\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"change\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"RegisterController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"controllerName\\\": \\\"Controller3\\\", \\n    \\\"serviceProvider\\\" : \\\"SP5\\\", \\n    \\\"location\\\" : {\\n        \\\"long\\\": \\\"10\\\", \\n        \\\"lat\\\" : \\\"50\\\"\\n    }\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/register\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"register\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"updateTemperature\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceId\\\" : \\\"DEV-2\\\", \\n    \\\"currentTemp\\\": \\\"56\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/update\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"update\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"updateDeviceStatus\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceId\\\" : \\\"DEV-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/updateStatus\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"updateStatus\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t}\n+\t],\n+\t\"protocolProfileBehavior\": {}\n+}\n\\ No newline at end of file"
},
{
"sha":"199bae8e0062aa96b3f7ba4dd98544d8a9d4a38a",
"filename":"backend/endpoint/mapping.js",
"status":"added",
"additions":212,
"deletions":0,
"changes":212,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,212 @@\n+let gateway; \n+\n+async function init() {\n+    let contract;\n+    try {\n+        const { Wallets } = require('fabric-network');\n+        const { Gateway } = require('fabric-network'); //Creates a new gateway and use it to connect to the network\n+        const path = require('path');\n+        const fs = require('fs');\n+    \n+        const walletPath = path.join(process.cwd(), './wallet/Org1');\n+        const wallet = await Wallets.newFileSystemWallet(walletPath);\n+        gateway = new Gateway();\n+        const connectionProfilePath = path.resolve(__dirname, '../gateway', '1OrgLocalFabricOrg1GatewayConnection.json');\n+        const connectionProfile = JSON.parse(fs.readFileSync(connectionProfilePath, 'utf8'));\n+        const connectionOptions = {\n+            wallet, identity: 'Org1 Admin', discovery:\n+                { enabled: true, asLocalhost: true }\n+        };\n+        await gateway.connect(connectionProfile, connectionOptions);\n+        // Get the network (channel) our contract is deployed to.\n+        const network = await gateway.getNetwork('mychannel');\n+        // Get the contract from the network.\n+        contract = network.getContract('EVChargerReg');\n+        return contract;\n+    } catch (error) {\n+        console.error('Failed to initialize transaction:', error);\n+        process.exit(1);\n+    }\n+}\n+\n+async function getAllControllers() {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getAllControllers');\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function registerController(controllerName, serProvider, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('registerController', controllerName, serProvider, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function updateController(controllerID, serProvider, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('updateController', controllerID, serProvider, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function changeController(deviceID, newControllerID) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('changeController', deviceID, newControllerID);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function assignController(deviceID, controllerID) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('assignController', deviceID, controllerID);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function disconnectGateway() {\n+    gateway.disconnect();\n+}\n+\n+\n+async function getAllDevices() {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getAllDevices');\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function getDevice(id) {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getDevice', id);\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+\n+async function getControllerDevices(id) {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getControllerDevices', id);\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function updateDevice(deviceId, currentTemp) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('updateDevice', deviceId, currentTemp);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function updateDeviceStatus(deviceId) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('updateDeviceStatus', deviceId);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function registerDevice(brand, model, mac, powerType, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('registerDevice', brand, model, mac, powerType, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function getDeviceController(devID) {\n+\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getDeviceController', devID\n+        );   \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    await disconnectGateway(); \n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse('{\"ControllerID\": \"' + result.toString() + '\"}');\n+    //result.toString();\n+\n+}\n+\n+async function executeDeviceCommand(devID, command) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('executeDeviceCommand', devID, command);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+\n+module.exports = {\n+    /* controller */\n+    getAllControllers: getAllControllers,\n+    registerController: registerController, \n+    updateController: updateController, \n+    changeController: changeController,\n+    assignController: assignController,\n+    getControllerDevices: getControllerDevices,\n+    getDevice: getDevice,\n+    getAllDevices: getAllDevices,\n+    /* devices */\n+    updateDevice: updateDevice,\n+    updateDeviceStatus: updateDeviceStatus,\n+    registerDevice: registerDevice,\n+    getDeviceController: getDeviceController,\n+    executeDeviceCommand: executeDeviceCommand\n+}\n\\ No newline at end of file"
},
{
"sha":"f12c307f830456a8cb7694521833195ce507d725",
"filename":"backend/package.json",
"status":"added",
"additions":19,
"deletions":0,
"changes":19,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/package.json?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,19 @@\n+{\n+  \"name\": \"evchargerreg-server\",\n+  \"version\": \"0.0.0\",\n+  \"private\": true,\n+  \"scripts\": {\n+    \"start\": \"node bin/www\"\n+  },\n+  \"dependencies\": {\n+    \"body-parser\": \"^1.18.3\",\n+    \"cookie-parser\": \"~1.4.4\",\n+    \"cors\": \"^2.8.5\",\n+    \"debug\": \"~2.6.9\",\n+    \"express\": \"~4.16.1\",\n+    \"fabric-network\": \"^2.2.5\",\n+    \"http-errors\": \"~1.6.3\",\n+    \"jade\": \"~1.11.0\",\n+    \"morgan\": \"~1.9.1\"\n+  }\n+}"
},
{
"sha":"9453385b9916ce9bc5e88d2f5d8cd8a554223590",
"filename":"backend/public/stylesheets/style.css",
"status":"added",
"additions":8,
"deletions":0,
"changes":8,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/public/stylesheets/style.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/public/stylesheets/style.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/public/stylesheets/style.css?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,8 @@\n+body {\n+  padding: 50px;\n+  font: 14px \"Lucida Grande\", Helvetica, Arial, sans-serif;\n+}\n+\n+a {\n+  color: #00B7FF;\n+}"
},
{
"sha":"196969f29598dc9659762465dfa72997cc26a531",
"filename":"backend/routes/controller.js",
"status":"added",
"additions":39,
"deletions":0,
"changes":39,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,39 @@\n+'use strict';\n+\n+var express = require('express');\n+const router = express.Router();\n+const connector = require('../endpoint/mapping')\n+\n+router.get('/all', async function(req, res, next) {\n+    const result = await connector.getAllControllers()\n+    res.json(result); \n+});\n+\n+router.post('/register', async function(req, res, next) {\n+    //let queryObj = req.query;\n+    const result = await connector.registerController(req.body.controllerName, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n+    res.json(result); \n+});\n+\n+router.post('/update', async (req, res, next) => {\n+    const result = await connector.updateController(req.body.controllerID, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n+    res.json(result); \n+});\n+\n+router.post('/change', async (req, res, next) => {\n+    const result = await connector.changeController(req.body.deviceID, req.body.newControllerID);\n+    res.json(result); \n+});\n+\n+router.post('/assign', async (req, res, next) => {\n+    const result = await connector.assignController(req.body.deviceID, req.body.controllerID);\n+    res.json(result); \n+});\n+\n+router.get('/devices', async (req, res, next) => {\n+    const result = await connector.getControllerDevices(req.body.id);\n+    res.json(result); \n+});\n+\n+\n+module.exports = router;"
},
{
"sha":"4c4bfe417f267d650486553c2ef60fe312e9b139",
"filename":"backend/routes/device.js",
"status":"added",
"additions":46,
"deletions":0,
"changes":46,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,46 @@\n+'use strict';\n+\n+var express = require('express');\n+var router = express.Router();\n+const connector = require('../endpoint/mapping')\n+\n+/* GET query listing. */\n+router.get('/all', async function(req, res, next) {\n+    const result = await connector.getAllDevices();\n+    res.json(result); \n+});\n+\n+router.get('/id', async function(req, res, next) {\n+    //let queryObj = req.query;\n+    const result = await connector.getDevice(req.body.deviceId);\n+    res.json(result); \n+});\n+\n+router.post('/update', async function(req, res, next) {\n+    const result = await connector.updateDevice(req.body.deviceId, req.body.currentTemp);\n+    res.json(result); \n+});\n+\n+router.post('/updateStatus', async function(req, res, next) {\n+    const result = await connector.updateDeviceStatus(req.body.deviceId);\n+    res.json(result); \n+});\n+\n+router.get('/controller', async function(req, res, next) {\n+    const result = await connector.getDeviceController(req.body.deviceID);\n+    res.json(result); \n+});\n+\n+router.post('/register', async function(req, res, next) {\n+    const result = await connector.registerDevice(req.body.brand, req.body.model, req.body.mac, req.body.powerType, req.body.location.long, req.body.location.lat);\n+    res.json(result); \n+});\n+\n+router.post('/executeCommand', async function(req, res, next) {\n+    const result = await connector.executeDeviceCommand(req.body.deviceID, req.body.command);\n+    res.json(result); \n+});\n+\n+\n+\n+module.exports = router;\n\\ No newline at end of file"
},
{
"sha":"ecca96a56b309a315ddf6399155fd2f953031d3b",
"filename":"backend/routes/index.js",
"status":"added",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/routes/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/routes/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/index.js?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,9 @@\n+var express = require('express');\n+var router = express.Router();\n+\n+/* GET home page. */\n+router.get('/', function(req, res, next) {\n+  res.render('index', { title: 'Express' });\n+});\n+\n+module.exports = router;"
},
{
"sha":"623e4302bee32ccc080d1c83ee2e55a426c9bac8",
"filename":"backend/routes/users.js",
"status":"added",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/routes/users.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/routes/users.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/users.js?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,9 @@\n+var express = require('express');\n+var router = express.Router();\n+\n+/* GET users listing. */\n+router.get('/', function(req, res, next) {\n+  res.send('respond with a resource');\n+});\n+\n+module.exports = router;"
},
{
"sha":"51ec12c6a26323d9f5bc51fb98cb1324a739ea4c",
"filename":"backend/views/error.jade",
"status":"added",
"additions":6,
"deletions":0,
"changes":6,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/views/error.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/views/error.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/error.jade?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,6 @@\n+extends layout\n+\n+block content\n+  h1= message\n+  h2= error.status\n+  pre #{error.stack}"
},
{
"sha":"3d63b9a044a859b59259d5e23dd4e68ec8e1f2be",
"filename":"backend/views/index.jade",
"status":"added",
"additions":5,
"deletions":0,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/views/index.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/views/index.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/index.jade?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,5 @@\n+extends layout\n+\n+block content\n+  h1= title\n+  p Welcome to #{title}"
},
{
"sha":"15af079bf7c34e638ba14844efd979ac9111628b",
"filename":"backend/views/layout.jade",
"status":"added",
"additions":7,
"deletions":0,
"changes":7,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/backend/views/layout.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/backend/views/layout.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/layout.jade?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,7 @@\n+doctype html\n+html\n+  head\n+    title= title\n+    link(rel='stylesheet', href='/stylesheets/style.css')\n+  body\n+    block content"
},
{
"sha":"0dca627e1d5f360813bc0a97a77e64a33d4d4537",
"filename":"chaincode/.gitignore",
"status":"added",
"additions":96,
"deletions":0,
"changes":96,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/.gitignore?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,96 @@\n+# Emacs backup files\n+*~\n+*#\n+.#*\n+# Vim file artifacts\n+.*.sw*\n+# installed platform-specific binaries\n+/backend/bin\n+/config\n+.DS_Store\n+.project\n+# omit Go vendor directories\n+vendor/\n+.vscode\n+.gradle\n+.idea\n+# Dependency directories\n+node_modules/\n+# Ignore Gradle build output directory\n+build\n+package-lock.json\n+\n+# Logs\n+logs\n+*.log\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\n+*.pid.lock\n+\n+# Directory for instrumented libs generated by jscoverage/JSCover\n+lib-cov\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+\n+# nyc test coverage\n+.nyc_output\n+\n+# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n+.grunt\n+\n+# Bower dependency directory (https://bower.io/)\n+bower_components\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Compiled binary addons (https://nodejs.org/api/addons.html)\n+build/Release\n+\n+# Dependency directories\n+node_modules/\n+jspm_packages/\n+\n+# TypeScript v1 declaration files\n+typings/\n+\n+# Optional npm cache directory\n+.npm\n+\n+# Optional eslint cache\n+.eslintcache\n+\n+# Optional REPL history\n+.node_repl_history\n+\n+# Output of 'npm pack'\n+*.tgz\n+\n+# Yarn Integrity file\n+.yarn-integrity\n+\n+# dotenv environment variables file\n+.env\n+\n+# parcel-bundler cache (https://parceljs.org/)\n+.cache\n+\n+# next.js build output\n+.next\n+\n+# nuxt.js build output\n+.nuxt\n+\n+# vuepress build output\n+.vuepress/dist\n+\n+# Serverless directories\n+.serverless\n+"
},
{
"sha":"3de88baa9aebba42da4880518f28de80780bc9fe",
"filename":"chaincode/index.js",
"status":"added",
"additions":10,
"deletions":0,
"changes":10,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/index.js?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,10 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const ControllerDeviceContract = require('./lib/controller-device-contract');\n+\n+module.exports.ControllerDeviceContract = ControllerDeviceContract;\n+module.exports.contracts = [ ControllerDeviceContract ];"
},
{
"sha":"5be29180402540f8b1cf369551936cc6cd9e00b9",
"filename":"chaincode/lib/controller-device-contract.js",
"status":"added",
"additions":298,
"deletions":0,
"changes":298,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/lib/controller-device-contract.js?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,298 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const { Contract } = require('fabric-contract-api');\n+\n+class ControllerDeviceContract extends Contract {\n+\n+    controllerID = 0;\n+    deviceID = 0;\n+\n+    /*\n+        It is required for initial testing, it can be removed after UI is available.\n+    */\n+    async initLedger(ctx) {\n+        console.info('============= START : Initialize Ledger ===========');\n+\n+        \n+        const controller = {};\n+        const device = {};\n+\n+        await ctx.stub.putState(0, Buffer.from(JSON.stringify(controller)));\n+        await ctx.stub.putState(0, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Initialize Ledger ===========');\n+    }\n+\n+    async getAllControllers(ctx) {\n+        console.info('============= START : Get All Controllers ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"controller\"\n+            }\n+        };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Controllers ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n+    async registerController(ctx, controllerName, serviceProvider, long, lat) {\n+        console.info('============= START : Register Controller ===========');\n+\n+        this.controllerID++;\n+        const recControllerID = \"CONTR-\" + this.controllerID;\n+        console.log(\"this.controllerID = \" + this.controllerID);\n+\n+        const controller = {\n+            controllerID: recControllerID,\n+            docType: \"controller\",\n+            controllerName: controllerName,\n+            location: { \n+                long: long,\n+                lat: lat\n+            },\n+            serviceProvider: serviceProvider\n+        };\n+\n+        await ctx.stub.putState(recControllerID, Buffer.from(JSON.stringify(controller)));\n+        console.info('============= END : Register Controller ===========');\n+    }\n+\n+    async updateController(ctx, controllerID, serviceProvider, long, lat) {\n+        console.info('============= START : Update Controller ===========');\n+\n+        const controllerAsBytes = await ctx.stub.getState(controllerID); // get the controller from chaincode state\n+        if (!controllerAsBytes || controllerAsBytes.length === 0) {\n+            throw new Error(`${controllerID} does not exist`);\n+        }\n+\n+        const controller = JSON.parse(controllerAsBytes.toString());\n+        controller.serviceProvider = serviceProvider;\n+        controller.location.long = long;\n+        controller.location.lat = lat;\n+        \n+        await ctx.stub.putState(controllerID, Buffer.from(JSON.stringify(controller)));\n+        console.info('============= END : Update Controller ===========');\n+    }\n+\n+    async assignController(ctx, deviceID, controllerID) {\n+        console.info('============= START : Assign Controller ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.controllerID = controllerID;\n+        \n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Assign Controller ===========');\n+    }\n+\n+    async changeController(ctx, deviceID, newControllerID) {\n+        console.info('============= START : Change Controller ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.controllerID = newControllerID;\n+        \n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Change Controller ===========');\n+    }\n+\n+    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n+        console.info('============= START : Register Device ===========');\n+\n+        this.deviceID++;\n+        const recDeviceID = \"DEV-\" + this.deviceID;\n+        console.log(\"this.deviceID = \" + this.deviceID);\n+\n+        const device = {\n+            deviceID: recDeviceID,\n+            docType: \"device\",\n+            brand: brand,\n+            model: model,\n+            macAddress: MAC,\n+            powerType: powerType,\n+            inUse: false,\n+            location: { \n+                long: long,\n+                lat: lat\n+            }\n+        };\n+\n+        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Register Device ===========');\n+    }\n+\n+    async getDeviceController(ctx, deviceID) {\n+        console.info('============= START : Get Device Controller ===========');\n+\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+\n+        console.info('============= END : Get Device Controller ===========');\n+\n+        return device.controllerID;        \n+    }\n+\n+    async executeDeviceCommand(ctx, deviceID, command) {\n+        console.info('============= START : Execute Device Command ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.lastExecCommand = command;\n+        device.lastExecDateTime = new Date().getTime();\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Execute Device Command ===========');\n+    }\n+\n+    /*\n+    async getDeviceLogs(ctx, deviceID) {\n+        console.info('============= START : Get Device Logs ===========');\n+        console.info('============= END : Get Device Logs ===========');\n+    }\n+    */\n+\n+    async getControllerDevices(ctx, controllerID) {\n+        console.info('============= START : Get Controller Devices ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\": \"device\", \n+                \"controllerID\": controllerID\n+            }\n+       };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+          \n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get Controller Devices ===========');\n+        return allResults;\n+    }\n+\n+    async getDevice(ctx, deviceID) {\n+        console.info('============= START : Get Device ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        console.info('============= END : Get Device ===========');\n+        return JSON.parse(deviceAsBytes.toString());\n+    }\n+\n+    async getAllDevices(ctx) {\n+        console.info('============= START : Get All Devices ===========');\n+\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"device\"\n+            }\n+        };\n+\n+        const allResults = [];\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Devices ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n+    async updateDevice(ctx, deviceID, currentTemp) {\n+        console.info('============= START : Update Device ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.currentTemp = currentTemp;\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Update Device ===========');        \n+    }\n+\n+    async updateDeviceStatus(ctx, deviceID) {\n+        console.info('============= START : Update Device Status ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.inUse ? device.inUse = false : device.inUse = true;\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Update Device Status ===========');\n+    }\n+}\n+\n+module.exports = ControllerDeviceContract;"
},
{
"sha":"fd2d4fe2ce216120428499c4bd6f2f108e0feedd",
"filename":"chaincode/package.json",
"status":"added",
"additions":50,
"deletions":0,
"changes":50,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/package.json?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,50 @@\n+{\n+  \"name\": \"EVChargerReg\",\n+  \"version\": \"0.0.0\",\n+  \"description\": \"My Smart Contract\",\n+  \"main\": \"index.js\",\n+  \"engines\": {\n+    \"node\": \">=8\",\n+    \"npm\": \">=5\"\n+  },\n+  \"scripts\": {\n+    \"lint\": \"eslint .\",\n+    \"pretest\": \"npm run lint\",\n+    \"test\": \"nyc mocha --recursive\",\n+    \"start\": \"fabric-chaincode-node start\"\n+  },\n+  \"engineStrict\": true,\n+  \"author\": \"John Doe\",\n+  \"license\": \"Apache-2.0\",\n+  \"dependencies\": {\n+    \"fabric-contract-api\": \"^2.2.0\",\n+    \"fabric-shim\": \"^2.2.0\"\n+  },\n+  \"devDependencies\": {\n+    \"chai\": \"^4.2.0\",\n+    \"chai-as-promised\": \"^7.1.1\",\n+    \"eslint\": \"^6.8.0\",\n+    \"mocha\": \"^7.1.1\",\n+    \"nyc\": \"^15.0.0\",\n+    \"sinon\": \"^9.0.1\",\n+    \"sinon-chai\": \"^3.5.0\",\n+    \"winston\": \"^3.2.1\"\n+  },\n+  \"nyc\": {\n+    \"exclude\": [\n+      \".eslintrc.js\",\n+      \"coverage/**\",\n+      \"test/**\"\n+    ],\n+    \"reporter\": [\n+      \"text-summary\",\n+      \"html\"\n+    ],\n+    \"all\": true,\n+    \"check-coverage\": true,\n+    \"statements\": 100,\n+    \"branches\": 100,\n+    \"functions\": 100,\n+    \"lines\": 100\n+  }\n+}"
},
{
"sha":"8ff35d20d93d070ced35c1f24b6fc905fff1a7d5",
"filename":"chaincode/test/controller-device-contract.js",
"status":"added",
"additions":108,
"deletions":0,
"changes":108,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/test/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/test/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/test/controller-device-contract.js?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,108 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const { ChaincodeStub, ClientIdentity } = require('fabric-shim');\n+const { ControllerDeviceContract } = require('..');\n+const winston = require('winston');\n+\n+const chai = require('chai');\n+const chaiAsPromised = require('chai-as-promised');\n+const sinon = require('sinon');\n+const sinonChai = require('sinon-chai');\n+\n+chai.should();\n+chai.use(chaiAsPromised);\n+chai.use(sinonChai);\n+\n+class TestContext {\n+\n+    constructor() {\n+        this.stub = sinon.createStubInstance(ChaincodeStub);\n+        this.clientIdentity = sinon.createStubInstance(ClientIdentity);\n+        this.logger = {\n+            getLogger: sinon.stub().returns(sinon.createStubInstance(winston.createLogger().constructor)),\n+            setLevel: sinon.stub(),\n+        };\n+    }\n+\n+}\n+\n+describe('ControllerDeviceContract', () => {\n+\n+    let contract;\n+    let ctx;\n+\n+    beforeEach(() => {\n+        contract = new ControllerDeviceContract();\n+        ctx = new TestContext();\n+        ctx.stub.getState.withArgs('1001').resolves(Buffer.from('{\"value\":\"controller device 1001 value\"}'));\n+        ctx.stub.getState.withArgs('1002').resolves(Buffer.from('{\"value\":\"controller device 1002 value\"}'));\n+    });\n+\n+    describe('#controllerDeviceExists', () => {\n+\n+        it('should return true for a controller device', async () => {\n+            await contract.controllerDeviceExists(ctx, '1001').should.eventually.be.true;\n+        });\n+\n+        it('should return false for a controller device that does not exist', async () => {\n+            await contract.controllerDeviceExists(ctx, '1003').should.eventually.be.false;\n+        });\n+\n+    });\n+\n+    describe('#createControllerDevice', () => {\n+\n+        it('should create a controller device', async () => {\n+            await contract.createControllerDevice(ctx, '1003', 'controller device 1003 value');\n+            ctx.stub.putState.should.have.been.calledOnceWithExactly('1003', Buffer.from('{\"value\":\"controller device 1003 value\"}'));\n+        });\n+\n+        it('should throw an error for a controller device that already exists', async () => {\n+            await contract.createControllerDevice(ctx, '1001', 'myvalue').should.be.rejectedWith(/The controller device 1001 already exists/);\n+        });\n+\n+    });\n+\n+    describe('#readControllerDevice', () => {\n+\n+        it('should return a controller device', async () => {\n+            await contract.readControllerDevice(ctx, '1001').should.eventually.deep.equal({ value: 'controller device 1001 value' });\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.readControllerDevice(ctx, '1003').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+    describe('#updateControllerDevice', () => {\n+\n+        it('should update a controller device', async () => {\n+            await contract.updateControllerDevice(ctx, '1001', 'controller device 1001 new value');\n+            ctx.stub.putState.should.have.been.calledOnceWithExactly('1001', Buffer.from('{\"value\":\"controller device 1001 new value\"}'));\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.updateControllerDevice(ctx, '1003', 'controller device 1003 new value').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+    describe('#deleteControllerDevice', () => {\n+\n+        it('should delete a controller device', async () => {\n+            await contract.deleteControllerDevice(ctx, '1001');\n+            ctx.stub.deleteState.should.have.been.calledOnceWithExactly('1001');\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.deleteControllerDevice(ctx, '1003').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+});"
},
{
"sha":"2df2cf37af0afd79833c5cc6dfa3f80f6a26a0f4",
"filename":"chaincode/transaction_data/controller-device-transactions.txdata",
"status":"added",
"additions":44,
"deletions":0,
"changes":44,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/transaction_data/controller-device-transactions.txdata",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/e6475c2475fbed091a1519b803980ef27856ff97/chaincode/transaction_data/controller-device-transactions.txdata",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/transaction_data/controller-device-transactions.txdata?ref=e6475c2475fbed091a1519b803980ef27856ff97",
"patch":"@@ -0,0 +1,44 @@\n+[\n+    {\n+        \"transactionName\": \"controllerDeviceExists\",\n+        \"transactionLabel\": \"A test controllerDeviceExists transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"createControllerDevice\",\n+        \"transactionLabel\": \"A test createControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\",\n+            \"some value\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"readControllerDevice\",\n+        \"transactionLabel\": \"A test readControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"updateControllerDevice\",\n+        \"transactionLabel\": \"A test updateControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\",\n+            \"some other value\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"deleteControllerDevice\",\n+        \"transactionLabel\": \"A test deleteControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    }\n+]"
}
]
},
{
"commit_sha":"822323cc37f5e8b5b07a13a739e7ee368145e4ff",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjgyMjMyM2NjMzdmNWU4YjViMDdhMTNhNzM5ZTdlZTM2ODE0NWU0ZmY=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/822323cc37f5e8b5b07a13a739e7ee368145e4ff",
"commit_date":"2021-03-05T03:04:37Z",
"files":[
{
"sha":"7c3ae381ad64942fd5739c0093785d59013fd2fd",
"filename":"backend/app.js",
"status":"modified",
"additions":3,
"deletions":0,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/822323cc37f5e8b5b07a13a739e7ee368145e4ff/backend/app.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/822323cc37f5e8b5b07a13a739e7ee368145e4ff/backend/app.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/app.js?ref=822323cc37f5e8b5b07a13a739e7ee368145e4ff",
"patch":"@@ -4,6 +4,8 @@ var path = require('path');\n var cookieParser = require('cookie-parser');\n var logger = require('morgan');\n const bodyParser = require('body-parser');\n+var cors = require('cors');\n+\n \n var controllerRouter = require('./routes/controller');\n var deviceRouter = require('./routes/device');\n@@ -15,6 +17,7 @@ var app = express();\n \n app.use(bodyParser.urlencoded());\n app.use(bodyParser.json());\n+app.use(cors());\n \n // view engine setup\n app.set('views', path.join(__dirname, 'views'));"
},
{
"sha":"80e655765d68d1346b595cf65e185b7ab1e9cb57",
"filename":"backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"status":"removed",
"additions":0,
"deletions":43,
"changes":43,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/595cfb0823a7363cab05ac61cbb70fc21d5ae7f7/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/595cfb0823a7363cab05ac61cbb70fc21d5ae7f7/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json?ref=595cfb0823a7363cab05ac61cbb70fc21d5ae7f7",
"patch":"@@ -1,43 +0,0 @@\n-{\n-    \"certificateAuthorities\": {\n-        \"org1ca-api.127-0-0-1.nip.io:8080\": {\n-            \"url\": \"http://org1ca-api.127-0-0-1.nip.io:8080\"\n-        }\n-    },\n-    \"client\": {\n-        \"connection\": {\n-            \"timeout\": {\n-                \"orderer\": \"300\",\n-                \"peer\": {\n-                    \"endorser\": \"300\"\n-                }\n-            }\n-        },\n-        \"organization\": \"Org1\"\n-    },\n-    \"display_name\": \"Org1 Gateway\",\n-    \"id\": \"org1gateway\",\n-    \"name\": \"Org1 Gateway\",\n-    \"organizations\": {\n-        \"Org1\": {\n-            \"certificateAuthorities\": [\n-                \"org1ca-api.127-0-0-1.nip.io:8080\"\n-            ],\n-            \"mspid\": \"Org1MSP\",\n-            \"peers\": [\n-                \"org1peer-api.127-0-0-1.nip.io:8080\"\n-            ]\n-        }\n-    },\n-    \"peers\": {\n-        \"org1peer-api.127-0-0-1.nip.io:8080\": {\n-            \"grpcOptions\": {\n-                \"grpc.default_authority\": \"org1peer-api.127-0-0-1.nip.io:8080\",\n-                \"grpc.ssl_target_name_override\": \"org1peer-api.127-0-0-1.nip.io:8080\"\n-            },\n-            \"url\": \"grpc://org1peer-api.127-0-0-1.nip.io:8080\"\n-        }\n-    },\n-    \"type\": \"gateway\",\n-    \"version\": \"1.0\"\n-}\n\\ No newline at end of file"
},
{
"sha":"f12c307f830456a8cb7694521833195ce507d725",
"filename":"backend/package.json",
"status":"modified",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/822323cc37f5e8b5b07a13a739e7ee368145e4ff/backend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/822323cc37f5e8b5b07a13a739e7ee368145e4ff/backend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/package.json?ref=822323cc37f5e8b5b07a13a739e7ee368145e4ff",
"patch":"@@ -8,6 +8,7 @@\n   \"dependencies\": {\n     \"body-parser\": \"^1.18.3\",\n     \"cookie-parser\": \"~1.4.4\",\n+    \"cors\": \"^2.8.5\",\n     \"debug\": \"~2.6.9\",\n     \"express\": \"~4.16.1\",\n     \"fabric-network\": \"^2.2.5\","
},
{
"sha":"2aec6bf217bf8be5335e02d4fdb27231da85fe53",
"filename":"backend/wallet/Org1/Org1 Admin.id",
"status":"removed",
"additions":0,
"deletions":1,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/595cfb0823a7363cab05ac61cbb70fc21d5ae7f7/backend/wallet/Org1/Org1%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/595cfb0823a7363cab05ac61cbb70fc21d5ae7f7/backend/wallet/Org1/Org1%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20Admin.id?ref=595cfb0823a7363cab05ac61cbb70fc21d5ae7f7",
"patch":"@@ -1 +0,0 @@\n-{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIB0DCCAXWgAwIBAgIRAMfwyyBZRHY/+8kU7S64eiIwCgYIKoZIzj0EAwIwEjEQ\\nMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDQxODQzMjVaFw0zMTAzMDIxODQzMjVa\\nMCUxDjAMBgNVBAsTBWFkbWluMRMwEQYDVQQDEwpPcmcxIEFkbWluMFkwEwYHKoZI\\nzj0CAQYIKoZIzj0DAQcDQgAE5jSXBBkZw5SS2BzGnkkfULX3GPDeoURRVUkEz22s\\no3Oi6KZRPX84pqpRYssPUga3iViGhkVWXcVMse3wKtvGAKOBmDCBlTAOBgNVHQ8B\\nAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMAwGA1UdEwEB\\n/wQCMAAwKQYDVR0OBCIEIHRtll2g+cm0cuIROgRXRSe/+KqYHWL5oPeK9M+eMyyp\\nMCsGA1UdIwQkMCKAIFihXMpnmacRSAmeYJRaGl5f2Qw6u1tBnSqqRP27zU/sMAoG\\nCCqGSM49BAMCA0kAMEYCIQDv6/R7BlT0FtqtK0FCU/a1EHFcJRhr57eIz5AKLQU0\\nHQIhALzEoL4GC+h5RYK6Mu+1ARdiPXlgZLejWfwPLEkqgIob\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgHCG/ewcnzwPZSPI9\\nfetXeF2fI0jm3e6h4BfhPoa44DihRANCAATmNJcEGRnDlJLYHMaeSR9QtfcY8N6h\\nRFFVSQTPbayjc6LoplE9fzimqlFiyw9SBreJWIaGRVZdxUyx7fAq28YA\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"be7f43ca40d1072ee9cc8eedf0173483e045b7f9",
"filename":"backend/wallet/Org1/Org1 CA Admin.id",
"status":"removed",
"additions":0,
"deletions":1,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/595cfb0823a7363cab05ac61cbb70fc21d5ae7f7/backend/wallet/Org1/Org1%20CA%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/595cfb0823a7363cab05ac61cbb70fc21d5ae7f7/backend/wallet/Org1/Org1%20CA%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20CA%20Admin.id?ref=595cfb0823a7363cab05ac61cbb70fc21d5ae7f7",
"patch":"@@ -1 +0,0 @@\n-{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBoDCCAUegAwIBAgIUalVtUAjS6tMOAZNadOydjpHUtHYwCgYIKoZIzj0EAwIw\\nEjEQMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDQxODQ0MDBaFw0yMjAzMDQxODQ5\\nMDBaMCExDzANBgNVBAsTBmNsaWVudDEOMAwGA1UEAxMFYWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAQ5jA5EgIvgL/2FbcDO28EQbho4+dCTeg2KtJ6KBBms\\nLFi1ZMAlExibVkbp5oR5DsF2oD/+WshMe12LE6UIIwaYo2wwajAOBgNVHQ8BAf8E\\nBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUrpVoenb3myDu9y8DEAasstnQ\\nEMIwKwYDVR0jBCQwIoAgWKFcymeZpxFICZ5glFoaXl/ZDDq7W0GdKqpE/bvNT+ww\\nCgYIKoZIzj0EAwIDRwAwRAIgLl2u46vUy+PgZNRzLfevdOk5bNomw5FZ0s8lHf4/\\n+acCIHLoAyGGHuUbrfWNt9kfqm2hKQ+RBftHenWL9LR+M25l\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgrawGDD0G9t+iJkuC\\nH6vux5BOtuhbk/GOyPg44YnltpWhRANCAAQ5jA5EgIvgL/2FbcDO28EQbho4+dCT\\neg2KtJ6KBBmsLFi1ZMAlExibVkbp5oR5DsF2oD/+WshMe12LE6UIIwaY\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
}
]
},
{
"commit_sha":"284b90de22e5751d15e33d4a8eaa7b58cc6ab7f1",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjI4NGI5MGRlMjJlNTc1MWQxNWUzM2Q0YThlYWE3YjU4Y2M2YWI3ZjE=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/284b90de22e5751d15e33d4a8eaa7b58cc6ab7f1",
"commit_date":"2021-03-05T02:59:13Z",
"files":[
{
"sha":"02aac3f6ea17c461434c5f5e4aaf24d7f14d183e",
"filename":"README.md",
"status":"removed",
"additions":0,
"deletions":70,
"changes":70,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,70 +0,0 @@\n-# Getting Started with Create React App\n-\n-This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n-\n-## Available Scripts\n-\n-In the project directory, you can run:\n-\n-### `yarn start`\n-\n-Runs the app in the development mode.\\\n-Open [http://localhost:3000](http://localhost:3000) to view it in the browser.\n-\n-The page will reload if you make edits.\\\n-You will also see any lint errors in the console.\n-\n-### `yarn test`\n-\n-Launches the test runner in the interactive watch mode.\\\n-See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n-\n-### `yarn build`\n-\n-Builds the app for production to the `build` folder.\\\n-It correctly bundles React in production mode and optimizes the build for the best performance.\n-\n-The build is minified and the filenames include the hashes.\\\n-Your app is ready to be deployed!\n-\n-See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n-\n-### `yarn eject`\n-\n-**Note: this is a one-way operation. Once you `eject`, you can\u2019t go back!**\n-\n-If you aren\u2019t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n-\n-Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you\u2019re on your own.\n-\n-You don\u2019t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn\u2019t feel obligated to use this feature. However we understand that this tool wouldn\u2019t be useful if you couldn\u2019t customize it when you are ready for it.\n-\n-## Learn More\n-\n-You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n-\n-To learn React, check out the [React documentation](https://reactjs.org/).\n-\n-### Code Splitting\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)\n-\n-### Analyzing the Bundle Size\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)\n-\n-### Making a Progressive Web App\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)\n-\n-### Advanced Configuration\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)\n-\n-### Deployment\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)\n-\n-### `yarn build` fails to minify\n-\n-This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)"
},
{
"sha":"32dd45d1c7f7928c8a3d03158afea3f7b92cbe4c",
"filename":"package.json",
"status":"removed",
"additions":0,
"deletions":38,
"changes":38,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/package.json?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,38 +0,0 @@\n-{\n-  \"name\": \"front-end\",\n-  \"version\": \"0.1.0\",\n-  \"private\": true,\n-  \"dependencies\": {\n-    \"@testing-library/jest-dom\": \"^5.11.4\",\n-    \"@testing-library/react\": \"^11.1.0\",\n-    \"@testing-library/user-event\": \"^12.1.10\",\n-    \"react\": \"^17.0.1\",\n-    \"react-dom\": \"^17.0.1\",\n-    \"react-scripts\": \"4.0.3\",\n-    \"web-vitals\": \"^1.0.1\"\n-  },\n-  \"scripts\": {\n-    \"start\": \"react-scripts start\",\n-    \"build\": \"react-scripts build\",\n-    \"test\": \"react-scripts test\",\n-    \"eject\": \"react-scripts eject\"\n-  },\n-  \"eslintConfig\": {\n-    \"extends\": [\n-      \"react-app\",\n-      \"react-app/jest\"\n-    ]\n-  },\n-  \"browserslist\": {\n-    \"production\": [\n-      \">0.2%\",\n-      \"not dead\",\n-      \"not op_mini all\"\n-    ],\n-    \"development\": [\n-      \"last 1 chrome version\",\n-      \"last 1 firefox version\",\n-      \"last 1 safari version\"\n-    ]\n-  }\n-}"
},
{
"sha":"a11777cc471a4344702741ab1c8a588998b1311a",
"filename":"public/favicon.ico",
"status":"removed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/favicon.ico",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/favicon.ico",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/favicon.ico?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87"
},
{
"sha":"aa069f27cbd9d53394428171c3989fd03db73c76",
"filename":"public/index.html",
"status":"removed",
"additions":0,
"deletions":43,
"changes":43,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/index.html",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/index.html",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/index.html?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,43 +0,0 @@\n-<!DOCTYPE html>\n-<html lang=\"en\">\n-  <head>\n-    <meta charset=\"utf-8\" />\n-    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n-    <meta name=\"theme-color\" content=\"#000000\" />\n-    <meta\n-      name=\"description\"\n-      content=\"Web site created using create-react-app\"\n-    />\n-    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n-    <!--\n-      manifest.json provides metadata used when your web app is installed on a\n-      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n-    -->\n-    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n-    <!--\n-      Notice the use of %PUBLIC_URL% in the tags above.\n-      It will be replaced with the URL of the `public` folder during the build.\n-      Only files inside the `public` folder can be referenced from the HTML.\n-\n-      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n-      work correctly both with client-side routing and a non-root public URL.\n-      Learn how to configure a non-root public URL by running `npm run build`.\n-    -->\n-    <title>React App</title>\n-  </head>\n-  <body>\n-    <noscript>You need to enable JavaScript to run this app.</noscript>\n-    <div id=\"root\"></div>\n-    <!--\n-      This HTML file is a template.\n-      If you open it directly in the browser, you will see an empty page.\n-\n-      You can add webfonts, meta tags, or analytics to this file.\n-      The build step will place the bundled scripts into the <body> tag.\n-\n-      To begin the development, run `npm start` or `yarn start`.\n-      To create a production bundle, use `npm run build` or `yarn build`.\n-    -->\n-  </body>\n-</html>"
},
{
"sha":"fc44b0a3796c0e0a64c3d858ca038bd4570465d9",
"filename":"public/logo192.png",
"status":"removed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/logo192.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/logo192.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/logo192.png?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87"
},
{
"sha":"a4e47a6545bc15971f8f63fba70e4013df88a664",
"filename":"public/logo512.png",
"status":"removed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/logo512.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/logo512.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/logo512.png?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87"
},
{
"sha":"080d6c77ac21bb2ef88a6992b2b73ad93daaca92",
"filename":"public/manifest.json",
"status":"removed",
"additions":0,
"deletions":25,
"changes":25,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/manifest.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/manifest.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/manifest.json?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,25 +0,0 @@\n-{\n-  \"short_name\": \"React App\",\n-  \"name\": \"Create React App Sample\",\n-  \"icons\": [\n-    {\n-      \"src\": \"favicon.ico\",\n-      \"sizes\": \"64x64 32x32 24x24 16x16\",\n-      \"type\": \"image/x-icon\"\n-    },\n-    {\n-      \"src\": \"logo192.png\",\n-      \"type\": \"image/png\",\n-      \"sizes\": \"192x192\"\n-    },\n-    {\n-      \"src\": \"logo512.png\",\n-      \"type\": \"image/png\",\n-      \"sizes\": \"512x512\"\n-    }\n-  ],\n-  \"start_url\": \".\",\n-  \"display\": \"standalone\",\n-  \"theme_color\": \"#000000\",\n-  \"background_color\": \"#ffffff\"\n-}"
},
{
"sha":"e9e57dc4d41b9b46e05112e9f45b7ea6ac0ba15e",
"filename":"public/robots.txt",
"status":"removed",
"additions":0,
"deletions":3,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/robots.txt",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/public/robots.txt",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/robots.txt?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,3 +0,0 @@\n-# https://www.robotstxt.org/robotstxt.html\n-User-agent: *\n-Disallow:"
},
{
"sha":"74b5e053450a48a6bdb4d71aad648e7af821975c",
"filename":"src/App.css",
"status":"removed",
"additions":0,
"deletions":38,
"changes":38,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/App.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/App.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/App.css?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,38 +0,0 @@\n-.App {\n-  text-align: center;\n-}\n-\n-.App-logo {\n-  height: 40vmin;\n-  pointer-events: none;\n-}\n-\n-@media (prefers-reduced-motion: no-preference) {\n-  .App-logo {\n-    animation: App-logo-spin infinite 20s linear;\n-  }\n-}\n-\n-.App-header {\n-  background-color: #282c34;\n-  min-height: 100vh;\n-  display: flex;\n-  flex-direction: column;\n-  align-items: center;\n-  justify-content: center;\n-  font-size: calc(10px + 2vmin);\n-  color: white;\n-}\n-\n-.App-link {\n-  color: #61dafb;\n-}\n-\n-@keyframes App-logo-spin {\n-  from {\n-    transform: rotate(0deg);\n-  }\n-  to {\n-    transform: rotate(360deg);\n-  }\n-}"
},
{
"sha":"37845757234ccb68531c10cf7a2ffc589c47e342",
"filename":"src/App.js",
"status":"removed",
"additions":0,
"deletions":25,
"changes":25,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/App.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/App.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/App.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,25 +0,0 @@\n-import logo from './logo.svg';\n-import './App.css';\n-\n-function App() {\n-  return (\n-    <div className=\"App\">\n-      <header className=\"App-header\">\n-        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n-        <p>\n-          Edit <code>src/App.js</code> and save to reload.\n-        </p>\n-        <a\n-          className=\"App-link\"\n-          href=\"https://reactjs.org\"\n-          target=\"_blank\"\n-          rel=\"noopener noreferrer\"\n-        >\n-          Learn React\n-        </a>\n-      </header>\n-    </div>\n-  );\n-}\n-\n-export default App;"
},
{
"sha":"1f03afeece5ac28064fa3c73a29215037465f789",
"filename":"src/App.test.js",
"status":"removed",
"additions":0,
"deletions":8,
"changes":8,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/App.test.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/App.test.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/App.test.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,8 +0,0 @@\n-import { render, screen } from '@testing-library/react';\n-import App from './App';\n-\n-test('renders learn react link', () => {\n-  render(<App />);\n-  const linkElement = screen.getByText(/learn react/i);\n-  expect(linkElement).toBeInTheDocument();\n-});"
},
{
"sha":"ec2585e8c0bb8188184ed1e0703c4c8f2a8419b0",
"filename":"src/index.css",
"status":"removed",
"additions":0,
"deletions":13,
"changes":13,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/index.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/index.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/index.css?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,13 +0,0 @@\n-body {\n-  margin: 0;\n-  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n-    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n-    sans-serif;\n-  -webkit-font-smoothing: antialiased;\n-  -moz-osx-font-smoothing: grayscale;\n-}\n-\n-code {\n-  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n-    monospace;\n-}"
},
{
"sha":"ef2edf8ea3fc42258464231e29140c8723458c1e",
"filename":"src/index.js",
"status":"removed",
"additions":0,
"deletions":17,
"changes":17,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/index.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,17 +0,0 @@\n-import React from 'react';\n-import ReactDOM from 'react-dom';\n-import './index.css';\n-import App from './App';\n-import reportWebVitals from './reportWebVitals';\n-\n-ReactDOM.render(\n-  <React.StrictMode>\n-    <App />\n-  </React.StrictMode>,\n-  document.getElementById('root')\n-);\n-\n-// If you want to start measuring performance in your app, pass a function\n-// to log results (for example: reportWebVitals(console.log))\n-// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n-reportWebVitals();"
},
{
"sha":"9dfc1c058cebbef8b891c5062be6f31033d7d186",
"filename":"src/logo.svg",
"status":"removed",
"additions":0,
"deletions":1,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/logo.svg",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/logo.svg",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/logo.svg?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1 +0,0 @@\n-<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\"><g fill=\"#61DAFB\"><path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/><circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/><path d=\"M520.5 78.1z\"/></g></svg>\n\\ No newline at end of file"
},
{
"sha":"5253d3ad9e6be6690549cb255f5952337b02401d",
"filename":"src/reportWebVitals.js",
"status":"removed",
"additions":0,
"deletions":13,
"changes":13,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/reportWebVitals.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/reportWebVitals.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/reportWebVitals.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,13 +0,0 @@\n-const reportWebVitals = onPerfEntry => {\n-  if (onPerfEntry && onPerfEntry instanceof Function) {\n-    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n-      getCLS(onPerfEntry);\n-      getFID(onPerfEntry);\n-      getFCP(onPerfEntry);\n-      getLCP(onPerfEntry);\n-      getTTFB(onPerfEntry);\n-    });\n-  }\n-};\n-\n-export default reportWebVitals;"
},
{
"sha":"8f2609b7b3e0e3897ab3bcaad13caf6876e48699",
"filename":"src/setupTests.js",
"status":"removed",
"additions":0,
"deletions":5,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/setupTests.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/src/setupTests.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/setupTests.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -1,5 +0,0 @@\n-// jest-dom adds custom jest matchers for asserting on DOM nodes.\n-// allows you to do things like:\n-// expect(element).toHaveTextContent(/react/i)\n-// learn more: https://github.com/testing-library/jest-dom\n-import '@testing-library/jest-dom';"
},
{
"sha":"c98a090c0f4f927127017fea9b51720a68fe4d05",
"filename":"yarn.lock",
"status":"removed",
"additions":0,
"deletions":11398,
"changes":11398,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/yarn.lock",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/yarn.lock",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/yarn.lock?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87"
}
]
},
{
"commit_sha":"f52a9b7e9d059b9516bda87b938b1782f09efe87",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmY1MmE5YjdlOWQwNTliOTUxNmJkYTg3YjkzOGIxNzgyZjA5ZWZlODc=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/f52a9b7e9d059b9516bda87b938b1782f09efe87",
"commit_date":"2021-03-05T02:54:36Z",
"files":[
{
"sha":"4d29575de80483b005c29bfcac5061cd2f45313e",
"filename":"frontend/.gitignore",
"status":"added",
"additions":23,
"deletions":0,
"changes":23,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/.gitignore?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,23 @@\n+# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n+\n+# dependencies\n+/node_modules\n+/.pnp\n+.pnp.js\n+\n+# testing\n+/coverage\n+\n+# production\n+/build\n+\n+# misc\n+.DS_Store\n+.env.local\n+.env.development.local\n+.env.test.local\n+.env.production.local\n+\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*"
},
{
"sha":"02aac3f6ea17c461434c5f5e4aaf24d7f14d183e",
"filename":"frontend/README.md",
"status":"added",
"additions":70,
"deletions":0,
"changes":70,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/README.md?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,70 @@\n+# Getting Started with Create React App\n+\n+This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n+\n+## Available Scripts\n+\n+In the project directory, you can run:\n+\n+### `yarn start`\n+\n+Runs the app in the development mode.\\\n+Open [http://localhost:3000](http://localhost:3000) to view it in the browser.\n+\n+The page will reload if you make edits.\\\n+You will also see any lint errors in the console.\n+\n+### `yarn test`\n+\n+Launches the test runner in the interactive watch mode.\\\n+See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n+\n+### `yarn build`\n+\n+Builds the app for production to the `build` folder.\\\n+It correctly bundles React in production mode and optimizes the build for the best performance.\n+\n+The build is minified and the filenames include the hashes.\\\n+Your app is ready to be deployed!\n+\n+See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n+\n+### `yarn eject`\n+\n+**Note: this is a one-way operation. Once you `eject`, you can\u2019t go back!**\n+\n+If you aren\u2019t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n+\n+Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you\u2019re on your own.\n+\n+You don\u2019t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn\u2019t feel obligated to use this feature. However we understand that this tool wouldn\u2019t be useful if you couldn\u2019t customize it when you are ready for it.\n+\n+## Learn More\n+\n+You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n+\n+To learn React, check out the [React documentation](https://reactjs.org/).\n+\n+### Code Splitting\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)\n+\n+### Analyzing the Bundle Size\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)\n+\n+### Making a Progressive Web App\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)\n+\n+### Advanced Configuration\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)\n+\n+### Deployment\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)\n+\n+### `yarn build` fails to minify\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)"
},
{
"sha":"32dd45d1c7f7928c8a3d03158afea3f7b92cbe4c",
"filename":"frontend/package.json",
"status":"added",
"additions":38,
"deletions":0,
"changes":38,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/package.json?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,38 @@\n+{\n+  \"name\": \"front-end\",\n+  \"version\": \"0.1.0\",\n+  \"private\": true,\n+  \"dependencies\": {\n+    \"@testing-library/jest-dom\": \"^5.11.4\",\n+    \"@testing-library/react\": \"^11.1.0\",\n+    \"@testing-library/user-event\": \"^12.1.10\",\n+    \"react\": \"^17.0.1\",\n+    \"react-dom\": \"^17.0.1\",\n+    \"react-scripts\": \"4.0.3\",\n+    \"web-vitals\": \"^1.0.1\"\n+  },\n+  \"scripts\": {\n+    \"start\": \"react-scripts start\",\n+    \"build\": \"react-scripts build\",\n+    \"test\": \"react-scripts test\",\n+    \"eject\": \"react-scripts eject\"\n+  },\n+  \"eslintConfig\": {\n+    \"extends\": [\n+      \"react-app\",\n+      \"react-app/jest\"\n+    ]\n+  },\n+  \"browserslist\": {\n+    \"production\": [\n+      \">0.2%\",\n+      \"not dead\",\n+      \"not op_mini all\"\n+    ],\n+    \"development\": [\n+      \"last 1 chrome version\",\n+      \"last 1 firefox version\",\n+      \"last 1 safari version\"\n+    ]\n+  }\n+}"
},
{
"sha":"a11777cc471a4344702741ab1c8a588998b1311a",
"filename":"frontend/public/favicon.ico",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/favicon.ico",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/favicon.ico",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/favicon.ico?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87"
},
{
"sha":"aa069f27cbd9d53394428171c3989fd03db73c76",
"filename":"frontend/public/index.html",
"status":"added",
"additions":43,
"deletions":0,
"changes":43,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/index.html",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/index.html",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/index.html?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,43 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+  <head>\n+    <meta charset=\"utf-8\" />\n+    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n+    <meta name=\"theme-color\" content=\"#000000\" />\n+    <meta\n+      name=\"description\"\n+      content=\"Web site created using create-react-app\"\n+    />\n+    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n+    <!--\n+      manifest.json provides metadata used when your web app is installed on a\n+      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n+    -->\n+    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n+    <!--\n+      Notice the use of %PUBLIC_URL% in the tags above.\n+      It will be replaced with the URL of the `public` folder during the build.\n+      Only files inside the `public` folder can be referenced from the HTML.\n+\n+      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n+      work correctly both with client-side routing and a non-root public URL.\n+      Learn how to configure a non-root public URL by running `npm run build`.\n+    -->\n+    <title>React App</title>\n+  </head>\n+  <body>\n+    <noscript>You need to enable JavaScript to run this app.</noscript>\n+    <div id=\"root\"></div>\n+    <!--\n+      This HTML file is a template.\n+      If you open it directly in the browser, you will see an empty page.\n+\n+      You can add webfonts, meta tags, or analytics to this file.\n+      The build step will place the bundled scripts into the <body> tag.\n+\n+      To begin the development, run `npm start` or `yarn start`.\n+      To create a production bundle, use `npm run build` or `yarn build`.\n+    -->\n+  </body>\n+</html>"
},
{
"sha":"fc44b0a3796c0e0a64c3d858ca038bd4570465d9",
"filename":"frontend/public/logo192.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/logo192.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/logo192.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/logo192.png?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87"
},
{
"sha":"a4e47a6545bc15971f8f63fba70e4013df88a664",
"filename":"frontend/public/logo512.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/logo512.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/logo512.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/logo512.png?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87"
},
{
"sha":"080d6c77ac21bb2ef88a6992b2b73ad93daaca92",
"filename":"frontend/public/manifest.json",
"status":"added",
"additions":25,
"deletions":0,
"changes":25,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/manifest.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/manifest.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/manifest.json?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,25 @@\n+{\n+  \"short_name\": \"React App\",\n+  \"name\": \"Create React App Sample\",\n+  \"icons\": [\n+    {\n+      \"src\": \"favicon.ico\",\n+      \"sizes\": \"64x64 32x32 24x24 16x16\",\n+      \"type\": \"image/x-icon\"\n+    },\n+    {\n+      \"src\": \"logo192.png\",\n+      \"type\": \"image/png\",\n+      \"sizes\": \"192x192\"\n+    },\n+    {\n+      \"src\": \"logo512.png\",\n+      \"type\": \"image/png\",\n+      \"sizes\": \"512x512\"\n+    }\n+  ],\n+  \"start_url\": \".\",\n+  \"display\": \"standalone\",\n+  \"theme_color\": \"#000000\",\n+  \"background_color\": \"#ffffff\"\n+}"
},
{
"sha":"e9e57dc4d41b9b46e05112e9f45b7ea6ac0ba15e",
"filename":"frontend/public/robots.txt",
"status":"added",
"additions":3,
"deletions":0,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/robots.txt",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/public/robots.txt",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/public/robots.txt?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,3 @@\n+# https://www.robotstxt.org/robotstxt.html\n+User-agent: *\n+Disallow:"
},
{
"sha":"74b5e053450a48a6bdb4d71aad648e7af821975c",
"filename":"frontend/src/App.css",
"status":"added",
"additions":38,
"deletions":0,
"changes":38,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/App.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/App.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.css?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,38 @@\n+.App {\n+  text-align: center;\n+}\n+\n+.App-logo {\n+  height: 40vmin;\n+  pointer-events: none;\n+}\n+\n+@media (prefers-reduced-motion: no-preference) {\n+  .App-logo {\n+    animation: App-logo-spin infinite 20s linear;\n+  }\n+}\n+\n+.App-header {\n+  background-color: #282c34;\n+  min-height: 100vh;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  justify-content: center;\n+  font-size: calc(10px + 2vmin);\n+  color: white;\n+}\n+\n+.App-link {\n+  color: #61dafb;\n+}\n+\n+@keyframes App-logo-spin {\n+  from {\n+    transform: rotate(0deg);\n+  }\n+  to {\n+    transform: rotate(360deg);\n+  }\n+}"
},
{
"sha":"716c1d0f3e93ccd86268f04f30d5602059244be5",
"filename":"frontend/src/App.js",
"status":"added",
"additions":27,
"deletions":0,
"changes":27,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/App.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/App.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,27 @@\n+import './App.css';\n+import { Route, Switch, Link, BrowserRouter } from \"react-router-dom\";\n+import HomePage from './components/HomePage';\n+\n+function App() {\n+  return (\n+    <>\n+      <HomePage/>\n+        <BrowserRouter>\n+          <center>\n+            <ul>\n+              <li>\n+                <Link to=\"\">  new component</Link>\n+                \n+              </li>\n+              </ul>\n+          </center>\n+          <Switch> \n+            <Route path=\"\" component=\"\"/>\n+            <Route path=\"\" component=\"\"/>\n+          </Switch>\n+        </BrowserRouter>\n+    </>\n+  );\n+}\n+\n+export default App;"
},
{
"sha":"1f03afeece5ac28064fa3c73a29215037465f789",
"filename":"frontend/src/App.test.js",
"status":"added",
"additions":8,
"deletions":0,
"changes":8,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/App.test.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/App.test.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/App.test.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,8 @@\n+import { render, screen } from '@testing-library/react';\n+import App from './App';\n+\n+test('renders learn react link', () => {\n+  render(<App />);\n+  const linkElement = screen.getByText(/learn react/i);\n+  expect(linkElement).toBeInTheDocument();\n+});"
},
{
"sha":"307e9641cf4cc04980220fe7f25a18ebe9385e3e",
"filename":"frontend/src/components/HomePage.js",
"status":"added",
"additions":19,
"deletions":0,
"changes":19,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/components/HomePage.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/components/HomePage.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/components/HomePage.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,19 @@\n+import React from \"react\";\n+\n+//import {}\n+\n+class HomePage extends React.Component {\n+\n+\n+    render() {\n+        return (\n+            <div>\n+                <div><h1><center>Electrical Vehicles Charger Station</center></h1></div>\n+                \n+                <div><h2><center> roles???</center></h2></div>\n+            </div>\n+        );\n+    }\n+}\n+\n+export default Home;"
},
{
"sha":"ec2585e8c0bb8188184ed1e0703c4c8f2a8419b0",
"filename":"frontend/src/index.css",
"status":"added",
"additions":13,
"deletions":0,
"changes":13,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/index.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/index.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/index.css?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,13 @@\n+body {\n+  margin: 0;\n+  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n+    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n+    sans-serif;\n+  -webkit-font-smoothing: antialiased;\n+  -moz-osx-font-smoothing: grayscale;\n+}\n+\n+code {\n+  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n+    monospace;\n+}"
},
{
"sha":"15d9bd34d8c8e2554b636efa105758f4e6574776",
"filename":"frontend/src/index.js",
"status":"added",
"additions":14,
"deletions":0,
"changes":14,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/index.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,14 @@\n+import React from 'react';\n+import ReactDOM from 'react-dom';\n+import './index.css';\n+import App from './App';\n+import reportWebVitals from './reportWebVitals';\n+\n+ReactDOM.render(\n+  <React.StrictMode>\n+    <App />\n+  </React.StrictMode>,\n+  document.getElementById('root')\n+);\n+\n+reportWebVitals();"
},
{
"sha":"9dfc1c058cebbef8b891c5062be6f31033d7d186",
"filename":"frontend/src/logo.svg",
"status":"added",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/logo.svg",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/logo.svg",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/logo.svg?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\"><g fill=\"#61DAFB\"><path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/><circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/><path d=\"M520.5 78.1z\"/></g></svg>\n\\ No newline at end of file"
},
{
"sha":"5253d3ad9e6be6690549cb255f5952337b02401d",
"filename":"frontend/src/reportWebVitals.js",
"status":"added",
"additions":13,
"deletions":0,
"changes":13,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/reportWebVitals.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/reportWebVitals.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/reportWebVitals.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,13 @@\n+const reportWebVitals = onPerfEntry => {\n+  if (onPerfEntry && onPerfEntry instanceof Function) {\n+    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n+      getCLS(onPerfEntry);\n+      getFID(onPerfEntry);\n+      getFCP(onPerfEntry);\n+      getLCP(onPerfEntry);\n+      getTTFB(onPerfEntry);\n+    });\n+  }\n+};\n+\n+export default reportWebVitals;"
},
{
"sha":"8f2609b7b3e0e3897ab3bcaad13caf6876e48699",
"filename":"frontend/src/setupTests.js",
"status":"added",
"additions":5,
"deletions":0,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/setupTests.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/src/setupTests.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/src/setupTests.js?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87",
"patch":"@@ -0,0 +1,5 @@\n+// jest-dom adds custom jest matchers for asserting on DOM nodes.\n+// allows you to do things like:\n+// expect(element).toHaveTextContent(/react/i)\n+// learn more: https://github.com/testing-library/jest-dom\n+import '@testing-library/jest-dom';"
},
{
"sha":"c98a090c0f4f927127017fea9b51720a68fe4d05",
"filename":"frontend/yarn.lock",
"status":"added",
"additions":11398,
"deletions":0,
"changes":11398,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/yarn.lock",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f52a9b7e9d059b9516bda87b938b1782f09efe87/frontend/yarn.lock",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/frontend/yarn.lock?ref=f52a9b7e9d059b9516bda87b938b1782f09efe87"
}
]
},
{
"commit_sha":"595cfb0823a7363cab05ac61cbb70fc21d5ae7f7",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjU5NWNmYjA4MjNhNzM2M2NhYjA1YWM2MWNiYjcwZmMyMWQ1YWU3Zjc=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/595cfb0823a7363cab05ac61cbb70fc21d5ae7f7",
"commit_date":"2021-03-05T02:47:48Z",
"files":[
{
"sha":"fb65ebaf758649741d7661ab40adb7c247178cda",
"filename":".gitignore",
"status":"modified",
"additions":2,
"deletions":2,
"changes":4,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/595cfb0823a7363cab05ac61cbb70fc21d5ae7f7/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/595cfb0823a7363cab05ac61cbb70fc21d5ae7f7/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=595cfb0823a7363cab05ac61cbb70fc21d5ae7f7",
"patch":"@@ -7,8 +7,8 @@\n # installed platform-specific binaries\n backend/node_modules\n backend/config\n-backend/gateway\n-backend/wallet\n+backend/gateway/\n+backend/wallet/\n .DS_Store\n .project\n "
}
]
},
{
"commit_sha":"0bb39be13efefe386554db435aac6604c7f57d39",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjBiYjM5YmUxM2VmZWZlMzg2NTU0ZGI0MzVhYWM2NjA0YzdmNTdkMzk=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/0bb39be13efefe386554db435aac6604c7f57d39",
"commit_date":"2021-03-05T02:46:17Z",
"files":[
{
"sha":"093c848ddeb3b73eff12c90accbd4e36b882c955",
"filename":"backend/endpoint/PostmanTest/EVCharger.postman_collection.json",
"status":"added",
"additions":372,
"deletions":0,
"changes":372,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0bb39be13efefe386554db435aac6604c7f57d39/backend/endpoint/PostmanTest/EVCharger.postman_collection.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0bb39be13efefe386554db435aac6604c7f57d39/backend/endpoint/PostmanTest/EVCharger.postman_collection.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/PostmanTest/EVCharger.postman_collection.json?ref=0bb39be13efefe386554db435aac6604c7f57d39",
"patch":"@@ -0,0 +1,372 @@\n+{\n+\t\"info\": {\n+\t\t\"_postman_id\": \"2068d3a0-2419-4cd1-8723-8adc75565914\",\n+\t\t\"name\": \"EVCharger\",\n+\t\t\"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n+\t},\n+\t\"item\": [\n+\t\t{\n+\t\t\t\"name\": \"Register Device\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"brand\\\": \\\"TestDevice\\\",\\n    \\\"model\\\": \\\"PSDG\\\",\\n    \\\"mac\\\": \\\"89:334:00:89\\\",\\n    \\\"powerType\\\": \\\"AC\\\",\\n    \\\"location\\\": {\\n        \\\"long\\\": \\\"56\\\",\\n        \\\"lat\\\": \\\"45\\\"\\n    }\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/register\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"register\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetAllDevices\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"\"\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/all\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"all\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetDeviceController\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n   \\\"deviceID\\\": \\\"DEV-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/controller\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"controller\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"executeCommand\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n   \\\"deviceID\\\": \\\"DEV-2\\\",\\n   \\\"command\\\": \\\"show inUSe status\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/executeCommand\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"executeCommand\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetDetailsofDevice\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceId\\\": \\\"DEV-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/id\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"id\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetAllController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/all\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"all\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"AssignController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceID\\\": \\\"DEV-1\\\",\\n    \\\"controllerID\\\" : \\\"CONTR-2\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/assign\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"assign\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"GetControllerDevices\",\n+\t\t\t\"protocolProfileBehavior\": {\n+\t\t\t\t\"disableBodyPruning\": true\n+\t\t\t},\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"GET\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"id\\\": \\\"CONTR-2\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/devices\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"devices\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"UpdateController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"controllerID\\\" :  \\\"CONTR-2\\\",\\n    \\\"serviceProvider\\\" : \\\"SP98\\\",\\n    \\\"location\\\": {\\n        \\\"long\\\": \\\"89\\\",\\n        \\\"lat\\\": \\\"45\\\"\\n    }\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/update\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"update\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"changeController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceID\\\": \\\"DEV-2\\\",\\n    \\\"newControllerID\\\" : \\\"CONTR-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/change\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"change\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"RegisterController\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"controllerName\\\": \\\"Controller3\\\", \\n    \\\"serviceProvider\\\" : \\\"SP5\\\", \\n    \\\"location\\\" : {\\n        \\\"long\\\": \\\"10\\\", \\n        \\\"lat\\\" : \\\"50\\\"\\n    }\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/controller/register\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"controller\",\n+\t\t\t\t\t\t\"register\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"updateTemperature\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceId\\\" : \\\"DEV-2\\\", \\n    \\\"currentTemp\\\": \\\"56\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/update\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"update\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t},\n+\t\t{\n+\t\t\t\"name\": \"updateDeviceStatus\",\n+\t\t\t\"request\": {\n+\t\t\t\t\"method\": \"POST\",\n+\t\t\t\t\"header\": [],\n+\t\t\t\t\"body\": {\n+\t\t\t\t\t\"mode\": \"raw\",\n+\t\t\t\t\t\"raw\": \"{\\n    \\\"deviceId\\\" : \\\"DEV-1\\\"\\n}\",\n+\t\t\t\t\t\"options\": {\n+\t\t\t\t\t\t\"raw\": {\n+\t\t\t\t\t\t\t\"language\": \"json\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t\"url\": {\n+\t\t\t\t\t\"raw\": \"localhost:8000/device/updateStatus\",\n+\t\t\t\t\t\"host\": [\n+\t\t\t\t\t\t\"localhost\"\n+\t\t\t\t\t],\n+\t\t\t\t\t\"port\": \"8000\",\n+\t\t\t\t\t\"path\": [\n+\t\t\t\t\t\t\"device\",\n+\t\t\t\t\t\t\"updateStatus\"\n+\t\t\t\t\t]\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\t\"response\": []\n+\t\t}\n+\t],\n+\t\"protocolProfileBehavior\": {}\n+}\n\\ No newline at end of file"
},
{
"sha":"196969f29598dc9659762465dfa72997cc26a531",
"filename":"backend/routes/controller.js",
"status":"modified",
"additions":9,
"deletions":1,
"changes":10,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0bb39be13efefe386554db435aac6604c7f57d39/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0bb39be13efefe386554db435aac6604c7f57d39/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=0bb39be13efefe386554db435aac6604c7f57d39",
"patch":"@@ -17,14 +17,22 @@ router.post('/register', async function(req, res, next) {\n \n router.post('/update', async (req, res, next) => {\n     const result = await connector.updateController(req.body.controllerID, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n+    res.json(result); \n });\n \n router.post('/change', async (req, res, next) => {\n     const result = await connector.changeController(req.body.deviceID, req.body.newControllerID);\n+    res.json(result); \n });\n \n router.post('/assign', async (req, res, next) => {\n-    const result = await connector.ass(req.body.controllerID, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n+    const result = await connector.assignController(req.body.deviceID, req.body.controllerID);\n+    res.json(result); \n+});\n+\n+router.get('/devices', async (req, res, next) => {\n+    const result = await connector.getControllerDevices(req.body.id);\n+    res.json(result); \n });\n \n "
},
{
"sha":"4c4bfe417f267d650486553c2ef60fe312e9b139",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":3,
"deletions":1,
"changes":4,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/0bb39be13efefe386554db435aac6604c7f57d39/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/0bb39be13efefe386554db435aac6604c7f57d39/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=0bb39be13efefe386554db435aac6604c7f57d39",
"patch":"@@ -10,7 +10,7 @@ router.get('/all', async function(req, res, next) {\n     res.json(result); \n });\n \n-router.get('/device', async function(req, res, next) {\n+router.get('/id', async function(req, res, next) {\n     //let queryObj = req.query;\n     const result = await connector.getDevice(req.body.deviceId);\n     res.json(result); \n@@ -41,4 +41,6 @@ router.post('/executeCommand', async function(req, res, next) {\n     res.json(result); \n });\n \n+\n+\n module.exports = router;\n\\ No newline at end of file"
}
]
},
{
"commit_sha":"f8a72e9e7424a16232cc34b241315c5e1539bbdd",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmY4YTcyZTllNzQyNGExNjIzMmNjMzRiMjQxMzE1YzVlMTUzOWJiZGQ=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/f8a72e9e7424a16232cc34b241315c5e1539bbdd",
"commit_date":"2021-03-05T01:53:25Z",
"files":[
{
"sha":"b1834f59e99556748aa40b48c48a9c0573ee4f1d",
"filename":".gitignore",
"status":"modified",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f8a72e9e7424a16232cc34b241315c5e1539bbdd/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f8a72e9e7424a16232cc34b241315c5e1539bbdd/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=f8a72e9e7424a16232cc34b241315c5e1539bbdd",
"patch":"@@ -7,6 +7,8 @@\n # installed platform-specific binaries\n backend/node_modules\n backend/config\n+backend/gateway\n+backend/wallet\n .DS_Store\n .project\n "
},
{
"sha":"80e655765d68d1346b595cf65e185b7ab1e9cb57",
"filename":"backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"status":"modified",
"additions":8,
"deletions":8,
"changes":16,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f8a72e9e7424a16232cc34b241315c5e1539bbdd/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f8a72e9e7424a16232cc34b241315c5e1539bbdd/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json?ref=f8a72e9e7424a16232cc34b241315c5e1539bbdd",
"patch":"@@ -1,7 +1,7 @@\n {\n     \"certificateAuthorities\": {\n-        \"org1ca-api.127-0-0-1.nip.io:8081\": {\n-            \"url\": \"http://org1ca-api.127-0-0-1.nip.io:8081\"\n+        \"org1ca-api.127-0-0-1.nip.io:8080\": {\n+            \"url\": \"http://org1ca-api.127-0-0-1.nip.io:8080\"\n         }\n     },\n     \"client\": {\n@@ -21,21 +21,21 @@\n     \"organizations\": {\n         \"Org1\": {\n             \"certificateAuthorities\": [\n-                \"org1ca-api.127-0-0-1.nip.io:8081\"\n+                \"org1ca-api.127-0-0-1.nip.io:8080\"\n             ],\n             \"mspid\": \"Org1MSP\",\n             \"peers\": [\n-                \"org1peer-api.127-0-0-1.nip.io:8081\"\n+                \"org1peer-api.127-0-0-1.nip.io:8080\"\n             ]\n         }\n     },\n     \"peers\": {\n-        \"org1peer-api.127-0-0-1.nip.io:8081\": {\n+        \"org1peer-api.127-0-0-1.nip.io:8080\": {\n             \"grpcOptions\": {\n-                \"grpc.default_authority\": \"org1peer-api.127-0-0-1.nip.io:8081\",\n-                \"grpc.ssl_target_name_override\": \"org1peer-api.127-0-0-1.nip.io:8081\"\n+                \"grpc.default_authority\": \"org1peer-api.127-0-0-1.nip.io:8080\",\n+                \"grpc.ssl_target_name_override\": \"org1peer-api.127-0-0-1.nip.io:8080\"\n             },\n-            \"url\": \"grpc://org1peer-api.127-0-0-1.nip.io:8081\"\n+            \"url\": \"grpc://org1peer-api.127-0-0-1.nip.io:8080\"\n         }\n     },\n     \"type\": \"gateway\","
}
]
},
{
"commit_sha":"78dbf96d1e9824ac8c0596c868b4bd5b817f34cb",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2Ojc4ZGJmOTZkMWU5ODI0YWM4YzA1OTZjODY4YjRiZDViODE3ZjM0Y2I=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/78dbf96d1e9824ac8c0596c868b4bd5b817f34cb",
"commit_date":"2021-03-05T01:50:49Z",
"files":[
{
"sha":"199bae8e0062aa96b3f7ba4dd98544d8a9d4a38a",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":2,
"deletions":14,
"changes":16,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/78dbf96d1e9824ac8c0596c868b4bd5b817f34cb/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/78dbf96d1e9824ac8c0596c868b4bd5b817f34cb/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=78dbf96d1e9824ac8c0596c868b4bd5b817f34cb",
"patch":"@@ -37,7 +37,6 @@ async function getAllControllers() {\n         await disconnectGateway();    \n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     console.log('result from chaincode = ' + result.toString());\n     return JSON.parse(result.toString());\n@@ -49,7 +48,6 @@ async function registerController(controllerName, serProvider, long, lat) {\n         await contract.submitTransaction('registerController', controllerName, serProvider, long, lat);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n@@ -61,7 +59,6 @@ async function updateController(controllerID, serProvider, long, lat) {\n         await contract.submitTransaction('updateController', controllerID, serProvider, long, lat);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n@@ -73,7 +70,6 @@ async function changeController(deviceID, newControllerID) {\n         await contract.submitTransaction('changeController', deviceID, newControllerID);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n@@ -85,7 +81,6 @@ async function assignController(deviceID, controllerID) {\n         await contract.submitTransaction('assignController', deviceID, controllerID);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n@@ -104,7 +99,6 @@ async function getAllDevices() {\n         await disconnectGateway();    \n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     console.log('result from chaincode = ' + result.toString());\n     return JSON.parse(result.toString());\n@@ -118,7 +112,6 @@ async function getDevice(id) {\n         await disconnectGateway();    \n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     console.log('result from chaincode = ' + result.toString());\n     return JSON.parse(result.toString());\n@@ -133,7 +126,6 @@ async function getControllerDevices(id) {\n         await disconnectGateway();    \n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     console.log('result from chaincode = ' + result.toString());\n     return JSON.parse(result.toString());\n@@ -145,7 +137,6 @@ async function updateDevice(deviceId, currentTemp) {\n         await contract.submitTransaction('updateDevice', deviceId, currentTemp);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n@@ -157,7 +148,6 @@ async function updateDeviceStatus(deviceId) {\n         await contract.submitTransaction('updateDeviceStatus', deviceId);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n@@ -169,7 +159,6 @@ async function registerDevice(brand, model, mac, powerType, long, lat) {\n         await contract.submitTransaction('registerDevice', brand, model, mac, powerType, long, lat);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');\n@@ -184,11 +173,11 @@ async function getDeviceController(devID) {\n         );   \n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     await disconnectGateway(); \n     console.log('result from chaincode = ' + result.toString());\n-    return result.toString();\n+    return JSON.parse('{\"ControllerID\": \"' + result.toString() + '\"}');\n+    //result.toString();\n \n }\n \n@@ -198,7 +187,6 @@ async function executeDeviceCommand(devID, command) {\n         await contract.submitTransaction('executeDeviceCommand', devID, command);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n-        process.exit(1);\n     }\n     await disconnectGateway();    \n     return JSON.parse('{\"result\": \"success\"}');"
},
{
"sha":"512b0648a78a8a4a2d451de52e977d57de385e4b",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/78dbf96d1e9824ac8c0596c868b4bd5b817f34cb/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/78dbf96d1e9824ac8c0596c868b4bd5b817f34cb/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=78dbf96d1e9824ac8c0596c868b4bd5b817f34cb",
"patch":"@@ -26,7 +26,7 @@ router.post('/updateStatus', async function(req, res, next) {\n     res.json(result); \n });\n \n-router.get('/getDeviceController', async function(req, res, next) {\n+router.get('/controller', async function(req, res, next) {\n     const result = await connector.getDeviceController(req.body.deviceID);\n     res.json(result); \n });"
}
]
},
{
"commit_sha":"ca82c6692d33096c37c57d1ca2f792be0088d329",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmNhODJjNjY5MmQzMzA5NmMzN2M1N2QxY2EyZjc5MmJlMDA4OGQzMjk=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/ca82c6692d33096c37c57d1ca2f792be0088d329",
"commit_date":"2021-03-05T01:18:07Z",
"files":[
{
"sha":"2aec6bf217bf8be5335e02d4fdb27231da85fe53",
"filename":"backend/wallet/Org1/Org1 Admin.id",
"status":"added",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/ca82c6692d33096c37c57d1ca2f792be0088d329/backend/wallet/Org1/Org1%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/ca82c6692d33096c37c57d1ca2f792be0088d329/backend/wallet/Org1/Org1%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20Admin.id?ref=ca82c6692d33096c37c57d1ca2f792be0088d329",
"patch":"@@ -0,0 +1 @@\n+{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIB0DCCAXWgAwIBAgIRAMfwyyBZRHY/+8kU7S64eiIwCgYIKoZIzj0EAwIwEjEQ\\nMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDQxODQzMjVaFw0zMTAzMDIxODQzMjVa\\nMCUxDjAMBgNVBAsTBWFkbWluMRMwEQYDVQQDEwpPcmcxIEFkbWluMFkwEwYHKoZI\\nzj0CAQYIKoZIzj0DAQcDQgAE5jSXBBkZw5SS2BzGnkkfULX3GPDeoURRVUkEz22s\\no3Oi6KZRPX84pqpRYssPUga3iViGhkVWXcVMse3wKtvGAKOBmDCBlTAOBgNVHQ8B\\nAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMAwGA1UdEwEB\\n/wQCMAAwKQYDVR0OBCIEIHRtll2g+cm0cuIROgRXRSe/+KqYHWL5oPeK9M+eMyyp\\nMCsGA1UdIwQkMCKAIFihXMpnmacRSAmeYJRaGl5f2Qw6u1tBnSqqRP27zU/sMAoG\\nCCqGSM49BAMCA0kAMEYCIQDv6/R7BlT0FtqtK0FCU/a1EHFcJRhr57eIz5AKLQU0\\nHQIhALzEoL4GC+h5RYK6Mu+1ARdiPXlgZLejWfwPLEkqgIob\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgHCG/ewcnzwPZSPI9\\nfetXeF2fI0jm3e6h4BfhPoa44DihRANCAATmNJcEGRnDlJLYHMaeSR9QtfcY8N6h\\nRFFVSQTPbayjc6LoplE9fzimqlFiyw9SBreJWIaGRVZdxUyx7fAq28YA\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"be7f43ca40d1072ee9cc8eedf0173483e045b7f9",
"filename":"backend/wallet/Org1/Org1 CA Admin.id",
"status":"added",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/ca82c6692d33096c37c57d1ca2f792be0088d329/backend/wallet/Org1/Org1%20CA%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/ca82c6692d33096c37c57d1ca2f792be0088d329/backend/wallet/Org1/Org1%20CA%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20CA%20Admin.id?ref=ca82c6692d33096c37c57d1ca2f792be0088d329",
"patch":"@@ -0,0 +1 @@\n+{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBoDCCAUegAwIBAgIUalVtUAjS6tMOAZNadOydjpHUtHYwCgYIKoZIzj0EAwIw\\nEjEQMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDQxODQ0MDBaFw0yMjAzMDQxODQ5\\nMDBaMCExDzANBgNVBAsTBmNsaWVudDEOMAwGA1UEAxMFYWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAQ5jA5EgIvgL/2FbcDO28EQbho4+dCTeg2KtJ6KBBms\\nLFi1ZMAlExibVkbp5oR5DsF2oD/+WshMe12LE6UIIwaYo2wwajAOBgNVHQ8BAf8E\\nBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUrpVoenb3myDu9y8DEAasstnQ\\nEMIwKwYDVR0jBCQwIoAgWKFcymeZpxFICZ5glFoaXl/ZDDq7W0GdKqpE/bvNT+ww\\nCgYIKoZIzj0EAwIDRwAwRAIgLl2u46vUy+PgZNRzLfevdOk5bNomw5FZ0s8lHf4/\\n+acCIHLoAyGGHuUbrfWNt9kfqm2hKQ+RBftHenWL9LR+M25l\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgrawGDD0G9t+iJkuC\\nH6vux5BOtuhbk/GOyPg44YnltpWhRANCAAQ5jA5EgIvgL/2FbcDO28EQbho4+dCT\\neg2KtJ6KBBmsLFi1ZMAlExibVkbp5oR5DsF2oD/+WshMe12LE6UIIwaY\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
}
]
},
{
"commit_sha":"09133505300b31908bbb3eb510f575031655e41f",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjA5MTMzNTA1MzAwYjMxOTA4YmJiM2ViNTEwZjU3NTAzMTY1NWU0MWY=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/09133505300b31908bbb3eb510f575031655e41f",
"commit_date":"2021-03-05T01:14:57Z",
"files":[
{
"sha":"31ae7b0a5feaea0bbe541232e137cfdef24853c2",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":46,
"deletions":1,
"changes":47,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/09133505300b31908bbb3eb510f575031655e41f/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/09133505300b31908bbb3eb510f575031655e41f/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=09133505300b31908bbb3eb510f575031655e41f",
"patch":"@@ -163,6 +163,48 @@ async function updateDeviceStatus(deviceId) {\n     return JSON.parse('{\"result\": \"success\"}');\n }\n \n+async function registerDevice(brand, model, mac, powerType, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('registerDevice', brand, model, mac, powerType, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function getDeviceController(devID) {\n+\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getDeviceController', devID\n+        );   \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway(); \n+    console.log('result from chaincode = ' + result.toString());\n+    return result.toString();\n+\n+}\n+\n+async function executeDeviceCommand(devID, command) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('executeDeviceCommand', devID, command);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+\n module.exports = {\n     /* controller */\n     getAllControllers: getAllControllers,\n@@ -175,5 +217,8 @@ module.exports = {\n     getAllDevices: getAllDevices,\n     /* devices */\n     updateDevice: updateDevice,\n-    updateDeviceStatus: updateDeviceStatus\n+    updateDeviceStatus: updateDeviceStatus,\n+    registerDevice: registerDevice,\n+    getDeviceController: getDeviceController,\n+    executeDeviceCommand: executeDeviceCommand\n }\n\\ No newline at end of file"
},
{
"sha":"031f05da9a27e24e0bc015123601bc641219049a",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":15,
"deletions":0,
"changes":15,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/09133505300b31908bbb3eb510f575031655e41f/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/09133505300b31908bbb3eb510f575031655e41f/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=09133505300b31908bbb3eb510f575031655e41f",
"patch":"@@ -26,4 +26,19 @@ router.post('/updateStatus', async function(req, res, next) {\n     res.json(result); \n });\n \n+router.get('/getDeviceController', async function(req, res, next) {\n+    const result = await connector.getDeviceController(req.body.deviceID);\n+    res.json(result); \n+});\n+\n+router.post('/register', async function(req, res, next) {\n+    const result = await connector.registerDevice(req.body.brand, req.body.model, req.body.mac, req.body.powerType, req.body.location.long, req.body.location.lat);\n+    res.json(result); \n+});\n+\n+router.post('/executeCommand', async function(req, res, next) {\n+    const result = await connector.executeDeviceCommand(req.body.deviceID, req.body.command);\n+    res.json(result); \n+});\n+\n module.exports = router;\n\\ No newline at end of file"
},
{
"sha":"8dfd9af11367f19a009e59733f2fe476f0bf4708",
"filename":"backend/wallet/Org1/Org1 Admin.id",
"status":"removed",
"additions":0,
"deletions":1,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/336ee67ac08b78c18a74a07d021355dba53465af/backend/wallet/Org1/Org1%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/336ee67ac08b78c18a74a07d021355dba53465af/backend/wallet/Org1/Org1%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20Admin.id?ref=336ee67ac08b78c18a74a07d021355dba53465af",
"patch":"@@ -1 +0,0 @@\n-{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBzjCCAXSgAwIBAgIQMXHE2o7nB/MbM06fHvykvTAKBggqhkjOPQQDAjASMRAw\\nDgYDVQQDEwdPcmcxIENBMB4XDTIxMDMwNDIwNDYwMloXDTMxMDMwMjIwNDYwMlow\\nJTEOMAwGA1UECxMFYWRtaW4xEzARBgNVBAMTCk9yZzEgQWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAScOr0TnqWDyAYRSTmOiWdb8zaHCBRQvE2JdOmi/qaD\\nL+nxIbM9huZ6oquDj6dZ5EPLV5W8ablz4n6MZFSL5ukko4GYMIGVMA4GA1UdDwEB\\n/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwDAYDVR0TAQH/\\nBAIwADApBgNVHQ4EIgQgPI2bWZA0qW+WY2cE8o/qN0sqq39kZXop8Whc9/U4ZuMw\\nKwYDVR0jBCQwIoAgAToqafW82VnK2eyhVuvp0GB8Ni7L2WiPf3FgDx2x+YkwCgYI\\nKoZIzj0EAwIDSAAwRQIhANgPkZSyMFtwxoZWiuBsqxM6QRjRgSyqoOmeNfivCXJc\\nAiA745JwCGY5NE8+TKOmBe7+wESRcA0EGOcnBrnalDjbvw==\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgvC6VRtk2NjVrSgNQ\\nv1Gw5Qbhg3QgrOn/8f2+c8/D9X2hRANCAAScOr0TnqWDyAYRSTmOiWdb8zaHCBRQ\\nvE2JdOmi/qaDL+nxIbM9huZ6oquDj6dZ5EPLV5W8ablz4n6MZFSL5ukk\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"62a5e3e77952679c38b8e0769c1ad973c27b2fe4",
"filename":"backend/wallet/Org1/Org1 CA Admin.id",
"status":"removed",
"additions":0,
"deletions":1,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/336ee67ac08b78c18a74a07d021355dba53465af/backend/wallet/Org1/Org1%20CA%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/336ee67ac08b78c18a74a07d021355dba53465af/backend/wallet/Org1/Org1%20CA%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20CA%20Admin.id?ref=336ee67ac08b78c18a74a07d021355dba53465af",
"patch":"@@ -1 +0,0 @@\n-{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBoTCCAUegAwIBAgIUG3zv4ODuuykGTsHpYnUPZYBLXDIwCgYIKoZIzj0EAwIw\\nEjEQMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDQyMDQ2MDBaFw0yMjAzMDQyMDUx\\nMDBaMCExDzANBgNVBAsTBmNsaWVudDEOMAwGA1UEAxMFYWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAT6wIjqQlcXPCsmGp5vO/axqILu1X0ftaTTqlviLLIn\\nseTCFwWZMmizzKNuvrHnPnH6TKCrf8ODQ12urfkhXrW3o2wwajAOBgNVHQ8BAf8E\\nBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQU2fKkgHZWwJw5RY7/TVfp8fg4\\nSUwwKwYDVR0jBCQwIoAgAToqafW82VnK2eyhVuvp0GB8Ni7L2WiPf3FgDx2x+Ykw\\nCgYIKoZIzj0EAwIDSAAwRQIhAPkLBMjzyG0wv4yd/3E0BY+CEsizSmYCOl2Hcsng\\nkWrCAiA7nH48ALMvum8B20QmkbYfMRVQjC9aTbAGosa/ozXzpA==\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgOO5NGzguj7TqmMYU\\nap848RnXcXau7ZoRCIN3L+F+uYuhRANCAAT6wIjqQlcXPCsmGp5vO/axqILu1X0f\\ntaTTqlviLLInseTCFwWZMmizzKNuvrHnPnH6TKCrf8ODQ12urfkhXrW3\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
}
]
},
{
"commit_sha":"336ee67ac08b78c18a74a07d021355dba53465af",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjMzNmVlNjdhYzA4Yjc4YzE4YTc0YTA3ZDAyMTM1NWRiYTUzNDY1YWY=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/336ee67ac08b78c18a74a07d021355dba53465af",
"commit_date":"2021-03-05T00:46:53Z",
"files":[
{
"sha":"993ebd6360e70faf1ca9c3f14d7ec90b3bfcacfb",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":26,
"deletions":1,
"changes":27,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/336ee67ac08b78c18a74a07d021355dba53465af/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/336ee67ac08b78c18a74a07d021355dba53465af/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=336ee67ac08b78c18a74a07d021355dba53465af",
"patch":"@@ -139,6 +139,29 @@ async function getControllerDevices(id) {\n     return JSON.parse(result.toString());\n }\n \n+async function updateDevice(deviceId, currentTemp) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('updateDevice', deviceId, currentTemp);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function updateDeviceStatus(deviceId) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('updateDeviceStatus', deviceId);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n \n module.exports = {\n     /* controller */\n@@ -149,6 +172,8 @@ module.exports = {\n     assignController: assignController,\n     getControllerDevices: getControllerDevices,\n     getDevice: getDevice,\n-    getAllDevices: getAllDevices\n+    getAllDevices: getAllDevices,\n     /* devices */\n+    updateDevice: updateDevice,\n+    updateDeviceStatus: updateDeviceStatus\n }\n\\ No newline at end of file"
},
{
"sha":"bc3f6ae4964ad11059475ce55a91ec6a332cfc4c",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/336ee67ac08b78c18a74a07d021355dba53465af/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/336ee67ac08b78c18a74a07d021355dba53465af/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=336ee67ac08b78c18a74a07d021355dba53465af",
"patch":"@@ -16,5 +16,14 @@ router.get('/device', async function(req, res, next) {\n     res.json(result); \n });\n \n+router.post('/update', async function(req, res, next) {\n+    const result = await connector.updateDevice(req.body.deviceId, req.body.currentTemp);\n+    res.json(result); \n+});\n+\n+router.post('/updateStatus', async function(req, res, next) {\n+    const result = await connector.updateDeviceStatus(req.body.deviceId);\n+    res.json(result); \n+});\n \n module.exports = router;\n\\ No newline at end of file"
}
]
},
{
"commit_sha":"b942044ac1ebffc741a23dd691e567bb3869c181",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmI5NDIwNDRhYzFlYmZmYzc0MWEyM2RkNjkxZTU2N2JiMzg2OWMxODE=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/b942044ac1ebffc741a23dd691e567bb3869c181",
"commit_date":"2021-03-05T00:37:02Z",
"files":[
{
"sha":"65c509be983cf57271c2e2c57302389b70954633",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":4,
"deletions":2,
"changes":6,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/b942044ac1ebffc741a23dd691e567bb3869c181/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/b942044ac1ebffc741a23dd691e567bb3869c181/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=b942044ac1ebffc741a23dd691e567bb3869c181",
"patch":"@@ -146,7 +146,9 @@ module.exports = {\n     registerController: registerController, \n     updateController: updateController, \n     changeController: changeController,\n-    assignController: assignController\n-\n+    assignController: assignController,\n+    getControllerDevices: getControllerDevices,\n+    getDevice: getDevice,\n+    getAllDevices: getAllDevices\n     /* devices */\n }\n\\ No newline at end of file"
}
]
},
{
"commit_sha":"eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmVlYTQyNmM3NWY2YTNmZDVkMzRmMDQ2YTRmY2JhMjFmY2MzZjJiODA=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80",
"commit_date":"2021-03-05T00:30:13Z",
"files":[
{
"sha":"cc1a611fad5061d3e2726ec8e261ffa52148074e",
"filename":"backend/bin/www",
"status":"modified",
"additions":2,
"deletions":2,
"changes":4,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/backend/bin/www",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/backend/bin/www",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/bin/www?ref=eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80",
"patch":"@@ -5,14 +5,14 @@\n  */\n \n var app = require('../app');\n-var debug = require('debug')('evchargerreg:server');\n+var debug = require('debug')('evchargerreg-server');\n var http = require('http');\n \n /**\n  * Get port from environment and store in Express.\n  */\n \n-var port = normalizePort(process.env.PORT || '3000');\n+var port = normalizePort(process.env.PORT || '8000');\n app.set('port', port);\n \n /**"
},
{
"sha":"8bde0d19440fb6add3c17a3bd0acf867a1716b42",
"filename":"backend/endpoint/mapping.js",
"status":"renamed",
"additions":45,
"deletions":6,
"changes":51,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80",
"patch":"@@ -43,10 +43,46 @@ async function getAllControllers() {\n     return JSON.parse(result.toString());\n }\n \n-async function registerController(cn, sp, long, lat) {\n+async function registerController(controllerName, serProvider, long, lat) {\n     const contract = await init();\n     try {\n-        await contract.submitTransaction('registerController', cn, sp, long, lat);\n+        await contract.submitTransaction('registerController', controllerName, serProvider, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function updateController(controllerID, serProvider, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('updateController', controllerID, serProvider, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function changeController(deviceID, newControllerID) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('changeController', deviceID, newControllerID);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function assignController(deviceID, controllerID) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('assignController', deviceID, controllerID);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n         process.exit(1);\n@@ -105,9 +141,12 @@ async function getControllerDevices(id) {\n \n \n module.exports = {\n+    /* controller */\n     getAllControllers: getAllControllers,\n-    registerController: registerController,\n-    getAllDevices: getAllDevices,\n-    getDevice: getDevice,\n-    getControllerDevices: getControllerDevices\n+    registerController: registerController, \n+    updateController: updateController, \n+    changeController: changeController,\n+    assignController: assignController\n+\n+    /* devices */\n }\n\\ No newline at end of file",
"previous_filename":"backend/chaincode-connector/EVChargerConnector.js"
},
{
"sha":"0fabdcc3425c7f7f776b77923637c980f03a82c6",
"filename":"backend/package.json",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/backend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/backend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/package.json?ref=eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80",
"patch":"@@ -1,5 +1,5 @@\n {\n-  \"name\": \"evchargerreg\",\n+  \"name\": \"evchargerreg-server\",\n   \"version\": \"0.0.0\",\n   \"private\": true,\n   \"scripts\": {"
},
{
"sha":"d0b244809c2f7b88d786b7c28b7fb89fba2fc628",
"filename":"backend/routes/controller.js",
"status":"modified",
"additions":12,
"deletions":6,
"changes":18,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80",
"patch":"@@ -1,10 +1,9 @@\n 'use strict';\n \n var express = require('express');\n-var router = express.Router();\n-var connector = require('../chaincode-connector/EVChargerConnector')\n+const router = express.Router();\n+const connector = require('../endpoint/mapping')\n \n-/* GET query listing. */\n router.get('/all', async function(req, res, next) {\n     const result = await connector.getAllControllers()\n     res.json(result); \n@@ -16,9 +15,16 @@ router.post('/register', async function(req, res, next) {\n     res.json(result); \n });\n \n-router.get('/devices', async function(req, res, next) {\n-    const result = await connector.getControllerDevices(req.body.controllerId);\n-    res.json(result); \n+router.post('/update', async (req, res, next) => {\n+    const result = await connector.updateController(req.body.controllerID, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n+});\n+\n+router.post('/change', async (req, res, next) => {\n+    const result = await connector.changeController(req.body.deviceID, req.body.newControllerID);\n+});\n+\n+router.post('/assign', async (req, res, next) => {\n+    const result = await connector.ass(req.body.controllerID, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n });\n \n "
},
{
"sha":"2f873fb79ddae072de4de5b87ffcb815dece6dcb",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80",
"patch":"@@ -2,7 +2,7 @@\n \n var express = require('express');\n var router = express.Router();\n-var connector = require('../chaincode-connector/EVChargerConnector')\n+const connector = require('../endpoint/mapping')\n \n /* GET query listing. */\n router.get('/all', async function(req, res, next) {"
},
{
"sha":"5be29180402540f8b1cf369551936cc6cd9e00b9",
"filename":"chaincode/lib/controller-device-contract.js",
"status":"modified",
"additions":53,
"deletions":58,
"changes":111,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/chaincode/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80/chaincode/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/lib/controller-device-contract.js?ref=eea426c75f6a3fd5d34f046a4fcba21fcc3f2b80",
"patch":"@@ -27,14 +27,36 @@ class ControllerDeviceContract extends Contract {\n         console.info('============= END : Initialize Ledger ===========');\n     }\n \n+    async getAllControllers(ctx) {\n+        console.info('============= START : Get All Controllers ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"controller\"\n+            }\n+        };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Controllers ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n     async registerController(ctx, controllerName, serviceProvider, long, lat) {\n         console.info('============= START : Register Controller ===========');\n \n-        /*\n-        FIX: Controller ID can be converted to auto-increment internally\n-             docType: 'controller' (Review the need for docType attribute)\n-        */\n-\n         this.controllerID++;\n         const recControllerID = \"CONTR-\" + this.controllerID;\n         console.log(\"this.controllerID = \" + this.controllerID);\n@@ -71,32 +93,6 @@ class ControllerDeviceContract extends Contract {\n         console.info('============= END : Update Controller ===========');\n     }\n \n-    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n-        console.info('============= START : Register Device ===========');\n-\n-        this.deviceID++;\n-        const recDeviceID = \"DEV-\" + this.deviceID;\n-        console.log(\"this.deviceID = \" + this.deviceID);\n-\n-        const device = {\n-            deviceID: recDeviceID,\n-            docType: \"device\",\n-            brand: brand,\n-            model: model,\n-            macAddress: MAC,\n-            powerType: powerType,\n-            inUse: false,\n-            location: { \n-                long: long,\n-                lat: lat\n-            }\n-        };\n-\n-        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n-\n-        console.info('============= END : Register Device ===========');\n-    }\n-\n     async assignController(ctx, deviceID, controllerID) {\n         console.info('============= START : Assign Controller ===========');\n \n@@ -129,6 +125,32 @@ class ControllerDeviceContract extends Contract {\n         console.info('============= END : Change Controller ===========');\n     }\n \n+    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n+        console.info('============= START : Register Device ===========');\n+\n+        this.deviceID++;\n+        const recDeviceID = \"DEV-\" + this.deviceID;\n+        console.log(\"this.deviceID = \" + this.deviceID);\n+\n+        const device = {\n+            deviceID: recDeviceID,\n+            docType: \"device\",\n+            brand: brand,\n+            model: model,\n+            macAddress: MAC,\n+            powerType: powerType,\n+            inUse: false,\n+            location: { \n+                long: long,\n+                lat: lat\n+            }\n+        };\n+\n+        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Register Device ===========');\n+    }\n+\n     async getDeviceController(ctx, deviceID) {\n         console.info('============= START : Get Device Controller ===========');\n \n@@ -238,33 +260,6 @@ class ControllerDeviceContract extends Contract {\n         return JSON.stringify(allResults);\n     }\n \n-    async getAllControllers(ctx) {\n-        console.info('============= START : Get All Controllers ===========');\n-\n-        let queryString = {\n-            \"selector\": {\n-                \"docType\":\"controller\"\n-            }\n-        };\n-\n-        const allResults = [];\n-\n-        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n-            const strValue = Buffer.from(value).toString('utf8');\n-            let record;\n-            try {\n-                record = JSON.parse(strValue);\n-            } catch (err) {\n-                console.log(err);\n-                record = strValue;\n-            }\n-            allResults.push({ Key: key, Record: record });\n-        }\n-        console.info(allResults);\n-        console.info('============= END : Get All Controllers ===========');\n-        return JSON.stringify(allResults);\n-    }\n-\n     async updateDevice(ctx, deviceID, currentTemp) {\n         console.info('============= START : Update Device ===========');\n "
}
]
},
{
"commit_sha":"b7505647176a2620931b555e6f52b47b59ceb5c9",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmI3NTA1NjQ3MTc2YTI2MjA5MzFiNTU1ZTZmNTJiNDdiNTljZWI1Yzk=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/b7505647176a2620931b555e6f52b47b59ceb5c9",
"commit_date":"2021-03-05T00:28:56Z",
"files":[
{
"sha":"ca6c69e30caab63b68a327350c129bb4127492ac",
"filename":"backend/bin/www",
"status":"added",
"additions":90,
"deletions":0,
"changes":90,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/b7505647176a2620931b555e6f52b47b59ceb5c9/backend/bin/www",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/b7505647176a2620931b555e6f52b47b59ceb5c9/backend/bin/www",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/bin/www?ref=b7505647176a2620931b555e6f52b47b59ceb5c9",
"patch":"@@ -0,0 +1,90 @@\n+#!/usr/bin/env node\n+\n+/**\n+ * Module dependencies.\n+ */\n+\n+var app = require('../app');\n+var debug = require('debug')('evchargerreg:server');\n+var http = require('http');\n+\n+/**\n+ * Get port from environment and store in Express.\n+ */\n+\n+var port = normalizePort(process.env.PORT || '3000');\n+app.set('port', port);\n+\n+/**\n+ * Create HTTP server.\n+ */\n+\n+var server = http.createServer(app);\n+\n+/**\n+ * Listen on provided port, on all network interfaces.\n+ */\n+\n+server.listen(port);\n+server.on('error', onError);\n+server.on('listening', onListening);\n+\n+/**\n+ * Normalize a port into a number, string, or false.\n+ */\n+\n+function normalizePort(val) {\n+  var port = parseInt(val, 10);\n+\n+  if (isNaN(port)) {\n+    // named pipe\n+    return val;\n+  }\n+\n+  if (port >= 0) {\n+    // port number\n+    return port;\n+  }\n+\n+  return false;\n+}\n+\n+/**\n+ * Event listener for HTTP server \"error\" event.\n+ */\n+\n+function onError(error) {\n+  if (error.syscall !== 'listen') {\n+    throw error;\n+  }\n+\n+  var bind = typeof port === 'string'\n+    ? 'Pipe ' + port\n+    : 'Port ' + port;\n+\n+  // handle specific listen errors with friendly messages\n+  switch (error.code) {\n+    case 'EACCES':\n+      console.error(bind + ' requires elevated privileges');\n+      process.exit(1);\n+      break;\n+    case 'EADDRINUSE':\n+      console.error(bind + ' is already in use');\n+      process.exit(1);\n+      break;\n+    default:\n+      throw error;\n+  }\n+}\n+\n+/**\n+ * Event listener for HTTP server \"listening\" event.\n+ */\n+\n+function onListening() {\n+  var addr = server.address();\n+  var bind = typeof addr === 'string'\n+    ? 'pipe ' + addr\n+    : 'port ' + addr.port;\n+  debug('Listening on ' + bind);\n+}"
}
]
},
{
"commit_sha":"b495c58ad61df751511cad327a445a69f8c15df3",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmI0OTVjNThhZDYxZGY3NTE1MTFjYWQzMjdhNDQ1YTY5ZjhjMTVkZjM=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/b495c58ad61df751511cad327a445a69f8c15df3",
"commit_date":"2021-03-05T00:14:42Z",
"files":[
{
"sha":"0f4ddb9a3a7a7bf93b281de29ec0b1d3cfee70cf",
"filename":".gitignore",
"status":"modified",
"additions":0,
"deletions":1,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/b495c58ad61df751511cad327a445a69f8c15df3/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/b495c58ad61df751511cad327a445a69f8c15df3/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=b495c58ad61df751511cad327a445a69f8c15df3",
"patch":"@@ -5,7 +5,6 @@\n # Vim file artifacts\n .*.sw*\n # installed platform-specific binaries\n-backend/bin\n backend/node_modules\n backend/config\n .DS_Store"
},
{
"sha":"8bde0d19440fb6add3c17a3bd0acf867a1716b42",
"filename":"backend/endpoint/mapping.js",
"status":"modified",
"additions":44,
"deletions":2,
"changes":46,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/b495c58ad61df751511cad327a445a69f8c15df3/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/b495c58ad61df751511cad327a445a69f8c15df3/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=b495c58ad61df751511cad327a445a69f8c15df3",
"patch":"@@ -96,6 +96,50 @@ async function disconnectGateway() {\n }\n \n \n+async function getAllDevices() {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getAllDevices');\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function getDevice(id) {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getDevice', id);\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+\n+async function getControllerDevices(id) {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getControllerDevices', id);\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+\n module.exports = {\n     /* controller */\n     getAllControllers: getAllControllers,\n@@ -105,6 +149,4 @@ module.exports = {\n     assignController: assignController\n \n     /* devices */\n-\n-\n }\n\\ No newline at end of file"
},
{
"sha":"a0f4aa8f1fad604b26ab32814f100bbcfe932fab",
"filename":"backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"status":"modified",
"additions":8,
"deletions":8,
"changes":16,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/b495c58ad61df751511cad327a445a69f8c15df3/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/b495c58ad61df751511cad327a445a69f8c15df3/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json?ref=b495c58ad61df751511cad327a445a69f8c15df3",
"patch":"@@ -1,7 +1,7 @@\n {\n     \"certificateAuthorities\": {\n-        \"org1ca-api.127-0-0-1.nip.io:8080\": {\n-            \"url\": \"http://org1ca-api.127-0-0-1.nip.io:8080\"\n+        \"org1ca-api.127-0-0-1.nip.io:8081\": {\n+            \"url\": \"http://org1ca-api.127-0-0-1.nip.io:8081\"\n         }\n     },\n     \"client\": {\n@@ -21,21 +21,21 @@\n     \"organizations\": {\n         \"Org1\": {\n             \"certificateAuthorities\": [\n-                \"org1ca-api.127-0-0-1.nip.io:8080\"\n+                \"org1ca-api.127-0-0-1.nip.io:8081\"\n             ],\n             \"mspid\": \"Org1MSP\",\n             \"peers\": [\n-                \"org1peer-api.127-0-0-1.nip.io:8080\"\n+                \"org1peer-api.127-0-0-1.nip.io:8081\"\n             ]\n         }\n     },\n     \"peers\": {\n-        \"org1peer-api.127-0-0-1.nip.io:8080\": {\n+        \"org1peer-api.127-0-0-1.nip.io:8081\": {\n             \"grpcOptions\": {\n-                \"grpc.default_authority\": \"org1peer-api.127-0-0-1.nip.io:8080\",\n-                \"grpc.ssl_target_name_override\": \"org1peer-api.127-0-0-1.nip.io:8080\"\n+                \"grpc.default_authority\": \"org1peer-api.127-0-0-1.nip.io:8081\",\n+                \"grpc.ssl_target_name_override\": \"org1peer-api.127-0-0-1.nip.io:8081\"\n             },\n-            \"url\": \"grpc://org1peer-api.127-0-0-1.nip.io:8080\"\n+            \"url\": \"grpc://org1peer-api.127-0-0-1.nip.io:8081\"\n         }\n     },\n     \"type\": \"gateway\","
},
{
"sha":"d0b244809c2f7b88d786b7c28b7fb89fba2fc628",
"filename":"backend/routes/controller.js",
"status":"modified",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/b495c58ad61df751511cad327a445a69f8c15df3/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/b495c58ad61df751511cad327a445a69f8c15df3/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=b495c58ad61df751511cad327a445a69f8c15df3",
"patch":"@@ -27,4 +27,5 @@ router.post('/assign', async (req, res, next) => {\n     const result = await connector.ass(req.body.controllerID, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n });\n \n+\n module.exports = router;"
},
{
"sha":"2f873fb79ddae072de4de5b87ffcb815dece6dcb",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":9,
"deletions":1,
"changes":10,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/b495c58ad61df751511cad327a445a69f8c15df3/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/b495c58ad61df751511cad327a445a69f8c15df3/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=b495c58ad61df751511cad327a445a69f8c15df3",
"patch":"@@ -6,7 +6,15 @@ const connector = require('../endpoint/mapping')\n \n /* GET query listing. */\n router.get('/all', async function(req, res, next) {\n-    res.json('{\"dummy\":\"test\"}');\n+    const result = await connector.getAllDevices();\n+    res.json(result); \n });\n \n+router.get('/device', async function(req, res, next) {\n+    //let queryObj = req.query;\n+    const result = await connector.getDevice(req.body.deviceId);\n+    res.json(result); \n+});\n+\n+\n module.exports = router;\n\\ No newline at end of file"
},
{
"sha":"8dfd9af11367f19a009e59733f2fe476f0bf4708",
"filename":"backend/wallet/Org1/Org1 Admin.id",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/b495c58ad61df751511cad327a445a69f8c15df3/backend/wallet/Org1/Org1%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/b495c58ad61df751511cad327a445a69f8c15df3/backend/wallet/Org1/Org1%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20Admin.id?ref=b495c58ad61df751511cad327a445a69f8c15df3",
"patch":"@@ -1 +1 @@\n-{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBzzCCAXWgAwIBAgIRAIzAdHuSR2vloZAbbRJf+e8wCgYIKoZIzj0EAwIwEjEQ\\nMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDMwMDQ4MjJaFw0zMTAzMDEwMDQ4MjJa\\nMCUxDjAMBgNVBAsTBWFkbWluMRMwEQYDVQQDEwpPcmcxIEFkbWluMFkwEwYHKoZI\\nzj0CAQYIKoZIzj0DAQcDQgAEa+bKCEg8oC9a+EyAI6X9XlFngyOq3Kh2F1MvHj1z\\nycf7a4wCMUsSCKnr1dSwHniWRs3GDYn6ZbUVpnOGU5GUS6OBmDCBlTAOBgNVHQ8B\\nAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMAwGA1UdEwEB\\n/wQCMAAwKQYDVR0OBCIEIGDd9Zp9FOlUrUDJupvhHM0BNCgbW9jUiHTK1UaIYySM\\nMCsGA1UdIwQkMCKAIPQ6+hXejfBarSeHKFZeMwXFFynuDWSPjVH21j4oOESWMAoG\\nCCqGSM49BAMCA0gAMEUCIQDMkV3r7SmeZnEOhxi/4N+p7uCvty4XuGIvTomLfZWD\\nmwIgQrKtGXbbYj//Vx2cV8N5Rdwh1fyTqeAooUs8hoYK9XQ=\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgkWdFwgZrUZrFq7OG\\nU3nSvbHwuFQ92g/es6Brdq9D7L2hRANCAARr5soISDygL1r4TIAjpf1eUWeDI6rc\\nqHYXUy8ePXPJx/trjAIxSxIIqevV1LAeeJZGzcYNifpltRWmc4ZTkZRL\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file\n+{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBzjCCAXSgAwIBAgIQMXHE2o7nB/MbM06fHvykvTAKBggqhkjOPQQDAjASMRAw\\nDgYDVQQDEwdPcmcxIENBMB4XDTIxMDMwNDIwNDYwMloXDTMxMDMwMjIwNDYwMlow\\nJTEOMAwGA1UECxMFYWRtaW4xEzARBgNVBAMTCk9yZzEgQWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAScOr0TnqWDyAYRSTmOiWdb8zaHCBRQvE2JdOmi/qaD\\nL+nxIbM9huZ6oquDj6dZ5EPLV5W8ablz4n6MZFSL5ukko4GYMIGVMA4GA1UdDwEB\\n/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwDAYDVR0TAQH/\\nBAIwADApBgNVHQ4EIgQgPI2bWZA0qW+WY2cE8o/qN0sqq39kZXop8Whc9/U4ZuMw\\nKwYDVR0jBCQwIoAgAToqafW82VnK2eyhVuvp0GB8Ni7L2WiPf3FgDx2x+YkwCgYI\\nKoZIzj0EAwIDSAAwRQIhANgPkZSyMFtwxoZWiuBsqxM6QRjRgSyqoOmeNfivCXJc\\nAiA745JwCGY5NE8+TKOmBe7+wESRcA0EGOcnBrnalDjbvw==\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgvC6VRtk2NjVrSgNQ\\nv1Gw5Qbhg3QgrOn/8f2+c8/D9X2hRANCAAScOr0TnqWDyAYRSTmOiWdb8zaHCBRQ\\nvE2JdOmi/qaDL+nxIbM9huZ6oquDj6dZ5EPLV5W8ablz4n6MZFSL5ukk\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"62a5e3e77952679c38b8e0769c1ad973c27b2fe4",
"filename":"backend/wallet/Org1/Org1 CA Admin.id",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/b495c58ad61df751511cad327a445a69f8c15df3/backend/wallet/Org1/Org1%20CA%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/b495c58ad61df751511cad327a445a69f8c15df3/backend/wallet/Org1/Org1%20CA%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20CA%20Admin.id?ref=b495c58ad61df751511cad327a445a69f8c15df3",
"patch":"@@ -1 +1 @@\n-{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBoDCCAUegAwIBAgIUG2dzgvKvyvXJrXZZQxeQ/G6JCl8wCgYIKoZIzj0EAwIw\\nEjEQMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDMwMDQ4MDBaFw0yMjAzMDMwMDUz\\nMDBaMCExDzANBgNVBAsTBmNsaWVudDEOMAwGA1UEAxMFYWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAATF6c4CEbMtWjOufyfB8yQo34DTEpY1R0ajsM4rlAoT\\n2yynBeHPtTFHETgJGPLOTxEEuDIboeZylrVbf4J/CkY6o2wwajAOBgNVHQ8BAf8E\\nBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUS2zao98Kd/VnymWeD8+KpJVn\\nKf0wKwYDVR0jBCQwIoAg9Dr6Fd6N8FqtJ4coVl4zBcUXKe4NZI+NUfbWPig4RJYw\\nCgYIKoZIzj0EAwIDRwAwRAIgVyv78OkHzKD0USQ+rSxK7OIYB1CKXLOcILSJLv4c\\nUngCIC/RUJwHWFANfr7KC81znk3EXbP3WK1F5kpLhRY01P1A\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgIvK6DzpJr1lodOQm\\nJZWEzDAU8KrdmwpaH8tBPRrhgYyhRANCAATF6c4CEbMtWjOufyfB8yQo34DTEpY1\\nR0ajsM4rlAoT2yynBeHPtTFHETgJGPLOTxEEuDIboeZylrVbf4J/CkY6\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file\n+{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBoTCCAUegAwIBAgIUG3zv4ODuuykGTsHpYnUPZYBLXDIwCgYIKoZIzj0EAwIw\\nEjEQMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDQyMDQ2MDBaFw0yMjAzMDQyMDUx\\nMDBaMCExDzANBgNVBAsTBmNsaWVudDEOMAwGA1UEAxMFYWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAT6wIjqQlcXPCsmGp5vO/axqILu1X0ftaTTqlviLLIn\\nseTCFwWZMmizzKNuvrHnPnH6TKCrf8ODQ12urfkhXrW3o2wwajAOBgNVHQ8BAf8E\\nBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQU2fKkgHZWwJw5RY7/TVfp8fg4\\nSUwwKwYDVR0jBCQwIoAgAToqafW82VnK2eyhVuvp0GB8Ni7L2WiPf3FgDx2x+Ykw\\nCgYIKoZIzj0EAwIDSAAwRQIhAPkLBMjzyG0wv4yd/3E0BY+CEsizSmYCOl2Hcsng\\nkWrCAiA7nH48ALMvum8B20QmkbYfMRVQjC9aTbAGosa/ozXzpA==\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgOO5NGzguj7TqmMYU\\nap848RnXcXau7ZoRCIN3L+F+uYuhRANCAAT6wIjqQlcXPCsmGp5vO/axqILu1X0f\\ntaTTqlviLLInseTCFwWZMmizzKNuvrHnPnH6TKCrf8ODQ12urfkhXrW3\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"fd2d4fe2ce216120428499c4bd6f2f108e0feedd",
"filename":"chaincode/package.json",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/b495c58ad61df751511cad327a445a69f8c15df3/chaincode/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/b495c58ad61df751511cad327a445a69f8c15df3/chaincode/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/package.json?ref=b495c58ad61df751511cad327a445a69f8c15df3",
"patch":"@@ -1,6 +1,6 @@\n {\n   \"name\": \"EVChargerReg\",\n-  \"version\": \"0.0.12\",\n+  \"version\": \"0.0.0\",\n   \"description\": \"My Smart Contract\",\n   \"main\": \"index.js\",\n   \"engines\": {"
}
]
},
{
"commit_sha":"928d99cb640da9eba8e8b10ee5955703ceaf57a1",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjkyOGQ5OWNiNjQwZGE5ZWJhOGU4YjEwZWU1OTU1NzAzY2VhZjU3YTE=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/928d99cb640da9eba8e8b10ee5955703ceaf57a1",
"commit_date":"2021-03-05T00:07:51Z",
"files":[
{
"sha":"cc1a611fad5061d3e2726ec8e261ffa52148074e",
"filename":"backend/bin/www",
"status":"added",
"additions":90,
"deletions":0,
"changes":90,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/928d99cb640da9eba8e8b10ee5955703ceaf57a1/backend/bin/www",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/928d99cb640da9eba8e8b10ee5955703ceaf57a1/backend/bin/www",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/bin/www?ref=928d99cb640da9eba8e8b10ee5955703ceaf57a1",
"patch":"@@ -0,0 +1,90 @@\n+#!/usr/bin/env node\n+\n+/**\n+ * Module dependencies.\n+ */\n+\n+var app = require('../app');\n+var debug = require('debug')('evchargerreg-server');\n+var http = require('http');\n+\n+/**\n+ * Get port from environment and store in Express.\n+ */\n+\n+var port = normalizePort(process.env.PORT || '8000');\n+app.set('port', port);\n+\n+/**\n+ * Create HTTP server.\n+ */\n+\n+var server = http.createServer(app);\n+\n+/**\n+ * Listen on provided port, on all network interfaces.\n+ */\n+\n+server.listen(port);\n+server.on('error', onError);\n+server.on('listening', onListening);\n+\n+/**\n+ * Normalize a port into a number, string, or false.\n+ */\n+\n+function normalizePort(val) {\n+  var port = parseInt(val, 10);\n+\n+  if (isNaN(port)) {\n+    // named pipe\n+    return val;\n+  }\n+\n+  if (port >= 0) {\n+    // port number\n+    return port;\n+  }\n+\n+  return false;\n+}\n+\n+/**\n+ * Event listener for HTTP server \"error\" event.\n+ */\n+\n+function onError(error) {\n+  if (error.syscall !== 'listen') {\n+    throw error;\n+  }\n+\n+  var bind = typeof port === 'string'\n+    ? 'Pipe ' + port\n+    : 'Port ' + port;\n+\n+  // handle specific listen errors with friendly messages\n+  switch (error.code) {\n+    case 'EACCES':\n+      console.error(bind + ' requires elevated privileges');\n+      process.exit(1);\n+      break;\n+    case 'EADDRINUSE':\n+      console.error(bind + ' is already in use');\n+      process.exit(1);\n+      break;\n+    default:\n+      throw error;\n+  }\n+}\n+\n+/**\n+ * Event listener for HTTP server \"listening\" event.\n+ */\n+\n+function onListening() {\n+  var addr = server.address();\n+  var bind = typeof addr === 'string'\n+    ? 'pipe ' + addr\n+    : 'port ' + addr.port;\n+  debug('Listening on ' + bind);\n+}"
},
{
"sha":"228b900bedbae954fd90d3c5db27719cc3b39046",
"filename":"backend/endpoint/mapping.js",
"status":"renamed",
"additions":47,
"deletions":3,
"changes":50,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/928d99cb640da9eba8e8b10ee5955703ceaf57a1/backend/endpoint/mapping.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/928d99cb640da9eba8e8b10ee5955703ceaf57a1/backend/endpoint/mapping.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/endpoint/mapping.js?ref=928d99cb640da9eba8e8b10ee5955703ceaf57a1",
"patch":"@@ -43,10 +43,46 @@ async function getAllControllers() {\n     return JSON.parse(result.toString());\n }\n \n-async function registerController(cn, sp, long, lat) {\n+async function registerController(controllerName, serProvider, long, lat) {\n     const contract = await init();\n     try {\n-        await contract.submitTransaction('registerController', cn, sp, long, lat);\n+        await contract.submitTransaction('registerController', controllerName, serProvider, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function updateController(controllerID, serProvider, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('updateController', controllerID, serProvider, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function changeController(deviceID, newControllerID) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('changeController', deviceID, newControllerID);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function assignController(deviceID, controllerID) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('assignController', deviceID, controllerID);\n     } catch (error) {\n         console.error('Failed to submit transaction:', error);\n         process.exit(1);\n@@ -61,6 +97,14 @@ async function disconnectGateway() {\n \n \n module.exports = {\n+    /* controller */\n     getAllControllers: getAllControllers,\n-    registerController: registerController\n+    registerController: registerController, \n+    updateController: updateController, \n+    changeController: changeController,\n+    assignController: assignController\n+\n+    /* devices */\n+\n+\n }\n\\ No newline at end of file",
"previous_filename":"backend/chaincode-connector/EVChargerConnector.js"
},
{
"sha":"0fabdcc3425c7f7f776b77923637c980f03a82c6",
"filename":"backend/package.json",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/928d99cb640da9eba8e8b10ee5955703ceaf57a1/backend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/928d99cb640da9eba8e8b10ee5955703ceaf57a1/backend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/package.json?ref=928d99cb640da9eba8e8b10ee5955703ceaf57a1",
"patch":"@@ -1,5 +1,5 @@\n {\n-  \"name\": \"evchargerreg\",\n+  \"name\": \"evchargerreg-server\",\n   \"version\": \"0.0.0\",\n   \"private\": true,\n   \"scripts\": {"
},
{
"sha":"b5e8ebb09806586c969022b3f3bd5944e86e19a6",
"filename":"backend/routes/controller.js",
"status":"modified",
"additions":14,
"deletions":3,
"changes":17,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/928d99cb640da9eba8e8b10ee5955703ceaf57a1/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/928d99cb640da9eba8e8b10ee5955703ceaf57a1/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=928d99cb640da9eba8e8b10ee5955703ceaf57a1",
"patch":"@@ -1,10 +1,9 @@\n 'use strict';\n \n var express = require('express');\n-var router = express.Router();\n-var connector = require('../chaincode-connector/EVChargerConnector')\n+const router = express.Router();\n+const connector = require('../endpoint/mapping')\n \n-/* GET query listing. */\n router.get('/all', async function(req, res, next) {\n     const result = await connector.getAllControllers()\n     res.json(result); \n@@ -16,4 +15,16 @@ router.post('/register', async function(req, res, next) {\n     res.json(result); \n });\n \n+router.post('/update', async (req, res, next) => {\n+    const result = await connector.updateController(req.body.controllerID, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n+});\n+\n+router.post('/change', async (req, res, next) => {\n+    const result = await connector.changeController(req.body.deviceID, req.body.newControllerID);\n+});\n+\n+router.post('/assign', async (req, res, next) => {\n+    const result = await connector.ass(req.body.controllerID, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n+});\n+\n module.exports = router;"
},
{
"sha":"dcbdb3bef82d59c26d2a1bad565132388a36a4c2",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/928d99cb640da9eba8e8b10ee5955703ceaf57a1/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/928d99cb640da9eba8e8b10ee5955703ceaf57a1/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=928d99cb640da9eba8e8b10ee5955703ceaf57a1",
"patch":"@@ -2,7 +2,7 @@\n \n var express = require('express');\n var router = express.Router();\n-var connector = require('../chaincode-connector/EVChargerConnector')\n+const connector = require('../endpoint/mapping')\n \n /* GET query listing. */\n router.get('/all', async function(req, res, next) {"
},
{
"sha":"5be29180402540f8b1cf369551936cc6cd9e00b9",
"filename":"chaincode/lib/controller-device-contract.js",
"status":"modified",
"additions":53,
"deletions":58,
"changes":111,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/928d99cb640da9eba8e8b10ee5955703ceaf57a1/chaincode/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/928d99cb640da9eba8e8b10ee5955703ceaf57a1/chaincode/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/lib/controller-device-contract.js?ref=928d99cb640da9eba8e8b10ee5955703ceaf57a1",
"patch":"@@ -27,14 +27,36 @@ class ControllerDeviceContract extends Contract {\n         console.info('============= END : Initialize Ledger ===========');\n     }\n \n+    async getAllControllers(ctx) {\n+        console.info('============= START : Get All Controllers ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"controller\"\n+            }\n+        };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Controllers ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n     async registerController(ctx, controllerName, serviceProvider, long, lat) {\n         console.info('============= START : Register Controller ===========');\n \n-        /*\n-        FIX: Controller ID can be converted to auto-increment internally\n-             docType: 'controller' (Review the need for docType attribute)\n-        */\n-\n         this.controllerID++;\n         const recControllerID = \"CONTR-\" + this.controllerID;\n         console.log(\"this.controllerID = \" + this.controllerID);\n@@ -71,32 +93,6 @@ class ControllerDeviceContract extends Contract {\n         console.info('============= END : Update Controller ===========');\n     }\n \n-    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n-        console.info('============= START : Register Device ===========');\n-\n-        this.deviceID++;\n-        const recDeviceID = \"DEV-\" + this.deviceID;\n-        console.log(\"this.deviceID = \" + this.deviceID);\n-\n-        const device = {\n-            deviceID: recDeviceID,\n-            docType: \"device\",\n-            brand: brand,\n-            model: model,\n-            macAddress: MAC,\n-            powerType: powerType,\n-            inUse: false,\n-            location: { \n-                long: long,\n-                lat: lat\n-            }\n-        };\n-\n-        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n-\n-        console.info('============= END : Register Device ===========');\n-    }\n-\n     async assignController(ctx, deviceID, controllerID) {\n         console.info('============= START : Assign Controller ===========');\n \n@@ -129,6 +125,32 @@ class ControllerDeviceContract extends Contract {\n         console.info('============= END : Change Controller ===========');\n     }\n \n+    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n+        console.info('============= START : Register Device ===========');\n+\n+        this.deviceID++;\n+        const recDeviceID = \"DEV-\" + this.deviceID;\n+        console.log(\"this.deviceID = \" + this.deviceID);\n+\n+        const device = {\n+            deviceID: recDeviceID,\n+            docType: \"device\",\n+            brand: brand,\n+            model: model,\n+            macAddress: MAC,\n+            powerType: powerType,\n+            inUse: false,\n+            location: { \n+                long: long,\n+                lat: lat\n+            }\n+        };\n+\n+        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Register Device ===========');\n+    }\n+\n     async getDeviceController(ctx, deviceID) {\n         console.info('============= START : Get Device Controller ===========');\n \n@@ -238,33 +260,6 @@ class ControllerDeviceContract extends Contract {\n         return JSON.stringify(allResults);\n     }\n \n-    async getAllControllers(ctx) {\n-        console.info('============= START : Get All Controllers ===========');\n-\n-        let queryString = {\n-            \"selector\": {\n-                \"docType\":\"controller\"\n-            }\n-        };\n-\n-        const allResults = [];\n-\n-        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n-            const strValue = Buffer.from(value).toString('utf8');\n-            let record;\n-            try {\n-                record = JSON.parse(strValue);\n-            } catch (err) {\n-                console.log(err);\n-                record = strValue;\n-            }\n-            allResults.push({ Key: key, Record: record });\n-        }\n-        console.info(allResults);\n-        console.info('============= END : Get All Controllers ===========');\n-        return JSON.stringify(allResults);\n-    }\n-\n     async updateDevice(ctx, deviceID, currentTemp) {\n         console.info('============= START : Update Device ===========');\n "
}
]
},
{
"commit_sha":"113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjExM2U5ZWRjMjQxN2ZhNDZlNmVlMjZjYTJiNTA3OThhNDJjZmM2NTc=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"commit_date":"2021-03-05T00:05:31Z",
"files":[
{
"sha":"0f4ddb9a3a7a7bf93b281de29ec0b1d3cfee70cf",
"filename":".gitignore",
"status":"modified",
"additions":79,
"deletions":4,
"changes":83,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -5,17 +5,92 @@\n # Vim file artifacts\n .*.sw*\n # installed platform-specific binaries\n-/backend/bin\n-/config\n+backend/node_modules\n+backend/config\n .DS_Store\n .project\n+\n # omit Go vendor directories\n vendor/\n .vscode\n .gradle\n .idea\n-# Dependency directories\n-node_modules/\n+\n # Ignore Gradle build output directory\n build\n package-lock.json\n+\n+# Logs\n+logs\n+*.log\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\n+*.pid.lock\n+\n+# Directory for instrumented libs generated by jscoverage/JSCover\n+lib-cov\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+\n+# nyc test coverage\n+.nyc_output\n+\n+# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n+.grunt\n+\n+# Bower dependency directory (https://bower.io/)\n+bower_components\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Compiled binary addons (https://nodejs.org/api/addons.html)\n+build/Release\n+\n+# Dependency directories\n+chaincode/node_modules/\n+chaincode/jspm_packages/\n+\n+# TypeScript v1 declaration files\n+chaincode/typings/\n+\n+# Optional npm cache directory\n+chaincode/.npm\n+\n+# Optional eslint cache\n+chaincode/.eslintcache\n+\n+# Optional REPL history\n+chaincode/.node_repl_history\n+\n+# Output of 'npm pack'\n+chaincode/*.tgz\n+\n+# Yarn Integrity file\n+chaincode/.yarn-integrity\n+\n+# dotenv environment variables file\n+chaincode/.env\n+\n+# parcel-bundler cache (https://parceljs.org/)\n+chaincode/.cache\n+\n+# next.js build output\n+chaincode/.next\n+\n+# nuxt.js build output\n+chaincode/.nuxt\n+\n+# vuepress build output\n+chaincode/.vuepress/dist\n+\n+# Serverless directories\n+chaincode/.serverless\n+"
},
{
"sha":"7dabecc1a5e23c53d84522348cc4ec69f5cb5415",
"filename":"LICENSE",
"status":"removed",
"additions":0,
"deletions":21,
"changes":21,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/28ec96ce410f3c7f659533b34ef4b13b839c8c3c/LICENSE",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/28ec96ce410f3c7f659533b34ef4b13b839c8c3c/LICENSE",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/LICENSE?ref=28ec96ce410f3c7f659533b34ef4b13b839c8c3c",
"patch":"@@ -1,21 +0,0 @@\n-MIT License\n-\n-Copyright (c) 2021 TRung [Rocky] N.G.O\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in all\n-copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n-SOFTWARE."
},
{
"sha":"b7fcaf82d7076abb2575ed7616c5ef1cb7f7fbce",
"filename":"README.md",
"status":"removed",
"additions":0,
"deletions":2,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/28ec96ce410f3c7f659533b34ef4b13b839c8c3c/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/28ec96ce410f3c7f659533b34ef4b13b839c8c3c/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=28ec96ce410f3c7f659533b34ef4b13b839c8c3c",
"patch":"@@ -1,2 +0,0 @@\n-# EVChargerReg\n-the fully prototyped permissioned blockchain based on the Hyperledger Fabric to register devices and controllers for electric vehicles "
},
{
"sha":"82b5ce861386f5c8691ed8486ffd36ddc17f7421",
"filename":"backend/README.md",
"status":"added",
"additions":3,
"deletions":0,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/README.md?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,3 @@\n+# EVChargerReg Backend App\n+\n+<h2> How to run guide </h2>\n\\ No newline at end of file"
},
{
"sha":"7aae16f70add91b4c4e024bbdd0dc21940adc2d1",
"filename":"backend/app.js",
"status":"added",
"additions":50,
"deletions":0,
"changes":50,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/app.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/app.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/app.js?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,50 @@\n+var createError = require('http-errors');\n+var express = require('express');\n+var path = require('path');\n+var cookieParser = require('cookie-parser');\n+var logger = require('morgan');\n+const bodyParser = require('body-parser');\n+\n+var controllerRouter = require('./routes/controller');\n+var deviceRouter = require('./routes/device');\n+\n+var indexRouter = require('./routes');\n+var usersRouter = require('./routes/users');\n+\n+var app = express();\n+\n+app.use(bodyParser.urlencoded());\n+app.use(bodyParser.json());\n+\n+// view engine setup\n+app.set('views', path.join(__dirname, 'views'));\n+app.set('view engine', 'jade');\n+\n+app.use(logger('dev'));\n+app.use(express.json());\n+app.use(express.urlencoded({ extended: false }));\n+app.use(cookieParser());\n+app.use(express.static(path.join(__dirname, 'public')));\n+\n+app.use('/', indexRouter);\n+app.use('/users', usersRouter);\n+app.use('/controller', controllerRouter);\n+app.use('/device', deviceRouter);\n+\n+// catch 404 and forward to error handler\n+app.use(function(req, res, next) {\n+  next(createError(404));\n+});\n+\n+// error handler\n+app.use(function(err, req, res, next) {\n+  // set locals, only providing error in development\n+  res.locals.message = err.message;\n+  res.locals.error = req.app.get('env') === 'development' ? err : {};\n+\n+  // render the error page\n+  res.status(err.status || 500);\n+  res.render('error');\n+});\n+\n+module.exports = app;"
},
{
"sha":"88bcd5f841df2f1c79bf58b8c8f114327f798565",
"filename":"backend/chaincode-connector/EVChargerConnector.js",
"status":"added",
"additions":113,
"deletions":0,
"changes":113,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/chaincode-connector/EVChargerConnector.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/chaincode-connector/EVChargerConnector.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/chaincode-connector/EVChargerConnector.js?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,113 @@\n+let gateway; \n+\n+async function init() {\n+    let contract;\n+    try {\n+        const { Wallets } = require('fabric-network');\n+        const { Gateway } = require('fabric-network'); //Creates a new gateway and use it to connect to the network\n+        const path = require('path');\n+        const fs = require('fs');\n+    \n+        const walletPath = path.join(process.cwd(), './wallet/Org1');\n+        const wallet = await Wallets.newFileSystemWallet(walletPath);\n+        gateway = new Gateway();\n+        const connectionProfilePath = path.resolve(__dirname, '../gateway', '1OrgLocalFabricOrg1GatewayConnection.json');\n+        const connectionProfile = JSON.parse(fs.readFileSync(connectionProfilePath, 'utf8'));\n+        const connectionOptions = {\n+            wallet, identity: 'Org1 Admin', discovery:\n+                { enabled: true, asLocalhost: true }\n+        };\n+        await gateway.connect(connectionProfile, connectionOptions);\n+        // Get the network (channel) our contract is deployed to.\n+        const network = await gateway.getNetwork('mychannel');\n+        // Get the contract from the network.\n+        contract = network.getContract('EVChargerReg');\n+        return contract;\n+    } catch (error) {\n+        console.error('Failed to initialize transaction:', error);\n+        process.exit(1);\n+    }\n+}\n+\n+async function getAllControllers() {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getAllControllers');\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function registerController(cn, sp, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('registerController', cn, sp, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function disconnectGateway() {\n+    gateway.disconnect();\n+}\n+\n+\n+async function getAllDevices() {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getAllDevices');\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function getDevice(id) {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getDevice', id);\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+\n+async function getControllerDevices(id) {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getControllerDevices', id);\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+\n+module.exports = {\n+    getAllControllers: getAllControllers,\n+    registerController: registerController,\n+    getAllDevices: getAllDevices,\n+    getDevice: getDevice,\n+    getControllerDevices: getControllerDevices\n+}\n\\ No newline at end of file"
},
{
"sha":"d965c7917aff96e0aa4538da4e6e07b958b51267",
"filename":"backend/connection.js",
"status":"added",
"additions":38,
"deletions":0,
"changes":38,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/connection.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/connection.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/connection.js?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,38 @@\n+import { Gateway, Wallets } from 'fabric-network';\n+import * as path from 'path';\n+import * as fs from 'fs';\n+\n+async function main() {\n+    try {\n+        // Create a new file system based wallet for managing identities.\n+        const walletPath = path.join(process.cwd(), 'Org1');\n+\n+        const wallet = await Wallets.newFileSystemWallet(walletPath);\n+        console.log(`Wallet path: ${walletPath}`);\n+        // Create a new gateway for connecting to our peer node.\n+        const gateway = new Gateway();\n+        const connectionProfilePath = path.resolve(__dirname, '../gateway', '1OrgLocalFabricOrg1GatewayConnection.json');\n+        const connectionProfile = JSON.parse(fs.readFileSync(connectionProfilePath, 'utf8'));\n+        const connectionOptions = {\n+            wallet, identity: 'Org1 Admin', discovery:\n+                { enabled: true, asLocalhost: true }\n+        };\n+        await gateway.connect(connectionProfile, connectionOptions);\n+        // Get the network (channel) our contract is deployed to.\n+        const network = await gateway.getNetwork('mychannel');\n+        // Get the contract from the network.\n+        const contract = network.getContract('controller-device-contract');\n+        // Submit the specified transaction.\n+        await contract.submitTransaction('registerController', 'Test Controller from NodeJS', 'SP from NodeJS', '10', '20');\n+        console.log('Transaction has been submitted');\n+        // Disconnect from the gateway.\n+        gateway.disconnect();\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+}\n+\n+module.exports = {\n+    main: main\n+}\n\\ No newline at end of file"
},
{
"sha":"a0f4aa8f1fad604b26ab32814f100bbcfe932fab",
"filename":"backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"status":"added",
"additions":43,
"deletions":0,
"changes":43,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,43 @@\n+{\n+    \"certificateAuthorities\": {\n+        \"org1ca-api.127-0-0-1.nip.io:8081\": {\n+            \"url\": \"http://org1ca-api.127-0-0-1.nip.io:8081\"\n+        }\n+    },\n+    \"client\": {\n+        \"connection\": {\n+            \"timeout\": {\n+                \"orderer\": \"300\",\n+                \"peer\": {\n+                    \"endorser\": \"300\"\n+                }\n+            }\n+        },\n+        \"organization\": \"Org1\"\n+    },\n+    \"display_name\": \"Org1 Gateway\",\n+    \"id\": \"org1gateway\",\n+    \"name\": \"Org1 Gateway\",\n+    \"organizations\": {\n+        \"Org1\": {\n+            \"certificateAuthorities\": [\n+                \"org1ca-api.127-0-0-1.nip.io:8081\"\n+            ],\n+            \"mspid\": \"Org1MSP\",\n+            \"peers\": [\n+                \"org1peer-api.127-0-0-1.nip.io:8081\"\n+            ]\n+        }\n+    },\n+    \"peers\": {\n+        \"org1peer-api.127-0-0-1.nip.io:8081\": {\n+            \"grpcOptions\": {\n+                \"grpc.default_authority\": \"org1peer-api.127-0-0-1.nip.io:8081\",\n+                \"grpc.ssl_target_name_override\": \"org1peer-api.127-0-0-1.nip.io:8081\"\n+            },\n+            \"url\": \"grpc://org1peer-api.127-0-0-1.nip.io:8081\"\n+        }\n+    },\n+    \"type\": \"gateway\",\n+    \"version\": \"1.0\"\n+}\n\\ No newline at end of file"
},
{
"sha":"4ef35fc27847adfcd4ad8a83061aad0ef82cebc5",
"filename":"backend/package.json",
"status":"added",
"additions":18,
"deletions":0,
"changes":18,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/package.json?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,18 @@\n+{\n+  \"name\": \"evchargerreg\",\n+  \"version\": \"0.0.0\",\n+  \"private\": true,\n+  \"scripts\": {\n+    \"start\": \"node bin/www\"\n+  },\n+  \"dependencies\": {\n+    \"body-parser\": \"^1.18.3\",\n+    \"cookie-parser\": \"~1.4.4\",\n+    \"debug\": \"~2.6.9\",\n+    \"express\": \"~4.16.1\",\n+    \"fabric-network\": \"^2.2.5\",\n+    \"http-errors\": \"~1.6.3\",\n+    \"jade\": \"~1.11.0\",\n+    \"morgan\": \"~1.9.1\"\n+  }\n+}"
},
{
"sha":"9453385b9916ce9bc5e88d2f5d8cd8a554223590",
"filename":"backend/public/stylesheets/style.css",
"status":"added",
"additions":8,
"deletions":0,
"changes":8,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/public/stylesheets/style.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/public/stylesheets/style.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/public/stylesheets/style.css?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,8 @@\n+body {\n+  padding: 50px;\n+  font: 14px \"Lucida Grande\", Helvetica, Arial, sans-serif;\n+}\n+\n+a {\n+  color: #00B7FF;\n+}"
},
{
"sha":"99fe4d88c7fea404a64032b807147e7a39fffc92",
"filename":"backend/routes/controller.js",
"status":"added",
"additions":25,
"deletions":0,
"changes":25,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,25 @@\n+'use strict';\n+\n+var express = require('express');\n+var router = express.Router();\n+var connector = require('../chaincode-connector/EVChargerConnector')\n+\n+/* GET query listing. */\n+router.get('/all', async function(req, res, next) {\n+    const result = await connector.getAllControllers()\n+    res.json(result); \n+});\n+\n+router.post('/register', async function(req, res, next) {\n+    //let queryObj = req.query;\n+    const result = await connector.registerController(req.body.controllerName, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n+    res.json(result); \n+});\n+\n+router.get('/devices', async function(req, res, next) {\n+    const result = await connector.getControllerDevices(req.body.controllerId);\n+    res.json(result); \n+});\n+\n+\n+module.exports = router;"
},
{
"sha":"a0508a0047a357d80a44d206d8be4fb7fdc8107d",
"filename":"backend/routes/device.js",
"status":"added",
"additions":20,
"deletions":0,
"changes":20,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,20 @@\n+'use strict';\n+\n+var express = require('express');\n+var router = express.Router();\n+var connector = require('../chaincode-connector/EVChargerConnector')\n+\n+/* GET query listing. */\n+router.get('/all', async function(req, res, next) {\n+    const result = await connector.getAllDevices();\n+    res.json(result); \n+});\n+\n+router.get('/device', async function(req, res, next) {\n+    //let queryObj = req.query;\n+    const result = await connector.getDevice(req.body.deviceId);\n+    res.json(result); \n+});\n+\n+\n+module.exports = router;\n\\ No newline at end of file"
},
{
"sha":"ecca96a56b309a315ddf6399155fd2f953031d3b",
"filename":"backend/routes/index.js",
"status":"added",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/routes/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/routes/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/index.js?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,9 @@\n+var express = require('express');\n+var router = express.Router();\n+\n+/* GET home page. */\n+router.get('/', function(req, res, next) {\n+  res.render('index', { title: 'Express' });\n+});\n+\n+module.exports = router;"
},
{
"sha":"623e4302bee32ccc080d1c83ee2e55a426c9bac8",
"filename":"backend/routes/users.js",
"status":"added",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/routes/users.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/routes/users.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/users.js?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,9 @@\n+var express = require('express');\n+var router = express.Router();\n+\n+/* GET users listing. */\n+router.get('/', function(req, res, next) {\n+  res.send('respond with a resource');\n+});\n+\n+module.exports = router;"
},
{
"sha":"51ec12c6a26323d9f5bc51fb98cb1324a739ea4c",
"filename":"backend/views/error.jade",
"status":"added",
"additions":6,
"deletions":0,
"changes":6,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/views/error.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/views/error.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/error.jade?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,6 @@\n+extends layout\n+\n+block content\n+  h1= message\n+  h2= error.status\n+  pre #{error.stack}"
},
{
"sha":"3d63b9a044a859b59259d5e23dd4e68ec8e1f2be",
"filename":"backend/views/index.jade",
"status":"added",
"additions":5,
"deletions":0,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/views/index.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/views/index.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/index.jade?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,5 @@\n+extends layout\n+\n+block content\n+  h1= title\n+  p Welcome to #{title}"
},
{
"sha":"15af079bf7c34e638ba14844efd979ac9111628b",
"filename":"backend/views/layout.jade",
"status":"added",
"additions":7,
"deletions":0,
"changes":7,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/views/layout.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/views/layout.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/layout.jade?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,7 @@\n+doctype html\n+html\n+  head\n+    title= title\n+    link(rel='stylesheet', href='/stylesheets/style.css')\n+  body\n+    block content"
},
{
"sha":"8dfd9af11367f19a009e59733f2fe476f0bf4708",
"filename":"backend/wallet/Org1/Org1 Admin.id",
"status":"added",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/wallet/Org1/Org1%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/wallet/Org1/Org1%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20Admin.id?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1 @@\n+{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBzjCCAXSgAwIBAgIQMXHE2o7nB/MbM06fHvykvTAKBggqhkjOPQQDAjASMRAw\\nDgYDVQQDEwdPcmcxIENBMB4XDTIxMDMwNDIwNDYwMloXDTMxMDMwMjIwNDYwMlow\\nJTEOMAwGA1UECxMFYWRtaW4xEzARBgNVBAMTCk9yZzEgQWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAScOr0TnqWDyAYRSTmOiWdb8zaHCBRQvE2JdOmi/qaD\\nL+nxIbM9huZ6oquDj6dZ5EPLV5W8ablz4n6MZFSL5ukko4GYMIGVMA4GA1UdDwEB\\n/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwDAYDVR0TAQH/\\nBAIwADApBgNVHQ4EIgQgPI2bWZA0qW+WY2cE8o/qN0sqq39kZXop8Whc9/U4ZuMw\\nKwYDVR0jBCQwIoAgAToqafW82VnK2eyhVuvp0GB8Ni7L2WiPf3FgDx2x+YkwCgYI\\nKoZIzj0EAwIDSAAwRQIhANgPkZSyMFtwxoZWiuBsqxM6QRjRgSyqoOmeNfivCXJc\\nAiA745JwCGY5NE8+TKOmBe7+wESRcA0EGOcnBrnalDjbvw==\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgvC6VRtk2NjVrSgNQ\\nv1Gw5Qbhg3QgrOn/8f2+c8/D9X2hRANCAAScOr0TnqWDyAYRSTmOiWdb8zaHCBRQ\\nvE2JdOmi/qaDL+nxIbM9huZ6oquDj6dZ5EPLV5W8ablz4n6MZFSL5ukk\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"62a5e3e77952679c38b8e0769c1ad973c27b2fe4",
"filename":"backend/wallet/Org1/Org1 CA Admin.id",
"status":"added",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/wallet/Org1/Org1%20CA%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/backend/wallet/Org1/Org1%20CA%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20CA%20Admin.id?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1 @@\n+{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBoTCCAUegAwIBAgIUG3zv4ODuuykGTsHpYnUPZYBLXDIwCgYIKoZIzj0EAwIw\\nEjEQMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDQyMDQ2MDBaFw0yMjAzMDQyMDUx\\nMDBaMCExDzANBgNVBAsTBmNsaWVudDEOMAwGA1UEAxMFYWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAT6wIjqQlcXPCsmGp5vO/axqILu1X0ftaTTqlviLLIn\\nseTCFwWZMmizzKNuvrHnPnH6TKCrf8ODQ12urfkhXrW3o2wwajAOBgNVHQ8BAf8E\\nBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQU2fKkgHZWwJw5RY7/TVfp8fg4\\nSUwwKwYDVR0jBCQwIoAgAToqafW82VnK2eyhVuvp0GB8Ni7L2WiPf3FgDx2x+Ykw\\nCgYIKoZIzj0EAwIDSAAwRQIhAPkLBMjzyG0wv4yd/3E0BY+CEsizSmYCOl2Hcsng\\nkWrCAiA7nH48ALMvum8B20QmkbYfMRVQjC9aTbAGosa/ozXzpA==\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgOO5NGzguj7TqmMYU\\nap848RnXcXau7ZoRCIN3L+F+uYuhRANCAAT6wIjqQlcXPCsmGp5vO/axqILu1X0f\\ntaTTqlviLLInseTCFwWZMmizzKNuvrHnPnH6TKCrf8ODQ12urfkhXrW3\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"0dca627e1d5f360813bc0a97a77e64a33d4d4537",
"filename":"chaincode/.gitignore",
"status":"added",
"additions":96,
"deletions":0,
"changes":96,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/.gitignore?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,96 @@\n+# Emacs backup files\n+*~\n+*#\n+.#*\n+# Vim file artifacts\n+.*.sw*\n+# installed platform-specific binaries\n+/backend/bin\n+/config\n+.DS_Store\n+.project\n+# omit Go vendor directories\n+vendor/\n+.vscode\n+.gradle\n+.idea\n+# Dependency directories\n+node_modules/\n+# Ignore Gradle build output directory\n+build\n+package-lock.json\n+\n+# Logs\n+logs\n+*.log\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\n+*.pid.lock\n+\n+# Directory for instrumented libs generated by jscoverage/JSCover\n+lib-cov\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+\n+# nyc test coverage\n+.nyc_output\n+\n+# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n+.grunt\n+\n+# Bower dependency directory (https://bower.io/)\n+bower_components\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Compiled binary addons (https://nodejs.org/api/addons.html)\n+build/Release\n+\n+# Dependency directories\n+node_modules/\n+jspm_packages/\n+\n+# TypeScript v1 declaration files\n+typings/\n+\n+# Optional npm cache directory\n+.npm\n+\n+# Optional eslint cache\n+.eslintcache\n+\n+# Optional REPL history\n+.node_repl_history\n+\n+# Output of 'npm pack'\n+*.tgz\n+\n+# Yarn Integrity file\n+.yarn-integrity\n+\n+# dotenv environment variables file\n+.env\n+\n+# parcel-bundler cache (https://parceljs.org/)\n+.cache\n+\n+# next.js build output\n+.next\n+\n+# nuxt.js build output\n+.nuxt\n+\n+# vuepress build output\n+.vuepress/dist\n+\n+# Serverless directories\n+.serverless\n+"
},
{
"sha":"3de88baa9aebba42da4880518f28de80780bc9fe",
"filename":"chaincode/index.js",
"status":"added",
"additions":10,
"deletions":0,
"changes":10,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/index.js?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,10 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const ControllerDeviceContract = require('./lib/controller-device-contract');\n+\n+module.exports.ControllerDeviceContract = ControllerDeviceContract;\n+module.exports.contracts = [ ControllerDeviceContract ];"
},
{
"sha":"4ab268b6985d1714533fb40f4349b3eb3e7fe588",
"filename":"chaincode/lib/controller-device-contract.js",
"status":"added",
"additions":303,
"deletions":0,
"changes":303,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/lib/controller-device-contract.js?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,303 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const { Contract } = require('fabric-contract-api');\n+\n+class ControllerDeviceContract extends Contract {\n+\n+    controllerID = 0;\n+    deviceID = 0;\n+\n+    /*\n+        It is required for initial testing, it can be removed after UI is available.\n+    */\n+    async initLedger(ctx) {\n+        console.info('============= START : Initialize Ledger ===========');\n+\n+        \n+        const controller = {};\n+        const device = {};\n+\n+        await ctx.stub.putState(0, Buffer.from(JSON.stringify(controller)));\n+        await ctx.stub.putState(0, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Initialize Ledger ===========');\n+    }\n+\n+    async registerController(ctx, controllerName, serviceProvider, long, lat) {\n+        console.info('============= START : Register Controller ===========');\n+\n+        /*\n+        FIX: Controller ID can be converted to auto-increment internally\n+             docType: 'controller' (Review the need for docType attribute)\n+        */\n+\n+        this.controllerID++;\n+        const recControllerID = \"CONTR-\" + this.controllerID;\n+        console.log(\"this.controllerID = \" + this.controllerID);\n+\n+        const controller = {\n+            controllerID: recControllerID,\n+            docType: \"controller\",\n+            controllerName: controllerName,\n+            location: { \n+                long: long,\n+                lat: lat\n+            },\n+            serviceProvider: serviceProvider\n+        };\n+\n+        await ctx.stub.putState(recControllerID, Buffer.from(JSON.stringify(controller)));\n+        console.info('============= END : Register Controller ===========');\n+    }\n+\n+    async updateController(ctx, controllerID, serviceProvider, long, lat) {\n+        console.info('============= START : Update Controller ===========');\n+\n+        const controllerAsBytes = await ctx.stub.getState(controllerID); // get the controller from chaincode state\n+        if (!controllerAsBytes || controllerAsBytes.length === 0) {\n+            throw new Error(`${controllerID} does not exist`);\n+        }\n+\n+        const controller = JSON.parse(controllerAsBytes.toString());\n+        controller.serviceProvider = serviceProvider;\n+        controller.location.long = long;\n+        controller.location.lat = lat;\n+        \n+        await ctx.stub.putState(controllerID, Buffer.from(JSON.stringify(controller)));\n+        console.info('============= END : Update Controller ===========');\n+    }\n+\n+    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n+        console.info('============= START : Register Device ===========');\n+\n+        this.deviceID++;\n+        const recDeviceID = \"DEV-\" + this.deviceID;\n+        console.log(\"this.deviceID = \" + this.deviceID);\n+\n+        const device = {\n+            deviceID: recDeviceID,\n+            docType: \"device\",\n+            brand: brand,\n+            model: model,\n+            macAddress: MAC,\n+            powerType: powerType,\n+            inUse: false,\n+            location: { \n+                long: long,\n+                lat: lat\n+            }\n+        };\n+\n+        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Register Device ===========');\n+    }\n+\n+    async assignController(ctx, deviceID, controllerID) {\n+        console.info('============= START : Assign Controller ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.controllerID = controllerID;\n+        \n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Assign Controller ===========');\n+    }\n+\n+    async changeController(ctx, deviceID, newControllerID) {\n+        console.info('============= START : Change Controller ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.controllerID = newControllerID;\n+        \n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Change Controller ===========');\n+    }\n+\n+    async getDeviceController(ctx, deviceID) {\n+        console.info('============= START : Get Device Controller ===========');\n+\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+\n+        console.info('============= END : Get Device Controller ===========');\n+\n+        return device.controllerID;        \n+    }\n+\n+    async executeDeviceCommand(ctx, deviceID, command) {\n+        console.info('============= START : Execute Device Command ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.lastExecCommand = command;\n+        device.lastExecDateTime = new Date().getTime();\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Execute Device Command ===========');\n+    }\n+\n+    /*\n+    async getDeviceLogs(ctx, deviceID) {\n+        console.info('============= START : Get Device Logs ===========');\n+        console.info('============= END : Get Device Logs ===========');\n+    }\n+    */\n+\n+    async getControllerDevices(ctx, controllerID) {\n+        console.info('============= START : Get Controller Devices ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\": \"device\", \n+                \"controllerID\": controllerID\n+            }\n+       };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+          \n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get Controller Devices ===========');\n+        return allResults;\n+    }\n+\n+    async getDevice(ctx, deviceID) {\n+        console.info('============= START : Get Device ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        console.info('============= END : Get Device ===========');\n+        return JSON.parse(deviceAsBytes.toString());\n+    }\n+\n+    async getAllDevices(ctx) {\n+        console.info('============= START : Get All Devices ===========');\n+\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"device\"\n+            }\n+        };\n+\n+        const allResults = [];\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Devices ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n+    async getAllControllers(ctx) {\n+        console.info('============= START : Get All Controllers ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"controller\"\n+            }\n+        };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Controllers ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n+    async updateDevice(ctx, deviceID, currentTemp) {\n+        console.info('============= START : Update Device ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.currentTemp = currentTemp;\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Update Device ===========');        \n+    }\n+\n+    async updateDeviceStatus(ctx, deviceID) {\n+        console.info('============= START : Update Device Status ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.inUse ? device.inUse = false : device.inUse = true;\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Update Device Status ===========');\n+    }\n+}\n+\n+module.exports = ControllerDeviceContract;"
},
{
"sha":"fd2d4fe2ce216120428499c4bd6f2f108e0feedd",
"filename":"chaincode/package.json",
"status":"added",
"additions":50,
"deletions":0,
"changes":50,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/package.json?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,50 @@\n+{\n+  \"name\": \"EVChargerReg\",\n+  \"version\": \"0.0.0\",\n+  \"description\": \"My Smart Contract\",\n+  \"main\": \"index.js\",\n+  \"engines\": {\n+    \"node\": \">=8\",\n+    \"npm\": \">=5\"\n+  },\n+  \"scripts\": {\n+    \"lint\": \"eslint .\",\n+    \"pretest\": \"npm run lint\",\n+    \"test\": \"nyc mocha --recursive\",\n+    \"start\": \"fabric-chaincode-node start\"\n+  },\n+  \"engineStrict\": true,\n+  \"author\": \"John Doe\",\n+  \"license\": \"Apache-2.0\",\n+  \"dependencies\": {\n+    \"fabric-contract-api\": \"^2.2.0\",\n+    \"fabric-shim\": \"^2.2.0\"\n+  },\n+  \"devDependencies\": {\n+    \"chai\": \"^4.2.0\",\n+    \"chai-as-promised\": \"^7.1.1\",\n+    \"eslint\": \"^6.8.0\",\n+    \"mocha\": \"^7.1.1\",\n+    \"nyc\": \"^15.0.0\",\n+    \"sinon\": \"^9.0.1\",\n+    \"sinon-chai\": \"^3.5.0\",\n+    \"winston\": \"^3.2.1\"\n+  },\n+  \"nyc\": {\n+    \"exclude\": [\n+      \".eslintrc.js\",\n+      \"coverage/**\",\n+      \"test/**\"\n+    ],\n+    \"reporter\": [\n+      \"text-summary\",\n+      \"html\"\n+    ],\n+    \"all\": true,\n+    \"check-coverage\": true,\n+    \"statements\": 100,\n+    \"branches\": 100,\n+    \"functions\": 100,\n+    \"lines\": 100\n+  }\n+}"
},
{
"sha":"8ff35d20d93d070ced35c1f24b6fc905fff1a7d5",
"filename":"chaincode/test/controller-device-contract.js",
"status":"added",
"additions":108,
"deletions":0,
"changes":108,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/test/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/test/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/test/controller-device-contract.js?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,108 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const { ChaincodeStub, ClientIdentity } = require('fabric-shim');\n+const { ControllerDeviceContract } = require('..');\n+const winston = require('winston');\n+\n+const chai = require('chai');\n+const chaiAsPromised = require('chai-as-promised');\n+const sinon = require('sinon');\n+const sinonChai = require('sinon-chai');\n+\n+chai.should();\n+chai.use(chaiAsPromised);\n+chai.use(sinonChai);\n+\n+class TestContext {\n+\n+    constructor() {\n+        this.stub = sinon.createStubInstance(ChaincodeStub);\n+        this.clientIdentity = sinon.createStubInstance(ClientIdentity);\n+        this.logger = {\n+            getLogger: sinon.stub().returns(sinon.createStubInstance(winston.createLogger().constructor)),\n+            setLevel: sinon.stub(),\n+        };\n+    }\n+\n+}\n+\n+describe('ControllerDeviceContract', () => {\n+\n+    let contract;\n+    let ctx;\n+\n+    beforeEach(() => {\n+        contract = new ControllerDeviceContract();\n+        ctx = new TestContext();\n+        ctx.stub.getState.withArgs('1001').resolves(Buffer.from('{\"value\":\"controller device 1001 value\"}'));\n+        ctx.stub.getState.withArgs('1002').resolves(Buffer.from('{\"value\":\"controller device 1002 value\"}'));\n+    });\n+\n+    describe('#controllerDeviceExists', () => {\n+\n+        it('should return true for a controller device', async () => {\n+            await contract.controllerDeviceExists(ctx, '1001').should.eventually.be.true;\n+        });\n+\n+        it('should return false for a controller device that does not exist', async () => {\n+            await contract.controllerDeviceExists(ctx, '1003').should.eventually.be.false;\n+        });\n+\n+    });\n+\n+    describe('#createControllerDevice', () => {\n+\n+        it('should create a controller device', async () => {\n+            await contract.createControllerDevice(ctx, '1003', 'controller device 1003 value');\n+            ctx.stub.putState.should.have.been.calledOnceWithExactly('1003', Buffer.from('{\"value\":\"controller device 1003 value\"}'));\n+        });\n+\n+        it('should throw an error for a controller device that already exists', async () => {\n+            await contract.createControllerDevice(ctx, '1001', 'myvalue').should.be.rejectedWith(/The controller device 1001 already exists/);\n+        });\n+\n+    });\n+\n+    describe('#readControllerDevice', () => {\n+\n+        it('should return a controller device', async () => {\n+            await contract.readControllerDevice(ctx, '1001').should.eventually.deep.equal({ value: 'controller device 1001 value' });\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.readControllerDevice(ctx, '1003').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+    describe('#updateControllerDevice', () => {\n+\n+        it('should update a controller device', async () => {\n+            await contract.updateControllerDevice(ctx, '1001', 'controller device 1001 new value');\n+            ctx.stub.putState.should.have.been.calledOnceWithExactly('1001', Buffer.from('{\"value\":\"controller device 1001 new value\"}'));\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.updateControllerDevice(ctx, '1003', 'controller device 1003 new value').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+    describe('#deleteControllerDevice', () => {\n+\n+        it('should delete a controller device', async () => {\n+            await contract.deleteControllerDevice(ctx, '1001');\n+            ctx.stub.deleteState.should.have.been.calledOnceWithExactly('1001');\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.deleteControllerDevice(ctx, '1003').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+});"
},
{
"sha":"2df2cf37af0afd79833c5cc6dfa3f80f6a26a0f4",
"filename":"chaincode/transaction_data/controller-device-transactions.txdata",
"status":"added",
"additions":44,
"deletions":0,
"changes":44,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/transaction_data/controller-device-transactions.txdata",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/113e9edc2417fa46e6ee26ca2b50798a42cfc657/chaincode/transaction_data/controller-device-transactions.txdata",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/transaction_data/controller-device-transactions.txdata?ref=113e9edc2417fa46e6ee26ca2b50798a42cfc657",
"patch":"@@ -0,0 +1,44 @@\n+[\n+    {\n+        \"transactionName\": \"controllerDeviceExists\",\n+        \"transactionLabel\": \"A test controllerDeviceExists transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"createControllerDevice\",\n+        \"transactionLabel\": \"A test createControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\",\n+            \"some value\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"readControllerDevice\",\n+        \"transactionLabel\": \"A test readControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"updateControllerDevice\",\n+        \"transactionLabel\": \"A test updateControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\",\n+            \"some other value\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"deleteControllerDevice\",\n+        \"transactionLabel\": \"A test deleteControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    }\n+]"
}
]
},
{
"commit_sha":"f826d7c64dc91423b966417ddacb94191d46c1b7",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmY4MjZkN2M2NGRjOTE0MjNiOTY2NDE3ZGRhY2I5NDE5MWQ0NmMxYjc=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/f826d7c64dc91423b966417ddacb94191d46c1b7",
"commit_date":"2021-03-05T00:04:03Z",
"files":[
{
"sha":"0f4ddb9a3a7a7bf93b281de29ec0b1d3cfee70cf",
"filename":".gitignore",
"status":"modified",
"additions":0,
"deletions":1,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/f826d7c64dc91423b966417ddacb94191d46c1b7/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/f826d7c64dc91423b966417ddacb94191d46c1b7/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=f826d7c64dc91423b966417ddacb94191d46c1b7",
"patch":"@@ -5,7 +5,6 @@\n # Vim file artifacts\n .*.sw*\n # installed platform-specific binaries\n-backend/bin\n backend/node_modules\n backend/config\n .DS_Store"
}
]
},
{
"commit_sha":"c0b1f4b95395bc8bc095d046201a9f4738f26400",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmMwYjFmNGI5NTM5NWJjOGJjMDk1ZDA0NjIwMWE5ZjQ3MzhmMjY0MDA=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/c0b1f4b95395bc8bc095d046201a9f4738f26400",
"commit_date":"2021-03-04T23:31:51Z",
"files":[
{
"sha":"88bcd5f841df2f1c79bf58b8c8f114327f798565",
"filename":"backend/chaincode-connector/EVChargerConnector.js",
"status":"modified",
"additions":48,
"deletions":1,
"changes":49,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/chaincode-connector/EVChargerConnector.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/chaincode-connector/EVChargerConnector.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/chaincode-connector/EVChargerConnector.js?ref=c0b1f4b95395bc8bc095d046201a9f4738f26400",
"patch":"@@ -60,7 +60,54 @@ async function disconnectGateway() {\n }\n \n \n+async function getAllDevices() {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getAllDevices');\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function getDevice(id) {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getDevice', id);\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+\n+async function getControllerDevices(id) {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getControllerDevices', id);\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+\n module.exports = {\n     getAllControllers: getAllControllers,\n-    registerController: registerController\n+    registerController: registerController,\n+    getAllDevices: getAllDevices,\n+    getDevice: getDevice,\n+    getControllerDevices: getControllerDevices\n }\n\\ No newline at end of file"
},
{
"sha":"a0f4aa8f1fad604b26ab32814f100bbcfe932fab",
"filename":"backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"status":"modified",
"additions":8,
"deletions":8,
"changes":16,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json?ref=c0b1f4b95395bc8bc095d046201a9f4738f26400",
"patch":"@@ -1,7 +1,7 @@\n {\n     \"certificateAuthorities\": {\n-        \"org1ca-api.127-0-0-1.nip.io:8080\": {\n-            \"url\": \"http://org1ca-api.127-0-0-1.nip.io:8080\"\n+        \"org1ca-api.127-0-0-1.nip.io:8081\": {\n+            \"url\": \"http://org1ca-api.127-0-0-1.nip.io:8081\"\n         }\n     },\n     \"client\": {\n@@ -21,21 +21,21 @@\n     \"organizations\": {\n         \"Org1\": {\n             \"certificateAuthorities\": [\n-                \"org1ca-api.127-0-0-1.nip.io:8080\"\n+                \"org1ca-api.127-0-0-1.nip.io:8081\"\n             ],\n             \"mspid\": \"Org1MSP\",\n             \"peers\": [\n-                \"org1peer-api.127-0-0-1.nip.io:8080\"\n+                \"org1peer-api.127-0-0-1.nip.io:8081\"\n             ]\n         }\n     },\n     \"peers\": {\n-        \"org1peer-api.127-0-0-1.nip.io:8080\": {\n+        \"org1peer-api.127-0-0-1.nip.io:8081\": {\n             \"grpcOptions\": {\n-                \"grpc.default_authority\": \"org1peer-api.127-0-0-1.nip.io:8080\",\n-                \"grpc.ssl_target_name_override\": \"org1peer-api.127-0-0-1.nip.io:8080\"\n+                \"grpc.default_authority\": \"org1peer-api.127-0-0-1.nip.io:8081\",\n+                \"grpc.ssl_target_name_override\": \"org1peer-api.127-0-0-1.nip.io:8081\"\n             },\n-            \"url\": \"grpc://org1peer-api.127-0-0-1.nip.io:8080\"\n+            \"url\": \"grpc://org1peer-api.127-0-0-1.nip.io:8081\"\n         }\n     },\n     \"type\": \"gateway\","
},
{
"sha":"99fe4d88c7fea404a64032b807147e7a39fffc92",
"filename":"backend/routes/controller.js",
"status":"modified",
"additions":6,
"deletions":0,
"changes":6,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=c0b1f4b95395bc8bc095d046201a9f4738f26400",
"patch":"@@ -16,4 +16,10 @@ router.post('/register', async function(req, res, next) {\n     res.json(result); \n });\n \n+router.get('/devices', async function(req, res, next) {\n+    const result = await connector.getControllerDevices(req.body.controllerId);\n+    res.json(result); \n+});\n+\n+\n module.exports = router;"
},
{
"sha":"a0508a0047a357d80a44d206d8be4fb7fdc8107d",
"filename":"backend/routes/device.js",
"status":"modified",
"additions":9,
"deletions":1,
"changes":10,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=c0b1f4b95395bc8bc095d046201a9f4738f26400",
"patch":"@@ -6,7 +6,15 @@ var connector = require('../chaincode-connector/EVChargerConnector')\n \n /* GET query listing. */\n router.get('/all', async function(req, res, next) {\n-    res.json('{\"dummy\":\"test\"}');\n+    const result = await connector.getAllDevices();\n+    res.json(result); \n });\n \n+router.get('/device', async function(req, res, next) {\n+    //let queryObj = req.query;\n+    const result = await connector.getDevice(req.body.deviceId);\n+    res.json(result); \n+});\n+\n+\n module.exports = router;\n\\ No newline at end of file"
},
{
"sha":"8dfd9af11367f19a009e59733f2fe476f0bf4708",
"filename":"backend/wallet/Org1/Org1 Admin.id",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/wallet/Org1/Org1%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/wallet/Org1/Org1%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20Admin.id?ref=c0b1f4b95395bc8bc095d046201a9f4738f26400",
"patch":"@@ -1 +1 @@\n-{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBzzCCAXWgAwIBAgIRAIzAdHuSR2vloZAbbRJf+e8wCgYIKoZIzj0EAwIwEjEQ\\nMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDMwMDQ4MjJaFw0zMTAzMDEwMDQ4MjJa\\nMCUxDjAMBgNVBAsTBWFkbWluMRMwEQYDVQQDEwpPcmcxIEFkbWluMFkwEwYHKoZI\\nzj0CAQYIKoZIzj0DAQcDQgAEa+bKCEg8oC9a+EyAI6X9XlFngyOq3Kh2F1MvHj1z\\nycf7a4wCMUsSCKnr1dSwHniWRs3GDYn6ZbUVpnOGU5GUS6OBmDCBlTAOBgNVHQ8B\\nAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMAwGA1UdEwEB\\n/wQCMAAwKQYDVR0OBCIEIGDd9Zp9FOlUrUDJupvhHM0BNCgbW9jUiHTK1UaIYySM\\nMCsGA1UdIwQkMCKAIPQ6+hXejfBarSeHKFZeMwXFFynuDWSPjVH21j4oOESWMAoG\\nCCqGSM49BAMCA0gAMEUCIQDMkV3r7SmeZnEOhxi/4N+p7uCvty4XuGIvTomLfZWD\\nmwIgQrKtGXbbYj//Vx2cV8N5Rdwh1fyTqeAooUs8hoYK9XQ=\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgkWdFwgZrUZrFq7OG\\nU3nSvbHwuFQ92g/es6Brdq9D7L2hRANCAARr5soISDygL1r4TIAjpf1eUWeDI6rc\\nqHYXUy8ePXPJx/trjAIxSxIIqevV1LAeeJZGzcYNifpltRWmc4ZTkZRL\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file\n+{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBzjCCAXSgAwIBAgIQMXHE2o7nB/MbM06fHvykvTAKBggqhkjOPQQDAjASMRAw\\nDgYDVQQDEwdPcmcxIENBMB4XDTIxMDMwNDIwNDYwMloXDTMxMDMwMjIwNDYwMlow\\nJTEOMAwGA1UECxMFYWRtaW4xEzARBgNVBAMTCk9yZzEgQWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAScOr0TnqWDyAYRSTmOiWdb8zaHCBRQvE2JdOmi/qaD\\nL+nxIbM9huZ6oquDj6dZ5EPLV5W8ablz4n6MZFSL5ukko4GYMIGVMA4GA1UdDwEB\\n/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwDAYDVR0TAQH/\\nBAIwADApBgNVHQ4EIgQgPI2bWZA0qW+WY2cE8o/qN0sqq39kZXop8Whc9/U4ZuMw\\nKwYDVR0jBCQwIoAgAToqafW82VnK2eyhVuvp0GB8Ni7L2WiPf3FgDx2x+YkwCgYI\\nKoZIzj0EAwIDSAAwRQIhANgPkZSyMFtwxoZWiuBsqxM6QRjRgSyqoOmeNfivCXJc\\nAiA745JwCGY5NE8+TKOmBe7+wESRcA0EGOcnBrnalDjbvw==\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgvC6VRtk2NjVrSgNQ\\nv1Gw5Qbhg3QgrOn/8f2+c8/D9X2hRANCAAScOr0TnqWDyAYRSTmOiWdb8zaHCBRQ\\nvE2JdOmi/qaDL+nxIbM9huZ6oquDj6dZ5EPLV5W8ablz4n6MZFSL5ukk\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"62a5e3e77952679c38b8e0769c1ad973c27b2fe4",
"filename":"backend/wallet/Org1/Org1 CA Admin.id",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/wallet/Org1/Org1%20CA%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/c0b1f4b95395bc8bc095d046201a9f4738f26400/backend/wallet/Org1/Org1%20CA%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20CA%20Admin.id?ref=c0b1f4b95395bc8bc095d046201a9f4738f26400",
"patch":"@@ -1 +1 @@\n-{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBoDCCAUegAwIBAgIUG2dzgvKvyvXJrXZZQxeQ/G6JCl8wCgYIKoZIzj0EAwIw\\nEjEQMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDMwMDQ4MDBaFw0yMjAzMDMwMDUz\\nMDBaMCExDzANBgNVBAsTBmNsaWVudDEOMAwGA1UEAxMFYWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAATF6c4CEbMtWjOufyfB8yQo34DTEpY1R0ajsM4rlAoT\\n2yynBeHPtTFHETgJGPLOTxEEuDIboeZylrVbf4J/CkY6o2wwajAOBgNVHQ8BAf8E\\nBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUS2zao98Kd/VnymWeD8+KpJVn\\nKf0wKwYDVR0jBCQwIoAg9Dr6Fd6N8FqtJ4coVl4zBcUXKe4NZI+NUfbWPig4RJYw\\nCgYIKoZIzj0EAwIDRwAwRAIgVyv78OkHzKD0USQ+rSxK7OIYB1CKXLOcILSJLv4c\\nUngCIC/RUJwHWFANfr7KC81znk3EXbP3WK1F5kpLhRY01P1A\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgIvK6DzpJr1lodOQm\\nJZWEzDAU8KrdmwpaH8tBPRrhgYyhRANCAATF6c4CEbMtWjOufyfB8yQo34DTEpY1\\nR0ajsM4rlAoT2yynBeHPtTFHETgJGPLOTxEEuDIboeZylrVbf4J/CkY6\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file\n+{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBoTCCAUegAwIBAgIUG3zv4ODuuykGTsHpYnUPZYBLXDIwCgYIKoZIzj0EAwIw\\nEjEQMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDQyMDQ2MDBaFw0yMjAzMDQyMDUx\\nMDBaMCExDzANBgNVBAsTBmNsaWVudDEOMAwGA1UEAxMFYWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAAT6wIjqQlcXPCsmGp5vO/axqILu1X0ftaTTqlviLLIn\\nseTCFwWZMmizzKNuvrHnPnH6TKCrf8ODQ12urfkhXrW3o2wwajAOBgNVHQ8BAf8E\\nBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQU2fKkgHZWwJw5RY7/TVfp8fg4\\nSUwwKwYDVR0jBCQwIoAgAToqafW82VnK2eyhVuvp0GB8Ni7L2WiPf3FgDx2x+Ykw\\nCgYIKoZIzj0EAwIDSAAwRQIhAPkLBMjzyG0wv4yd/3E0BY+CEsizSmYCOl2Hcsng\\nkWrCAiA7nH48ALMvum8B20QmkbYfMRVQjC9aTbAGosa/ozXzpA==\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgOO5NGzguj7TqmMYU\\nap848RnXcXau7ZoRCIN3L+F+uYuhRANCAAT6wIjqQlcXPCsmGp5vO/axqILu1X0f\\ntaTTqlviLLInseTCFwWZMmizzKNuvrHnPnH6TKCrf8ODQ12urfkhXrW3\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"fd2d4fe2ce216120428499c4bd6f2f108e0feedd",
"filename":"chaincode/package.json",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/c0b1f4b95395bc8bc095d046201a9f4738f26400/chaincode/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/c0b1f4b95395bc8bc095d046201a9f4738f26400/chaincode/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/package.json?ref=c0b1f4b95395bc8bc095d046201a9f4738f26400",
"patch":"@@ -1,6 +1,6 @@\n {\n   \"name\": \"EVChargerReg\",\n-  \"version\": \"0.0.12\",\n+  \"version\": \"0.0.0\",\n   \"description\": \"My Smart Contract\",\n   \"main\": \"index.js\",\n   \"engines\": {"
}
]
},
{
"commit_sha":"dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmRjN2ZlNTUzNGNiZjVjZjkyNDhlZTQ0YzRjM2M4OTU1OTRjMDNlYWU=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"commit_date":"2021-03-04T02:28:25Z",
"files":[
{
"sha":"7aae16f70add91b4c4e024bbdd0dc21940adc2d1",
"filename":"backend/app.js",
"status":"modified",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/app.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/app.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/app.js?ref=dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"patch":"@@ -3,12 +3,19 @@ var express = require('express');\n var path = require('path');\n var cookieParser = require('cookie-parser');\n var logger = require('morgan');\n+const bodyParser = require('body-parser');\n+\n+var controllerRouter = require('./routes/controller');\n+var deviceRouter = require('./routes/device');\n \n var indexRouter = require('./routes');\n var usersRouter = require('./routes/users');\n \n var app = express();\n \n+app.use(bodyParser.urlencoded());\n+app.use(bodyParser.json());\n+\n // view engine setup\n app.set('views', path.join(__dirname, 'views'));\n app.set('view engine', 'jade');\n@@ -21,6 +28,8 @@ app.use(express.static(path.join(__dirname, 'public')));\n \n app.use('/', indexRouter);\n app.use('/users', usersRouter);\n+app.use('/controller', controllerRouter);\n+app.use('/device', deviceRouter);\n \n // catch 404 and forward to error handler\n app.use(function(req, res, next) {"
},
{
"sha":"62ba43625e0a6033312af1cfa3537d2db3901702",
"filename":"backend/chaincode-connector/EVChargerConnector.js",
"status":"added",
"additions":66,
"deletions":0,
"changes":66,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/chaincode-connector/EVChargerConnector.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/chaincode-connector/EVChargerConnector.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/chaincode-connector/EVChargerConnector.js?ref=dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"patch":"@@ -0,0 +1,66 @@\n+let gateway; \n+\n+async function init() {\n+    let contract;\n+    try {\n+        const { Wallets } = require('fabric-network');\n+        const { Gateway } = require('fabric-network'); //Creates a new gateway and use it to connect to the network\n+        const path = require('path');\n+        const fs = require('fs');\n+    \n+        const walletPath = path.join(process.cwd(), './wallet/Org1');\n+        const wallet = await Wallets.newFileSystemWallet(walletPath);\n+        gateway = new Gateway();\n+        const connectionProfilePath = path.resolve(__dirname, '../gateway', '1OrgLocalFabricOrg1GatewayConnection.json');\n+        const connectionProfile = JSON.parse(fs.readFileSync(connectionProfilePath, 'utf8'));\n+        const connectionOptions = {\n+            wallet, identity: 'Org1 Admin', discovery:\n+                { enabled: true, asLocalhost: true }\n+        };\n+        await gateway.connect(connectionProfile, connectionOptions);\n+        // Get the network (channel) our contract is deployed to.\n+        const network = await gateway.getNetwork('mychannel');\n+        // Get the contract from the network.\n+        contract = network.getContract('EVChargerReg');\n+        return contract;\n+    } catch (error) {\n+        console.error('Failed to initialize transaction:', error);\n+        process.exit(1);\n+    }\n+}\n+\n+async function getAllControllers() {\n+    const contract = await init();\n+    let result;\n+    try {\n+        result = await contract.submitTransaction('getAllControllers');\n+        await disconnectGateway();    \n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    console.log('result from chaincode = ' + result.toString());\n+    return JSON.parse(result.toString());\n+}\n+\n+async function registerController(cn, sp, long, lat) {\n+    const contract = await init();\n+    try {\n+        await contract.submitTransaction('registerController', cn, sp, long, lat);\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+    await disconnectGateway();    \n+    return JSON.parse('{\"result\": \"success\"}');\n+}\n+\n+async function disconnectGateway() {\n+    gateway.disconnect();\n+}\n+\n+\n+module.exports = {\n+    getAllControllers: getAllControllers,\n+    registerController: registerController\n+}\n\\ No newline at end of file"
},
{
"sha":"d965c7917aff96e0aa4538da4e6e07b958b51267",
"filename":"backend/connection.js",
"status":"added",
"additions":38,
"deletions":0,
"changes":38,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/connection.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/connection.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/connection.js?ref=dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"patch":"@@ -0,0 +1,38 @@\n+import { Gateway, Wallets } from 'fabric-network';\n+import * as path from 'path';\n+import * as fs from 'fs';\n+\n+async function main() {\n+    try {\n+        // Create a new file system based wallet for managing identities.\n+        const walletPath = path.join(process.cwd(), 'Org1');\n+\n+        const wallet = await Wallets.newFileSystemWallet(walletPath);\n+        console.log(`Wallet path: ${walletPath}`);\n+        // Create a new gateway for connecting to our peer node.\n+        const gateway = new Gateway();\n+        const connectionProfilePath = path.resolve(__dirname, '../gateway', '1OrgLocalFabricOrg1GatewayConnection.json');\n+        const connectionProfile = JSON.parse(fs.readFileSync(connectionProfilePath, 'utf8'));\n+        const connectionOptions = {\n+            wallet, identity: 'Org1 Admin', discovery:\n+                { enabled: true, asLocalhost: true }\n+        };\n+        await gateway.connect(connectionProfile, connectionOptions);\n+        // Get the network (channel) our contract is deployed to.\n+        const network = await gateway.getNetwork('mychannel');\n+        // Get the contract from the network.\n+        const contract = network.getContract('controller-device-contract');\n+        // Submit the specified transaction.\n+        await contract.submitTransaction('registerController', 'Test Controller from NodeJS', 'SP from NodeJS', '10', '20');\n+        console.log('Transaction has been submitted');\n+        // Disconnect from the gateway.\n+        gateway.disconnect();\n+    } catch (error) {\n+        console.error('Failed to submit transaction:', error);\n+        process.exit(1);\n+    }\n+}\n+\n+module.exports = {\n+    main: main\n+}\n\\ No newline at end of file"
},
{
"sha":"80e655765d68d1346b595cf65e185b7ab1e9cb57",
"filename":"backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"status":"added",
"additions":43,
"deletions":0,
"changes":43,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/gateway/1OrgLocalFabricOrg1GatewayConnection.json?ref=dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"patch":"@@ -0,0 +1,43 @@\n+{\n+    \"certificateAuthorities\": {\n+        \"org1ca-api.127-0-0-1.nip.io:8080\": {\n+            \"url\": \"http://org1ca-api.127-0-0-1.nip.io:8080\"\n+        }\n+    },\n+    \"client\": {\n+        \"connection\": {\n+            \"timeout\": {\n+                \"orderer\": \"300\",\n+                \"peer\": {\n+                    \"endorser\": \"300\"\n+                }\n+            }\n+        },\n+        \"organization\": \"Org1\"\n+    },\n+    \"display_name\": \"Org1 Gateway\",\n+    \"id\": \"org1gateway\",\n+    \"name\": \"Org1 Gateway\",\n+    \"organizations\": {\n+        \"Org1\": {\n+            \"certificateAuthorities\": [\n+                \"org1ca-api.127-0-0-1.nip.io:8080\"\n+            ],\n+            \"mspid\": \"Org1MSP\",\n+            \"peers\": [\n+                \"org1peer-api.127-0-0-1.nip.io:8080\"\n+            ]\n+        }\n+    },\n+    \"peers\": {\n+        \"org1peer-api.127-0-0-1.nip.io:8080\": {\n+            \"grpcOptions\": {\n+                \"grpc.default_authority\": \"org1peer-api.127-0-0-1.nip.io:8080\",\n+                \"grpc.ssl_target_name_override\": \"org1peer-api.127-0-0-1.nip.io:8080\"\n+            },\n+            \"url\": \"grpc://org1peer-api.127-0-0-1.nip.io:8080\"\n+        }\n+    },\n+    \"type\": \"gateway\",\n+    \"version\": \"1.0\"\n+}\n\\ No newline at end of file"
},
{
"sha":"4ef35fc27847adfcd4ad8a83061aad0ef82cebc5",
"filename":"backend/package.json",
"status":"modified",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/package.json?ref=dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"patch":"@@ -6,9 +6,11 @@\n     \"start\": \"node bin/www\"\n   },\n   \"dependencies\": {\n+    \"body-parser\": \"^1.18.3\",\n     \"cookie-parser\": \"~1.4.4\",\n     \"debug\": \"~2.6.9\",\n     \"express\": \"~4.16.1\",\n+    \"fabric-network\": \"^2.2.5\",\n     \"http-errors\": \"~1.6.3\",\n     \"jade\": \"~1.11.0\",\n     \"morgan\": \"~1.9.1\""
},
{
"sha":"8e78b2abe9889e9f4f5fa362bc6fadc6eee8eae3",
"filename":"backend/routes/controller.js",
"status":"added",
"additions":19,
"deletions":0,
"changes":19,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/routes/controller.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/routes/controller.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/controller.js?ref=dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"patch":"@@ -0,0 +1,19 @@\n+'use strict';\n+\n+var express = require('express');\n+var router = express.Router();\n+var connector = require('../chaincode-connector/EVChargerConnector')\n+\n+/* GET query listing. */\n+router.get('/all', async function(req, res, next) {\n+    const result = await connector.getAllControllers()\n+    res.json(result); \n+});\n+\n+router.post('/register', async function(req, res, next) {\n+    //let queryObj = req.query;\n+    const result = await connector.registerController(req.body.controllerName, req.body.serviceProvider, req.body.location.long, req.body.location.lat);\n+    res.json(result); \n+});\n+\n+module.exports = router;"
},
{
"sha":"b019c1d22248c015bf7a639d97398ce0b4024c1e",
"filename":"backend/routes/device.js",
"status":"added",
"additions":12,
"deletions":0,
"changes":12,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/routes/device.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/routes/device.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/device.js?ref=dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"patch":"@@ -0,0 +1,12 @@\n+'use strict';\n+\n+var express = require('express');\n+var router = express.Router();\n+var connector = require('../chaincode-connector/EVChargerConnector')\n+\n+/* GET query listing. */\n+router.get('/all', async function(req, res, next) {\n+    res.json('{\"dummy\":\"test\"}');\n+});\n+\n+module.exports = router;\n\\ No newline at end of file"
},
{
"sha":"471a66334011579fa87db69765f31968b9480e96",
"filename":"backend/wallet/Org1/Org1 Admin.id",
"status":"added",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/wallet/Org1/Org1%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/wallet/Org1/Org1%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20Admin.id?ref=dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"patch":"@@ -0,0 +1 @@\n+{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBzzCCAXWgAwIBAgIRAIzAdHuSR2vloZAbbRJf+e8wCgYIKoZIzj0EAwIwEjEQ\\nMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDMwMDQ4MjJaFw0zMTAzMDEwMDQ4MjJa\\nMCUxDjAMBgNVBAsTBWFkbWluMRMwEQYDVQQDEwpPcmcxIEFkbWluMFkwEwYHKoZI\\nzj0CAQYIKoZIzj0DAQcDQgAEa+bKCEg8oC9a+EyAI6X9XlFngyOq3Kh2F1MvHj1z\\nycf7a4wCMUsSCKnr1dSwHniWRs3GDYn6ZbUVpnOGU5GUS6OBmDCBlTAOBgNVHQ8B\\nAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMAwGA1UdEwEB\\n/wQCMAAwKQYDVR0OBCIEIGDd9Zp9FOlUrUDJupvhHM0BNCgbW9jUiHTK1UaIYySM\\nMCsGA1UdIwQkMCKAIPQ6+hXejfBarSeHKFZeMwXFFynuDWSPjVH21j4oOESWMAoG\\nCCqGSM49BAMCA0gAMEUCIQDMkV3r7SmeZnEOhxi/4N+p7uCvty4XuGIvTomLfZWD\\nmwIgQrKtGXbbYj//Vx2cV8N5Rdwh1fyTqeAooUs8hoYK9XQ=\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgkWdFwgZrUZrFq7OG\\nU3nSvbHwuFQ92g/es6Brdq9D7L2hRANCAARr5soISDygL1r4TIAjpf1eUWeDI6rc\\nqHYXUy8ePXPJx/trjAIxSxIIqevV1LAeeJZGzcYNifpltRWmc4ZTkZRL\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
},
{
"sha":"dd5ebf393151bfaf473e6fe90acae07faf773474",
"filename":"backend/wallet/Org1/Org1 CA Admin.id",
"status":"added",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/wallet/Org1/Org1%20CA%20Admin.id",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/dc7fe5534cbf5cf9248ee44c4c3c895594c03eae/backend/wallet/Org1/Org1%20CA%20Admin.id",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/wallet/Org1/Org1%20CA%20Admin.id?ref=dc7fe5534cbf5cf9248ee44c4c3c895594c03eae",
"patch":"@@ -0,0 +1 @@\n+{\"credentials\":{\"certificate\":\"-----BEGIN CERTIFICATE-----\\nMIIBoDCCAUegAwIBAgIUG2dzgvKvyvXJrXZZQxeQ/G6JCl8wCgYIKoZIzj0EAwIw\\nEjEQMA4GA1UEAxMHT3JnMSBDQTAeFw0yMTAzMDMwMDQ4MDBaFw0yMjAzMDMwMDUz\\nMDBaMCExDzANBgNVBAsTBmNsaWVudDEOMAwGA1UEAxMFYWRtaW4wWTATBgcqhkjO\\nPQIBBggqhkjOPQMBBwNCAATF6c4CEbMtWjOufyfB8yQo34DTEpY1R0ajsM4rlAoT\\n2yynBeHPtTFHETgJGPLOTxEEuDIboeZylrVbf4J/CkY6o2wwajAOBgNVHQ8BAf8E\\nBAMCB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUS2zao98Kd/VnymWeD8+KpJVn\\nKf0wKwYDVR0jBCQwIoAg9Dr6Fd6N8FqtJ4coVl4zBcUXKe4NZI+NUfbWPig4RJYw\\nCgYIKoZIzj0EAwIDRwAwRAIgVyv78OkHzKD0USQ+rSxK7OIYB1CKXLOcILSJLv4c\\nUngCIC/RUJwHWFANfr7KC81znk3EXbP3WK1F5kpLhRY01P1A\\n-----END CERTIFICATE-----\\n\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgIvK6DzpJr1lodOQm\\nJZWEzDAU8KrdmwpaH8tBPRrhgYyhRANCAATF6c4CEbMtWjOufyfB8yQo34DTEpY1\\nR0ajsM4rlAoT2yynBeHPtTFHETgJGPLOTxEEuDIboeZylrVbf4J/CkY6\\n-----END PRIVATE KEY-----\\n\"},\"mspId\":\"Org1MSP\",\"type\":\"X.509\",\"version\":1}\n\\ No newline at end of file"
}
]
},
{
"commit_sha":"5ded669a3d7cec3553eb0e8b3261c10322ae4697",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjVkZWQ2NjlhM2Q3Y2VjMzU1M2ViMGU4YjMyNjFjMTAzMjJhZTQ2OTc=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/5ded669a3d7cec3553eb0e8b3261c10322ae4697",
"commit_date":"2021-03-03T02:46:10Z",
"files":[
{
"sha":"932e4fad707b2e82cc4ae32963bed0cf7c60f5b2",
"filename":".gitignore",
"status":"modified",
"additions":19,
"deletions":18,
"changes":37,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/5ded669a3d7cec3553eb0e8b3261c10322ae4697/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/5ded669a3d7cec3553eb0e8b3261c10322ae4697/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=5ded669a3d7cec3553eb0e8b3261c10322ae4697",
"patch":"@@ -5,17 +5,18 @@\n # Vim file artifacts\n .*.sw*\n # installed platform-specific binaries\n-/backend/bin\n-/config\n+backend/bin\n+backend/node_modules\n+backend/config\n .DS_Store\n .project\n+\n # omit Go vendor directories\n vendor/\n .vscode\n .gradle\n .idea\n-# Dependency directories\n-node_modules/\n+\n # Ignore Gradle build output directory\n build\n package-lock.json\n@@ -55,42 +56,42 @@ bower_components\n build/Release\n \n # Dependency directories\n-node_modules/\n-jspm_packages/\n+chaincode/node_modules/\n+chaincode/jspm_packages/\n \n # TypeScript v1 declaration files\n-typings/\n+chaincode/typings/\n \n # Optional npm cache directory\n-.npm\n+chaincode/.npm\n \n # Optional eslint cache\n-.eslintcache\n+chaincode/.eslintcache\n \n # Optional REPL history\n-.node_repl_history\n+chaincode/.node_repl_history\n \n # Output of 'npm pack'\n-*.tgz\n+chaincode/*.tgz\n \n # Yarn Integrity file\n-.yarn-integrity\n+chaincode/.yarn-integrity\n \n # dotenv environment variables file\n-.env\n+chaincode/.env\n \n # parcel-bundler cache (https://parceljs.org/)\n-.cache\n+chaincode/.cache\n \n # next.js build output\n-.next\n+chaincode/.next\n \n # nuxt.js build output\n-.nuxt\n+chaincode/.nuxt\n \n # vuepress build output\n-.vuepress/dist\n+chaincode/.vuepress/dist\n \n # Serverless directories\n-.serverless\n+chaincode/.serverless\n "
},
{
"sha":"0dca627e1d5f360813bc0a97a77e64a33d4d4537",
"filename":"chaincode/.gitignore",
"status":"added",
"additions":96,
"deletions":0,
"changes":96,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/.gitignore?ref=5ded669a3d7cec3553eb0e8b3261c10322ae4697",
"patch":"@@ -0,0 +1,96 @@\n+# Emacs backup files\n+*~\n+*#\n+.#*\n+# Vim file artifacts\n+.*.sw*\n+# installed platform-specific binaries\n+/backend/bin\n+/config\n+.DS_Store\n+.project\n+# omit Go vendor directories\n+vendor/\n+.vscode\n+.gradle\n+.idea\n+# Dependency directories\n+node_modules/\n+# Ignore Gradle build output directory\n+build\n+package-lock.json\n+\n+# Logs\n+logs\n+*.log\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\n+*.pid.lock\n+\n+# Directory for instrumented libs generated by jscoverage/JSCover\n+lib-cov\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+\n+# nyc test coverage\n+.nyc_output\n+\n+# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n+.grunt\n+\n+# Bower dependency directory (https://bower.io/)\n+bower_components\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Compiled binary addons (https://nodejs.org/api/addons.html)\n+build/Release\n+\n+# Dependency directories\n+node_modules/\n+jspm_packages/\n+\n+# TypeScript v1 declaration files\n+typings/\n+\n+# Optional npm cache directory\n+.npm\n+\n+# Optional eslint cache\n+.eslintcache\n+\n+# Optional REPL history\n+.node_repl_history\n+\n+# Output of 'npm pack'\n+*.tgz\n+\n+# Yarn Integrity file\n+.yarn-integrity\n+\n+# dotenv environment variables file\n+.env\n+\n+# parcel-bundler cache (https://parceljs.org/)\n+.cache\n+\n+# next.js build output\n+.next\n+\n+# nuxt.js build output\n+.nuxt\n+\n+# vuepress build output\n+.vuepress/dist\n+\n+# Serverless directories\n+.serverless\n+"
},
{
"sha":"3de88baa9aebba42da4880518f28de80780bc9fe",
"filename":"chaincode/index.js",
"status":"renamed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/index.js?ref=5ded669a3d7cec3553eb0e8b3261c10322ae4697",
"previous_filename":"index.js"
},
{
"sha":"4ab268b6985d1714533fb40f4349b3eb3e7fe588",
"filename":"chaincode/lib/controller-device-contract.js",
"status":"renamed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/lib/controller-device-contract.js?ref=5ded669a3d7cec3553eb0e8b3261c10322ae4697",
"previous_filename":"lib/controller-device-contract.js"
},
{
"sha":"a8e438b847f192679820240f4ac790a6d9e29580",
"filename":"chaincode/package.json",
"status":"renamed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/package.json?ref=5ded669a3d7cec3553eb0e8b3261c10322ae4697",
"previous_filename":"package.json"
},
{
"sha":"8ff35d20d93d070ced35c1f24b6fc905fff1a7d5",
"filename":"chaincode/test/controller-device-contract.js",
"status":"renamed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/test/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/test/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/test/controller-device-contract.js?ref=5ded669a3d7cec3553eb0e8b3261c10322ae4697",
"previous_filename":"test/controller-device-contract.js"
},
{
"sha":"2df2cf37af0afd79833c5cc6dfa3f80f6a26a0f4",
"filename":"chaincode/transaction_data/controller-device-transactions.txdata",
"status":"renamed",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/transaction_data/controller-device-transactions.txdata",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/5ded669a3d7cec3553eb0e8b3261c10322ae4697/chaincode/transaction_data/controller-device-transactions.txdata",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/transaction_data/controller-device-transactions.txdata?ref=5ded669a3d7cec3553eb0e8b3261c10322ae4697",
"previous_filename":"transaction_data/controller-device-transactions.txdata"
}
]
},
{
"commit_sha":"8105394272d60ad4b235ad951d38348113702189",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjgxMDUzOTQyNzJkNjBhZDRiMjM1YWQ5NTFkMzgzNDgxMTM3MDIxODk=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/8105394272d60ad4b235ad951d38348113702189",
"commit_date":"2021-03-03T02:38:05Z",
"files":[
{
"sha":"0dca627e1d5f360813bc0a97a77e64a33d4d4537",
"filename":".gitignore",
"status":"modified",
"additions":75,
"deletions":2,
"changes":77,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8105394272d60ad4b235ad951d38348113702189/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8105394272d60ad4b235ad951d38348113702189/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=8105394272d60ad4b235ad951d38348113702189",
"patch":"@@ -19,5 +19,78 @@ node_modules/\n # Ignore Gradle build output directory\n build\n package-lock.json\n-# Ignore gitignore\n-.gitignore\n+\n+# Logs\n+logs\n+*.log\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\n+*.pid.lock\n+\n+# Directory for instrumented libs generated by jscoverage/JSCover\n+lib-cov\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+\n+# nyc test coverage\n+.nyc_output\n+\n+# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n+.grunt\n+\n+# Bower dependency directory (https://bower.io/)\n+bower_components\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Compiled binary addons (https://nodejs.org/api/addons.html)\n+build/Release\n+\n+# Dependency directories\n+node_modules/\n+jspm_packages/\n+\n+# TypeScript v1 declaration files\n+typings/\n+\n+# Optional npm cache directory\n+.npm\n+\n+# Optional eslint cache\n+.eslintcache\n+\n+# Optional REPL history\n+.node_repl_history\n+\n+# Output of 'npm pack'\n+*.tgz\n+\n+# Yarn Integrity file\n+.yarn-integrity\n+\n+# dotenv environment variables file\n+.env\n+\n+# parcel-bundler cache (https://parceljs.org/)\n+.cache\n+\n+# next.js build output\n+.next\n+\n+# nuxt.js build output\n+.nuxt\n+\n+# vuepress build output\n+.vuepress/dist\n+\n+# Serverless directories\n+.serverless\n+"
},
{
"sha":"3de88baa9aebba42da4880518f28de80780bc9fe",
"filename":"index.js",
"status":"added",
"additions":10,
"deletions":0,
"changes":10,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8105394272d60ad4b235ad951d38348113702189/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8105394272d60ad4b235ad951d38348113702189/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/index.js?ref=8105394272d60ad4b235ad951d38348113702189",
"patch":"@@ -0,0 +1,10 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const ControllerDeviceContract = require('./lib/controller-device-contract');\n+\n+module.exports.ControllerDeviceContract = ControllerDeviceContract;\n+module.exports.contracts = [ ControllerDeviceContract ];"
},
{
"sha":"4ab268b6985d1714533fb40f4349b3eb3e7fe588",
"filename":"lib/controller-device-contract.js",
"status":"added",
"additions":303,
"deletions":0,
"changes":303,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8105394272d60ad4b235ad951d38348113702189/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8105394272d60ad4b235ad951d38348113702189/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/lib/controller-device-contract.js?ref=8105394272d60ad4b235ad951d38348113702189",
"patch":"@@ -0,0 +1,303 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const { Contract } = require('fabric-contract-api');\n+\n+class ControllerDeviceContract extends Contract {\n+\n+    controllerID = 0;\n+    deviceID = 0;\n+\n+    /*\n+        It is required for initial testing, it can be removed after UI is available.\n+    */\n+    async initLedger(ctx) {\n+        console.info('============= START : Initialize Ledger ===========');\n+\n+        \n+        const controller = {};\n+        const device = {};\n+\n+        await ctx.stub.putState(0, Buffer.from(JSON.stringify(controller)));\n+        await ctx.stub.putState(0, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Initialize Ledger ===========');\n+    }\n+\n+    async registerController(ctx, controllerName, serviceProvider, long, lat) {\n+        console.info('============= START : Register Controller ===========');\n+\n+        /*\n+        FIX: Controller ID can be converted to auto-increment internally\n+             docType: 'controller' (Review the need for docType attribute)\n+        */\n+\n+        this.controllerID++;\n+        const recControllerID = \"CONTR-\" + this.controllerID;\n+        console.log(\"this.controllerID = \" + this.controllerID);\n+\n+        const controller = {\n+            controllerID: recControllerID,\n+            docType: \"controller\",\n+            controllerName: controllerName,\n+            location: { \n+                long: long,\n+                lat: lat\n+            },\n+            serviceProvider: serviceProvider\n+        };\n+\n+        await ctx.stub.putState(recControllerID, Buffer.from(JSON.stringify(controller)));\n+        console.info('============= END : Register Controller ===========');\n+    }\n+\n+    async updateController(ctx, controllerID, serviceProvider, long, lat) {\n+        console.info('============= START : Update Controller ===========');\n+\n+        const controllerAsBytes = await ctx.stub.getState(controllerID); // get the controller from chaincode state\n+        if (!controllerAsBytes || controllerAsBytes.length === 0) {\n+            throw new Error(`${controllerID} does not exist`);\n+        }\n+\n+        const controller = JSON.parse(controllerAsBytes.toString());\n+        controller.serviceProvider = serviceProvider;\n+        controller.location.long = long;\n+        controller.location.lat = lat;\n+        \n+        await ctx.stub.putState(controllerID, Buffer.from(JSON.stringify(controller)));\n+        console.info('============= END : Update Controller ===========');\n+    }\n+\n+    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n+        console.info('============= START : Register Device ===========');\n+\n+        this.deviceID++;\n+        const recDeviceID = \"DEV-\" + this.deviceID;\n+        console.log(\"this.deviceID = \" + this.deviceID);\n+\n+        const device = {\n+            deviceID: recDeviceID,\n+            docType: \"device\",\n+            brand: brand,\n+            model: model,\n+            macAddress: MAC,\n+            powerType: powerType,\n+            inUse: false,\n+            location: { \n+                long: long,\n+                lat: lat\n+            }\n+        };\n+\n+        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Register Device ===========');\n+    }\n+\n+    async assignController(ctx, deviceID, controllerID) {\n+        console.info('============= START : Assign Controller ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.controllerID = controllerID;\n+        \n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Assign Controller ===========');\n+    }\n+\n+    async changeController(ctx, deviceID, newControllerID) {\n+        console.info('============= START : Change Controller ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.controllerID = newControllerID;\n+        \n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Change Controller ===========');\n+    }\n+\n+    async getDeviceController(ctx, deviceID) {\n+        console.info('============= START : Get Device Controller ===========');\n+\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+\n+        console.info('============= END : Get Device Controller ===========');\n+\n+        return device.controllerID;        \n+    }\n+\n+    async executeDeviceCommand(ctx, deviceID, command) {\n+        console.info('============= START : Execute Device Command ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.lastExecCommand = command;\n+        device.lastExecDateTime = new Date().getTime();\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Execute Device Command ===========');\n+    }\n+\n+    /*\n+    async getDeviceLogs(ctx, deviceID) {\n+        console.info('============= START : Get Device Logs ===========');\n+        console.info('============= END : Get Device Logs ===========');\n+    }\n+    */\n+\n+    async getControllerDevices(ctx, controllerID) {\n+        console.info('============= START : Get Controller Devices ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\": \"device\", \n+                \"controllerID\": controllerID\n+            }\n+       };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+          \n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get Controller Devices ===========');\n+        return allResults;\n+    }\n+\n+    async getDevice(ctx, deviceID) {\n+        console.info('============= START : Get Device ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        console.info('============= END : Get Device ===========');\n+        return JSON.parse(deviceAsBytes.toString());\n+    }\n+\n+    async getAllDevices(ctx) {\n+        console.info('============= START : Get All Devices ===========');\n+\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"device\"\n+            }\n+        };\n+\n+        const allResults = [];\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Devices ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n+    async getAllControllers(ctx) {\n+        console.info('============= START : Get All Controllers ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"controller\"\n+            }\n+        };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Controllers ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n+    async updateDevice(ctx, deviceID, currentTemp) {\n+        console.info('============= START : Update Device ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.currentTemp = currentTemp;\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Update Device ===========');        \n+    }\n+\n+    async updateDeviceStatus(ctx, deviceID) {\n+        console.info('============= START : Update Device Status ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.inUse ? device.inUse = false : device.inUse = true;\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Update Device Status ===========');\n+    }\n+}\n+\n+module.exports = ControllerDeviceContract;"
},
{
"sha":"a8e438b847f192679820240f4ac790a6d9e29580",
"filename":"package.json",
"status":"added",
"additions":50,
"deletions":0,
"changes":50,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8105394272d60ad4b235ad951d38348113702189/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8105394272d60ad4b235ad951d38348113702189/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/package.json?ref=8105394272d60ad4b235ad951d38348113702189",
"patch":"@@ -0,0 +1,50 @@\n+{\n+  \"name\": \"EVChargerReg\",\n+  \"version\": \"0.0.12\",\n+  \"description\": \"My Smart Contract\",\n+  \"main\": \"index.js\",\n+  \"engines\": {\n+    \"node\": \">=8\",\n+    \"npm\": \">=5\"\n+  },\n+  \"scripts\": {\n+    \"lint\": \"eslint .\",\n+    \"pretest\": \"npm run lint\",\n+    \"test\": \"nyc mocha --recursive\",\n+    \"start\": \"fabric-chaincode-node start\"\n+  },\n+  \"engineStrict\": true,\n+  \"author\": \"John Doe\",\n+  \"license\": \"Apache-2.0\",\n+  \"dependencies\": {\n+    \"fabric-contract-api\": \"^2.2.0\",\n+    \"fabric-shim\": \"^2.2.0\"\n+  },\n+  \"devDependencies\": {\n+    \"chai\": \"^4.2.0\",\n+    \"chai-as-promised\": \"^7.1.1\",\n+    \"eslint\": \"^6.8.0\",\n+    \"mocha\": \"^7.1.1\",\n+    \"nyc\": \"^15.0.0\",\n+    \"sinon\": \"^9.0.1\",\n+    \"sinon-chai\": \"^3.5.0\",\n+    \"winston\": \"^3.2.1\"\n+  },\n+  \"nyc\": {\n+    \"exclude\": [\n+      \".eslintrc.js\",\n+      \"coverage/**\",\n+      \"test/**\"\n+    ],\n+    \"reporter\": [\n+      \"text-summary\",\n+      \"html\"\n+    ],\n+    \"all\": true,\n+    \"check-coverage\": true,\n+    \"statements\": 100,\n+    \"branches\": 100,\n+    \"functions\": 100,\n+    \"lines\": 100\n+  }\n+}"
},
{
"sha":"8ff35d20d93d070ced35c1f24b6fc905fff1a7d5",
"filename":"test/controller-device-contract.js",
"status":"added",
"additions":108,
"deletions":0,
"changes":108,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8105394272d60ad4b235ad951d38348113702189/test/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8105394272d60ad4b235ad951d38348113702189/test/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/test/controller-device-contract.js?ref=8105394272d60ad4b235ad951d38348113702189",
"patch":"@@ -0,0 +1,108 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const { ChaincodeStub, ClientIdentity } = require('fabric-shim');\n+const { ControllerDeviceContract } = require('..');\n+const winston = require('winston');\n+\n+const chai = require('chai');\n+const chaiAsPromised = require('chai-as-promised');\n+const sinon = require('sinon');\n+const sinonChai = require('sinon-chai');\n+\n+chai.should();\n+chai.use(chaiAsPromised);\n+chai.use(sinonChai);\n+\n+class TestContext {\n+\n+    constructor() {\n+        this.stub = sinon.createStubInstance(ChaincodeStub);\n+        this.clientIdentity = sinon.createStubInstance(ClientIdentity);\n+        this.logger = {\n+            getLogger: sinon.stub().returns(sinon.createStubInstance(winston.createLogger().constructor)),\n+            setLevel: sinon.stub(),\n+        };\n+    }\n+\n+}\n+\n+describe('ControllerDeviceContract', () => {\n+\n+    let contract;\n+    let ctx;\n+\n+    beforeEach(() => {\n+        contract = new ControllerDeviceContract();\n+        ctx = new TestContext();\n+        ctx.stub.getState.withArgs('1001').resolves(Buffer.from('{\"value\":\"controller device 1001 value\"}'));\n+        ctx.stub.getState.withArgs('1002').resolves(Buffer.from('{\"value\":\"controller device 1002 value\"}'));\n+    });\n+\n+    describe('#controllerDeviceExists', () => {\n+\n+        it('should return true for a controller device', async () => {\n+            await contract.controllerDeviceExists(ctx, '1001').should.eventually.be.true;\n+        });\n+\n+        it('should return false for a controller device that does not exist', async () => {\n+            await contract.controllerDeviceExists(ctx, '1003').should.eventually.be.false;\n+        });\n+\n+    });\n+\n+    describe('#createControllerDevice', () => {\n+\n+        it('should create a controller device', async () => {\n+            await contract.createControllerDevice(ctx, '1003', 'controller device 1003 value');\n+            ctx.stub.putState.should.have.been.calledOnceWithExactly('1003', Buffer.from('{\"value\":\"controller device 1003 value\"}'));\n+        });\n+\n+        it('should throw an error for a controller device that already exists', async () => {\n+            await contract.createControllerDevice(ctx, '1001', 'myvalue').should.be.rejectedWith(/The controller device 1001 already exists/);\n+        });\n+\n+    });\n+\n+    describe('#readControllerDevice', () => {\n+\n+        it('should return a controller device', async () => {\n+            await contract.readControllerDevice(ctx, '1001').should.eventually.deep.equal({ value: 'controller device 1001 value' });\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.readControllerDevice(ctx, '1003').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+    describe('#updateControllerDevice', () => {\n+\n+        it('should update a controller device', async () => {\n+            await contract.updateControllerDevice(ctx, '1001', 'controller device 1001 new value');\n+            ctx.stub.putState.should.have.been.calledOnceWithExactly('1001', Buffer.from('{\"value\":\"controller device 1001 new value\"}'));\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.updateControllerDevice(ctx, '1003', 'controller device 1003 new value').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+    describe('#deleteControllerDevice', () => {\n+\n+        it('should delete a controller device', async () => {\n+            await contract.deleteControllerDevice(ctx, '1001');\n+            ctx.stub.deleteState.should.have.been.calledOnceWithExactly('1001');\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.deleteControllerDevice(ctx, '1003').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+});"
},
{
"sha":"2df2cf37af0afd79833c5cc6dfa3f80f6a26a0f4",
"filename":"transaction_data/controller-device-transactions.txdata",
"status":"added",
"additions":44,
"deletions":0,
"changes":44,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8105394272d60ad4b235ad951d38348113702189/transaction_data/controller-device-transactions.txdata",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8105394272d60ad4b235ad951d38348113702189/transaction_data/controller-device-transactions.txdata",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/transaction_data/controller-device-transactions.txdata?ref=8105394272d60ad4b235ad951d38348113702189",
"patch":"@@ -0,0 +1,44 @@\n+[\n+    {\n+        \"transactionName\": \"controllerDeviceExists\",\n+        \"transactionLabel\": \"A test controllerDeviceExists transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"createControllerDevice\",\n+        \"transactionLabel\": \"A test createControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\",\n+            \"some value\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"readControllerDevice\",\n+        \"transactionLabel\": \"A test readControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"updateControllerDevice\",\n+        \"transactionLabel\": \"A test updateControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\",\n+            \"some other value\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"deleteControllerDevice\",\n+        \"transactionLabel\": \"A test deleteControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    }\n+]"
}
]
},
{
"commit_sha":"8e2d759b959a1becf6fdb6515a4af78e930f9334",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjhlMmQ3NTliOTU5YTFiZWNmNmZkYjY1MTVhNGFmNzhlOTMwZjkzMzQ=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/8e2d759b959a1becf6fdb6515a4af78e930f9334",
"commit_date":"2021-03-03T02:37:52Z",
"files":[
{
"sha":"0dca627e1d5f360813bc0a97a77e64a33d4d4537",
"filename":".gitignore",
"status":"modified",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e2d759b959a1becf6fdb6515a4af78e930f9334/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e2d759b959a1becf6fdb6515a4af78e930f9334/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=8e2d759b959a1becf6fdb6515a4af78e930f9334",
"patch":"@@ -93,3 +93,4 @@ typings/\n \n # Serverless directories\n .serverless\n+"
},
{
"sha":"7dabecc1a5e23c53d84522348cc4ec69f5cb5415",
"filename":"LICENSE",
"status":"removed",
"additions":0,
"deletions":21,
"changes":21,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/9ede236438e8016bfc894f7b7b7b2bc530feb574/LICENSE",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/9ede236438e8016bfc894f7b7b7b2bc530feb574/LICENSE",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/LICENSE?ref=9ede236438e8016bfc894f7b7b7b2bc530feb574",
"patch":"@@ -1,21 +0,0 @@\n-MIT License\n-\n-Copyright (c) 2021 TRung [Rocky] N.G.O\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in all\n-copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n-SOFTWARE."
},
{
"sha":"b7fcaf82d7076abb2575ed7616c5ef1cb7f7fbce",
"filename":"README.md",
"status":"removed",
"additions":0,
"deletions":2,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/9ede236438e8016bfc894f7b7b7b2bc530feb574/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/9ede236438e8016bfc894f7b7b7b2bc530feb574/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=9ede236438e8016bfc894f7b7b7b2bc530feb574",
"patch":"@@ -1,2 +0,0 @@\n-# EVChargerReg\n-the fully prototyped permissioned blockchain based on the Hyperledger Fabric to register devices and controllers for electric vehicles "
},
{
"sha":"82b5ce861386f5c8691ed8486ffd36ddc17f7421",
"filename":"backend/README.md",
"status":"added",
"additions":3,
"deletions":0,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/README.md?ref=8e2d759b959a1becf6fdb6515a4af78e930f9334",
"patch":"@@ -0,0 +1,3 @@\n+# EVChargerReg Backend App\n+\n+<h2> How to run guide </h2>\n\\ No newline at end of file"
},
{
"sha":"364a5127bf4520ac5fd552ab4231e0c816c05a92",
"filename":"backend/app.js",
"status":"added",
"additions":41,
"deletions":0,
"changes":41,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/app.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/app.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/app.js?ref=8e2d759b959a1becf6fdb6515a4af78e930f9334",
"patch":"@@ -0,0 +1,41 @@\n+var createError = require('http-errors');\n+var express = require('express');\n+var path = require('path');\n+var cookieParser = require('cookie-parser');\n+var logger = require('morgan');\n+\n+var indexRouter = require('./routes');\n+var usersRouter = require('./routes/users');\n+\n+var app = express();\n+\n+// view engine setup\n+app.set('views', path.join(__dirname, 'views'));\n+app.set('view engine', 'jade');\n+\n+app.use(logger('dev'));\n+app.use(express.json());\n+app.use(express.urlencoded({ extended: false }));\n+app.use(cookieParser());\n+app.use(express.static(path.join(__dirname, 'public')));\n+\n+app.use('/', indexRouter);\n+app.use('/users', usersRouter);\n+\n+// catch 404 and forward to error handler\n+app.use(function(req, res, next) {\n+  next(createError(404));\n+});\n+\n+// error handler\n+app.use(function(err, req, res, next) {\n+  // set locals, only providing error in development\n+  res.locals.message = err.message;\n+  res.locals.error = req.app.get('env') === 'development' ? err : {};\n+\n+  // render the error page\n+  res.status(err.status || 500);\n+  res.render('error');\n+});\n+\n+module.exports = app;"
},
{
"sha":"a5173912086cb7aaba9766aaf78a689177a8c411",
"filename":"backend/package.json",
"status":"added",
"additions":16,
"deletions":0,
"changes":16,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/package.json?ref=8e2d759b959a1becf6fdb6515a4af78e930f9334",
"patch":"@@ -0,0 +1,16 @@\n+{\n+  \"name\": \"evchargerreg\",\n+  \"version\": \"0.0.0\",\n+  \"private\": true,\n+  \"scripts\": {\n+    \"start\": \"node bin/www\"\n+  },\n+  \"dependencies\": {\n+    \"cookie-parser\": \"~1.4.4\",\n+    \"debug\": \"~2.6.9\",\n+    \"express\": \"~4.16.1\",\n+    \"http-errors\": \"~1.6.3\",\n+    \"jade\": \"~1.11.0\",\n+    \"morgan\": \"~1.9.1\"\n+  }\n+}"
},
{
"sha":"9453385b9916ce9bc5e88d2f5d8cd8a554223590",
"filename":"backend/public/stylesheets/style.css",
"status":"added",
"additions":8,
"deletions":0,
"changes":8,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/public/stylesheets/style.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/public/stylesheets/style.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/public/stylesheets/style.css?ref=8e2d759b959a1becf6fdb6515a4af78e930f9334",
"patch":"@@ -0,0 +1,8 @@\n+body {\n+  padding: 50px;\n+  font: 14px \"Lucida Grande\", Helvetica, Arial, sans-serif;\n+}\n+\n+a {\n+  color: #00B7FF;\n+}"
},
{
"sha":"ecca96a56b309a315ddf6399155fd2f953031d3b",
"filename":"backend/routes/index.js",
"status":"added",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/routes/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/routes/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/index.js?ref=8e2d759b959a1becf6fdb6515a4af78e930f9334",
"patch":"@@ -0,0 +1,9 @@\n+var express = require('express');\n+var router = express.Router();\n+\n+/* GET home page. */\n+router.get('/', function(req, res, next) {\n+  res.render('index', { title: 'Express' });\n+});\n+\n+module.exports = router;"
},
{
"sha":"623e4302bee32ccc080d1c83ee2e55a426c9bac8",
"filename":"backend/routes/users.js",
"status":"added",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/routes/users.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/routes/users.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/users.js?ref=8e2d759b959a1becf6fdb6515a4af78e930f9334",
"patch":"@@ -0,0 +1,9 @@\n+var express = require('express');\n+var router = express.Router();\n+\n+/* GET users listing. */\n+router.get('/', function(req, res, next) {\n+  res.send('respond with a resource');\n+});\n+\n+module.exports = router;"
},
{
"sha":"51ec12c6a26323d9f5bc51fb98cb1324a739ea4c",
"filename":"backend/views/error.jade",
"status":"added",
"additions":6,
"deletions":0,
"changes":6,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/views/error.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/views/error.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/error.jade?ref=8e2d759b959a1becf6fdb6515a4af78e930f9334",
"patch":"@@ -0,0 +1,6 @@\n+extends layout\n+\n+block content\n+  h1= message\n+  h2= error.status\n+  pre #{error.stack}"
},
{
"sha":"3d63b9a044a859b59259d5e23dd4e68ec8e1f2be",
"filename":"backend/views/index.jade",
"status":"added",
"additions":5,
"deletions":0,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/views/index.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/views/index.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/index.jade?ref=8e2d759b959a1becf6fdb6515a4af78e930f9334",
"patch":"@@ -0,0 +1,5 @@\n+extends layout\n+\n+block content\n+  h1= title\n+  p Welcome to #{title}"
},
{
"sha":"15af079bf7c34e638ba14844efd979ac9111628b",
"filename":"backend/views/layout.jade",
"status":"added",
"additions":7,
"deletions":0,
"changes":7,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/views/layout.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/8e2d759b959a1becf6fdb6515a4af78e930f9334/backend/views/layout.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/layout.jade?ref=8e2d759b959a1becf6fdb6515a4af78e930f9334",
"patch":"@@ -0,0 +1,7 @@\n+doctype html\n+html\n+  head\n+    title= title\n+    link(rel='stylesheet', href='/stylesheets/style.css')\n+  body\n+    block content"
}
]
},
{
"commit_sha":"9ede236438e8016bfc894f7b7b7b2bc530feb574",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjllZGUyMzY0MzhlODAxNmJmYzg5NGY3YjdiN2IyYmM1MzBmZWI1NzQ=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/9ede236438e8016bfc894f7b7b7b2bc530feb574",
"commit_date":"2021-03-03T02:34:55Z",
"files":[
{
"sha":"549551fe15251b3e22221d9c39bdb7997b7b6b1a",
"filename":"chaincode/DeviceController.js",
"status":"removed",
"additions":0,
"deletions":273,
"changes":273,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4814ed12eb240de1d069839598e6d714a7ab21d7/chaincode/DeviceController.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4814ed12eb240de1d069839598e6d714a7ab21d7/chaincode/DeviceController.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/DeviceController.js?ref=4814ed12eb240de1d069839598e6d714a7ab21d7",
"patch":"@@ -1,273 +0,0 @@\n-'use strict';\n-\n-const { Contract } = require('fabric-contract-api');\n-\n-class DeviceControllerContract extends Contract {\n-\n-    controllerID = 0;\n-    deviceID = 0;\n-\n-    /*\n-        It is required for initial testing, it can be removed after UI is available.\n-    */\n-    async initLedger(ctx) {\n-        console.info('============= START : Initialize Ledger ===========');\n-\n-        \n-        const controller = {};\n-        const device = {};\n-\n-        await ctx.stub.putState(0, Buffer.from(JSON.stringify(controller)));\n-        await ctx.stub.putState(0, Buffer.from(JSON.stringify(device)));\n-\n-        console.info('============= END : Initialize Ledger ===========');\n-    }\n-\n-    async registerController(ctx, controllerName, serviceProvider, long, lat) {\n-        console.info('============= START : Register Controller ===========');\n-\n-        /*\n-        FIX: Controller ID can be converted to auto-increment internally\n-             docType: 'controller' (Review the need for docType attribute)\n-        */\n-\n-        const recControllerID = this.controllerID+1;\n-\n-        const controller = {\n-            controllerID: \"CONTR-\" + recControllerID,\n-            docType: \"controller\",\n-            controllerName: controllerName,\n-            location: { \n-                long: long,\n-                lat: lat\n-            },\n-            serviceProvider: serviceProvider\n-        };\n-\n-        await ctx.stub.putState(recID, Buffer.from(JSON.stringify(controller)));\n-        console.info('============= END : Register Controller ===========');\n-    }\n-\n-    async updateController(ctx, controllerID, serviceProvider, long, lat) {\n-        console.info('============= START : Update Controller ===========');\n-\n-        const controllerAsBytes = await ctx.stub.getState(controllerID); // get the controller from chaincode state\n-        if (!controllerAsBytes || controllerAsBytes.length === 0) {\n-            throw new Error(`${controllerID} does not exist`);\n-        }\n-\n-        const controller = JSON.parse(controllerAsBytes.toString());\n-        controller.serviceProvider = serviceProvider;\n-        controller.location.long = long;\n-        controller.location.lat = lat;\n-        \n-        await ctx.stub.putState(controllerID, Buffer.from(JSON.stringify(controller)));\n-        console.info('============= END : Update Controller ===========');\n-    }\n-\n-    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n-        console.info('============= START : Register Device ===========');\n-\n-        const recDeviceID = this.deviceID+1;\n-\n-        const device = {\n-            deviceID: \"DEV-\" + recDeviceID,\n-            docType: \"device\",\n-            brand: brand,\n-            model: model,\n-            macAddress: MAC,\n-            powerType: powerType,\n-            inUse: false,\n-            location: { \n-                long: long,\n-                lat: lat\n-            }\n-        };\n-\n-        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n-\n-        console.info('============= END : Register Device ===========');\n-    }\n-\n-    async assignController(ctx, deviceID, controllerID) {\n-        console.info('============= START : Assign Controller ===========');\n-\n-        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n-        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n-            throw new Error(`${deviceID} does not exist`);\n-        }\n-\n-        const device = JSON.parse(deviceAsBytes.toString());\n-        device.controllerID = controllerID;\n-        \n-        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n-\n-        console.info('============= END : Assign Controller ===========');\n-    }\n-\n-    async changeController(ctx, deviceID, newControllerID) {\n-        console.info('============= START : Change Controller ===========');\n-\n-        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n-        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n-            throw new Error(`${deviceID} does not exist`);\n-        }\n-\n-        const device = JSON.parse(deviceAsBytes.toString());\n-        device.controllerID = newControllerID;\n-        \n-        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n-\n-        console.info('============= END : Change Controller ===========');\n-    }\n-\n-    async getDeviceController(ctx, deviceID) {\n-        console.info('============= START : Get Device Controller ===========');\n-\n-\n-        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n-        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n-            throw new Error(`${deviceID} does not exist`);\n-        }\n-\n-        const device = JSON.parse(deviceAsBytes.toString());\n-\n-        console.info('============= END : Get Device Controller ===========');\n-\n-        return device.controllerID;        \n-    }\n-\n-    async executeDeviceCommand(ctx, deviceID, command) {\n-        console.info('============= START : Execute Device Command ===========');\n-\n-        const deviceAsBytes = await ctx.stub.getState(deviceID);\n-        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n-            throw new Error(`${deviceID} does not exist`);\n-        }\n-\n-        const device = JSON.parse(deviceAsBytes.toString());\n-        device.lastExecCommand = command;\n-        device.lastExecDateTime = new Date().getTime();\n-        device.lastSeen = new Date().getTime();\n-\n-        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n-\n-        console.info('============= END : Execute Device Command ===========');\n-    }\n-\n-    async getDeviceLogs(ctx, deviceID) {\n-        console.info('============= START : Get Device Logs ===========');\n-\n-        console.info('============= END : Get Device Logs ===========');\n-    }\n-\n-    async getControllerDevices(ctx, controllerID) {\n-        console.info('============= START : Get Controller Devices ===========');\n-\n-        const allResults = [];\n-        for await (const {key, value} of ctx.stub.getQueryResult({\"selector\":{\"docType\": \"device\", \"controllerID\": controllerID}})) {\n-            const strValue = Buffer.from(value).toString('utf8');\n-            let record;\n-            try {\n-                record = JSON.parse(strValue);\n-            } catch (err) {\n-                console.log(err);\n-                record = strValue;\n-            }\n-            allResults.push({ Key: key, Record: record });\n-        }\n-        console.info(allResults);\n-        console.info('============= END : Get Controller Devices ===========');\n-        return allResults;\n-    }\n-\n-    async getDevice(ctx, deviceID) {\n-        console.info('============= START : Get Device ===========');\n-\n-        const deviceAsBytes = await ctx.stub.getState(deviceID);\n-        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n-            throw new Error(`${deviceID} does not exist`);\n-        }\n-\n-        console.info('============= END : Get Device ===========');\n-        return JSON.parse(deviceAsBytes.toString());\n-    }\n-\n-    async getAllDevice(ctx) {\n-        console.info('============= START : Get All Device ===========');\n-\n-        const allResults = [];\n-        for await (const {key, value} of ctx.stub.getQueryResult({\"selector\":{\"docType\":\"device\"}})) {\n-            const strValue = Buffer.from(value).toString('utf8');\n-            let record;\n-            try {\n-                record = JSON.parse(strValue);\n-            } catch (err) {\n-                console.log(err);\n-                record = strValue;\n-            }\n-            allResults.push({ Key: key, Record: record });\n-        }\n-        console.info(allResults);\n-        console.info('============= END : Get All Device ===========');\n-        return JSON.stringify(allResults);\n-    }\n-\n-    async getAllControllers(ctx) {\n-        console.info('============= START : Get All Controllers ===========');\n-\n-        const startKey = '';\n-        const endKey = '';\n-        const allResults = [];\n-        for await (const {key, value} of ctx.stub.getQueryResult({\"selector\":{\"docType\":\"controller\"}})) {\n-            const strValue = Buffer.from(value).toString('utf8');\n-            let record;\n-            try {\n-                record = JSON.parse(strValue);\n-            } catch (err) {\n-                console.log(err);\n-                record = strValue;\n-            }\n-            allResults.push({ Key: key, Record: record });\n-        }\n-        console.info(allResults);\n-        console.info('============= END : Get All Controllers ===========');\n-        return JSON.stringify(allResults);\n-    }\n-\n-    async updateDevice(ctx, deviceID, currentTemp) {\n-        console.info('============= START : Update Device ===========');\n-\n-        const deviceAsBytes = await ctx.stub.getState(deviceID);\n-        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n-            throw new Error(`${deviceID} does not exist`);\n-        }\n-\n-        const device = JSON.parse(deviceAsBytes.toString());\n-        device.currentTemp = currentTemp;\n-        device.lastSeen = new Date().getTime();\n-\n-        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n-\n-        console.info('============= END : Update Device ===========');        \n-    }\n-\n-    async updateDeviceStatus(ctx, deviceID) {\n-        console.info('============= START : Update Device Status ===========');\n-\n-        const deviceAsBytes = await ctx.stub.getState(deviceID);\n-        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n-            throw new Error(`${deviceID} does not exist`);\n-        }\n-\n-        const device = JSON.parse(deviceAsBytes.toString());\n-        device.inUse ? device.inUse = false : device.inUse = true;\n-        device.lastSeen = new Date().getTime();\n-\n-        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n-\n-        console.info('============= END : Update Device Status ===========');\n-    }\n-}\n-\n-module.exports = DeviceControllerContract;\n\\ No newline at end of file"
}
]
},
{
"commit_sha":"4814ed12eb240de1d069839598e6d714a7ab21d7",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjQ4MTRlZDEyZWIyNDBkZTFkMDY5ODM5NTk4ZTZkNzE0YTdhYjIxZDc=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/4814ed12eb240de1d069839598e6d714a7ab21d7",
"commit_date":"2021-03-03T02:31:39Z",
"files":[
{
"sha":"cf0c7d53efb1a68bcbfc9ecc374d0f89044fe068",
"filename":".gitignore",
"status":"modified",
"additions":74,
"deletions":0,
"changes":74,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4814ed12eb240de1d069839598e6d714a7ab21d7/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4814ed12eb240de1d069839598e6d714a7ab21d7/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=4814ed12eb240de1d069839598e6d714a7ab21d7",
"patch":"@@ -19,3 +19,77 @@ node_modules/\n # Ignore Gradle build output directory\n build\n package-lock.json\n+\n+# Logs\n+logs\n+*.log\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*\n+\n+# Runtime data\n+pids\n+*.pid\n+*.seed\n+*.pid.lock\n+\n+# Directory for instrumented libs generated by jscoverage/JSCover\n+lib-cov\n+\n+# Coverage directory used by tools like istanbul\n+coverage\n+\n+# nyc test coverage\n+.nyc_output\n+\n+# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n+.grunt\n+\n+# Bower dependency directory (https://bower.io/)\n+bower_components\n+\n+# node-waf configuration\n+.lock-wscript\n+\n+# Compiled binary addons (https://nodejs.org/api/addons.html)\n+build/Release\n+\n+# Dependency directories\n+node_modules/\n+jspm_packages/\n+\n+# TypeScript v1 declaration files\n+typings/\n+\n+# Optional npm cache directory\n+.npm\n+\n+# Optional eslint cache\n+.eslintcache\n+\n+# Optional REPL history\n+.node_repl_history\n+\n+# Output of 'npm pack'\n+*.tgz\n+\n+# Yarn Integrity file\n+.yarn-integrity\n+\n+# dotenv environment variables file\n+.env\n+\n+# parcel-bundler cache (https://parceljs.org/)\n+.cache\n+\n+# next.js build output\n+.next\n+\n+# nuxt.js build output\n+.nuxt\n+\n+# vuepress build output\n+.vuepress/dist\n+\n+# Serverless directories\n+.serverless"
},
{
"sha":"3de88baa9aebba42da4880518f28de80780bc9fe",
"filename":"index.js",
"status":"added",
"additions":10,
"deletions":0,
"changes":10,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4814ed12eb240de1d069839598e6d714a7ab21d7/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4814ed12eb240de1d069839598e6d714a7ab21d7/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/index.js?ref=4814ed12eb240de1d069839598e6d714a7ab21d7",
"patch":"@@ -0,0 +1,10 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const ControllerDeviceContract = require('./lib/controller-device-contract');\n+\n+module.exports.ControllerDeviceContract = ControllerDeviceContract;\n+module.exports.contracts = [ ControllerDeviceContract ];"
},
{
"sha":"4ab268b6985d1714533fb40f4349b3eb3e7fe588",
"filename":"lib/controller-device-contract.js",
"status":"added",
"additions":303,
"deletions":0,
"changes":303,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4814ed12eb240de1d069839598e6d714a7ab21d7/lib/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4814ed12eb240de1d069839598e6d714a7ab21d7/lib/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/lib/controller-device-contract.js?ref=4814ed12eb240de1d069839598e6d714a7ab21d7",
"patch":"@@ -0,0 +1,303 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const { Contract } = require('fabric-contract-api');\n+\n+class ControllerDeviceContract extends Contract {\n+\n+    controllerID = 0;\n+    deviceID = 0;\n+\n+    /*\n+        It is required for initial testing, it can be removed after UI is available.\n+    */\n+    async initLedger(ctx) {\n+        console.info('============= START : Initialize Ledger ===========');\n+\n+        \n+        const controller = {};\n+        const device = {};\n+\n+        await ctx.stub.putState(0, Buffer.from(JSON.stringify(controller)));\n+        await ctx.stub.putState(0, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Initialize Ledger ===========');\n+    }\n+\n+    async registerController(ctx, controllerName, serviceProvider, long, lat) {\n+        console.info('============= START : Register Controller ===========');\n+\n+        /*\n+        FIX: Controller ID can be converted to auto-increment internally\n+             docType: 'controller' (Review the need for docType attribute)\n+        */\n+\n+        this.controllerID++;\n+        const recControllerID = \"CONTR-\" + this.controllerID;\n+        console.log(\"this.controllerID = \" + this.controllerID);\n+\n+        const controller = {\n+            controllerID: recControllerID,\n+            docType: \"controller\",\n+            controllerName: controllerName,\n+            location: { \n+                long: long,\n+                lat: lat\n+            },\n+            serviceProvider: serviceProvider\n+        };\n+\n+        await ctx.stub.putState(recControllerID, Buffer.from(JSON.stringify(controller)));\n+        console.info('============= END : Register Controller ===========');\n+    }\n+\n+    async updateController(ctx, controllerID, serviceProvider, long, lat) {\n+        console.info('============= START : Update Controller ===========');\n+\n+        const controllerAsBytes = await ctx.stub.getState(controllerID); // get the controller from chaincode state\n+        if (!controllerAsBytes || controllerAsBytes.length === 0) {\n+            throw new Error(`${controllerID} does not exist`);\n+        }\n+\n+        const controller = JSON.parse(controllerAsBytes.toString());\n+        controller.serviceProvider = serviceProvider;\n+        controller.location.long = long;\n+        controller.location.lat = lat;\n+        \n+        await ctx.stub.putState(controllerID, Buffer.from(JSON.stringify(controller)));\n+        console.info('============= END : Update Controller ===========');\n+    }\n+\n+    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n+        console.info('============= START : Register Device ===========');\n+\n+        this.deviceID++;\n+        const recDeviceID = \"DEV-\" + this.deviceID;\n+        console.log(\"this.deviceID = \" + this.deviceID);\n+\n+        const device = {\n+            deviceID: recDeviceID,\n+            docType: \"device\",\n+            brand: brand,\n+            model: model,\n+            macAddress: MAC,\n+            powerType: powerType,\n+            inUse: false,\n+            location: { \n+                long: long,\n+                lat: lat\n+            }\n+        };\n+\n+        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Register Device ===========');\n+    }\n+\n+    async assignController(ctx, deviceID, controllerID) {\n+        console.info('============= START : Assign Controller ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.controllerID = controllerID;\n+        \n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Assign Controller ===========');\n+    }\n+\n+    async changeController(ctx, deviceID, newControllerID) {\n+        console.info('============= START : Change Controller ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.controllerID = newControllerID;\n+        \n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Change Controller ===========');\n+    }\n+\n+    async getDeviceController(ctx, deviceID) {\n+        console.info('============= START : Get Device Controller ===========');\n+\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+\n+        console.info('============= END : Get Device Controller ===========');\n+\n+        return device.controllerID;        \n+    }\n+\n+    async executeDeviceCommand(ctx, deviceID, command) {\n+        console.info('============= START : Execute Device Command ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.lastExecCommand = command;\n+        device.lastExecDateTime = new Date().getTime();\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Execute Device Command ===========');\n+    }\n+\n+    /*\n+    async getDeviceLogs(ctx, deviceID) {\n+        console.info('============= START : Get Device Logs ===========');\n+        console.info('============= END : Get Device Logs ===========');\n+    }\n+    */\n+\n+    async getControllerDevices(ctx, controllerID) {\n+        console.info('============= START : Get Controller Devices ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\": \"device\", \n+                \"controllerID\": controllerID\n+            }\n+       };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+          \n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get Controller Devices ===========');\n+        return allResults;\n+    }\n+\n+    async getDevice(ctx, deviceID) {\n+        console.info('============= START : Get Device ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        console.info('============= END : Get Device ===========');\n+        return JSON.parse(deviceAsBytes.toString());\n+    }\n+\n+    async getAllDevices(ctx) {\n+        console.info('============= START : Get All Devices ===========');\n+\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"device\"\n+            }\n+        };\n+\n+        const allResults = [];\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Devices ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n+    async getAllControllers(ctx) {\n+        console.info('============= START : Get All Controllers ===========');\n+\n+        let queryString = {\n+            \"selector\": {\n+                \"docType\":\"controller\"\n+            }\n+        };\n+\n+        const allResults = [];\n+\n+        for await (const {key, value} of ctx.stub.getQueryResult(JSON.stringify(queryString))) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Controllers ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n+    async updateDevice(ctx, deviceID, currentTemp) {\n+        console.info('============= START : Update Device ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.currentTemp = currentTemp;\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Update Device ===========');        \n+    }\n+\n+    async updateDeviceStatus(ctx, deviceID) {\n+        console.info('============= START : Update Device Status ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.inUse ? device.inUse = false : device.inUse = true;\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Update Device Status ===========');\n+    }\n+}\n+\n+module.exports = ControllerDeviceContract;"
},
{
"sha":"a8e438b847f192679820240f4ac790a6d9e29580",
"filename":"package.json",
"status":"added",
"additions":50,
"deletions":0,
"changes":50,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4814ed12eb240de1d069839598e6d714a7ab21d7/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4814ed12eb240de1d069839598e6d714a7ab21d7/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/package.json?ref=4814ed12eb240de1d069839598e6d714a7ab21d7",
"patch":"@@ -0,0 +1,50 @@\n+{\n+  \"name\": \"EVChargerReg\",\n+  \"version\": \"0.0.12\",\n+  \"description\": \"My Smart Contract\",\n+  \"main\": \"index.js\",\n+  \"engines\": {\n+    \"node\": \">=8\",\n+    \"npm\": \">=5\"\n+  },\n+  \"scripts\": {\n+    \"lint\": \"eslint .\",\n+    \"pretest\": \"npm run lint\",\n+    \"test\": \"nyc mocha --recursive\",\n+    \"start\": \"fabric-chaincode-node start\"\n+  },\n+  \"engineStrict\": true,\n+  \"author\": \"John Doe\",\n+  \"license\": \"Apache-2.0\",\n+  \"dependencies\": {\n+    \"fabric-contract-api\": \"^2.2.0\",\n+    \"fabric-shim\": \"^2.2.0\"\n+  },\n+  \"devDependencies\": {\n+    \"chai\": \"^4.2.0\",\n+    \"chai-as-promised\": \"^7.1.1\",\n+    \"eslint\": \"^6.8.0\",\n+    \"mocha\": \"^7.1.1\",\n+    \"nyc\": \"^15.0.0\",\n+    \"sinon\": \"^9.0.1\",\n+    \"sinon-chai\": \"^3.5.0\",\n+    \"winston\": \"^3.2.1\"\n+  },\n+  \"nyc\": {\n+    \"exclude\": [\n+      \".eslintrc.js\",\n+      \"coverage/**\",\n+      \"test/**\"\n+    ],\n+    \"reporter\": [\n+      \"text-summary\",\n+      \"html\"\n+    ],\n+    \"all\": true,\n+    \"check-coverage\": true,\n+    \"statements\": 100,\n+    \"branches\": 100,\n+    \"functions\": 100,\n+    \"lines\": 100\n+  }\n+}"
},
{
"sha":"8ff35d20d93d070ced35c1f24b6fc905fff1a7d5",
"filename":"test/controller-device-contract.js",
"status":"added",
"additions":108,
"deletions":0,
"changes":108,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4814ed12eb240de1d069839598e6d714a7ab21d7/test/controller-device-contract.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4814ed12eb240de1d069839598e6d714a7ab21d7/test/controller-device-contract.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/test/controller-device-contract.js?ref=4814ed12eb240de1d069839598e6d714a7ab21d7",
"patch":"@@ -0,0 +1,108 @@\n+/*\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+'use strict';\n+\n+const { ChaincodeStub, ClientIdentity } = require('fabric-shim');\n+const { ControllerDeviceContract } = require('..');\n+const winston = require('winston');\n+\n+const chai = require('chai');\n+const chaiAsPromised = require('chai-as-promised');\n+const sinon = require('sinon');\n+const sinonChai = require('sinon-chai');\n+\n+chai.should();\n+chai.use(chaiAsPromised);\n+chai.use(sinonChai);\n+\n+class TestContext {\n+\n+    constructor() {\n+        this.stub = sinon.createStubInstance(ChaincodeStub);\n+        this.clientIdentity = sinon.createStubInstance(ClientIdentity);\n+        this.logger = {\n+            getLogger: sinon.stub().returns(sinon.createStubInstance(winston.createLogger().constructor)),\n+            setLevel: sinon.stub(),\n+        };\n+    }\n+\n+}\n+\n+describe('ControllerDeviceContract', () => {\n+\n+    let contract;\n+    let ctx;\n+\n+    beforeEach(() => {\n+        contract = new ControllerDeviceContract();\n+        ctx = new TestContext();\n+        ctx.stub.getState.withArgs('1001').resolves(Buffer.from('{\"value\":\"controller device 1001 value\"}'));\n+        ctx.stub.getState.withArgs('1002').resolves(Buffer.from('{\"value\":\"controller device 1002 value\"}'));\n+    });\n+\n+    describe('#controllerDeviceExists', () => {\n+\n+        it('should return true for a controller device', async () => {\n+            await contract.controllerDeviceExists(ctx, '1001').should.eventually.be.true;\n+        });\n+\n+        it('should return false for a controller device that does not exist', async () => {\n+            await contract.controllerDeviceExists(ctx, '1003').should.eventually.be.false;\n+        });\n+\n+    });\n+\n+    describe('#createControllerDevice', () => {\n+\n+        it('should create a controller device', async () => {\n+            await contract.createControllerDevice(ctx, '1003', 'controller device 1003 value');\n+            ctx.stub.putState.should.have.been.calledOnceWithExactly('1003', Buffer.from('{\"value\":\"controller device 1003 value\"}'));\n+        });\n+\n+        it('should throw an error for a controller device that already exists', async () => {\n+            await contract.createControllerDevice(ctx, '1001', 'myvalue').should.be.rejectedWith(/The controller device 1001 already exists/);\n+        });\n+\n+    });\n+\n+    describe('#readControllerDevice', () => {\n+\n+        it('should return a controller device', async () => {\n+            await contract.readControllerDevice(ctx, '1001').should.eventually.deep.equal({ value: 'controller device 1001 value' });\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.readControllerDevice(ctx, '1003').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+    describe('#updateControllerDevice', () => {\n+\n+        it('should update a controller device', async () => {\n+            await contract.updateControllerDevice(ctx, '1001', 'controller device 1001 new value');\n+            ctx.stub.putState.should.have.been.calledOnceWithExactly('1001', Buffer.from('{\"value\":\"controller device 1001 new value\"}'));\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.updateControllerDevice(ctx, '1003', 'controller device 1003 new value').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+    describe('#deleteControllerDevice', () => {\n+\n+        it('should delete a controller device', async () => {\n+            await contract.deleteControllerDevice(ctx, '1001');\n+            ctx.stub.deleteState.should.have.been.calledOnceWithExactly('1001');\n+        });\n+\n+        it('should throw an error for a controller device that does not exist', async () => {\n+            await contract.deleteControllerDevice(ctx, '1003').should.be.rejectedWith(/The controller device 1003 does not exist/);\n+        });\n+\n+    });\n+\n+});"
},
{
"sha":"2df2cf37af0afd79833c5cc6dfa3f80f6a26a0f4",
"filename":"transaction_data/controller-device-transactions.txdata",
"status":"added",
"additions":44,
"deletions":0,
"changes":44,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/4814ed12eb240de1d069839598e6d714a7ab21d7/transaction_data/controller-device-transactions.txdata",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/4814ed12eb240de1d069839598e6d714a7ab21d7/transaction_data/controller-device-transactions.txdata",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/transaction_data/controller-device-transactions.txdata?ref=4814ed12eb240de1d069839598e6d714a7ab21d7",
"patch":"@@ -0,0 +1,44 @@\n+[\n+    {\n+        \"transactionName\": \"controllerDeviceExists\",\n+        \"transactionLabel\": \"A test controllerDeviceExists transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"createControllerDevice\",\n+        \"transactionLabel\": \"A test createControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\",\n+            \"some value\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"readControllerDevice\",\n+        \"transactionLabel\": \"A test readControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"updateControllerDevice\",\n+        \"transactionLabel\": \"A test updateControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\",\n+            \"some other value\"\n+        ],\n+        \"transientData\": {}\n+    },\n+    {\n+        \"transactionName\": \"deleteControllerDevice\",\n+        \"transactionLabel\": \"A test deleteControllerDevice transaction\",\n+        \"arguments\": [\n+            \"001\"\n+        ],\n+        \"transientData\": {}\n+    }\n+]"
}
]
},
{
"commit_sha":"79402dfa707b9dcb551778a52943a25244195d8f",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2Ojc5NDAyZGZhNzA3YjlkY2I1NTE3NzhhNTI5NDNhMjUyNDQxOTVkOGY=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/79402dfa707b9dcb551778a52943a25244195d8f",
"commit_date":"2021-03-03T00:17:45Z",
"files":[
{
"sha":"549551fe15251b3e22221d9c39bdb7997b7b6b1a",
"filename":"chaincode/DeviceController.js",
"status":"added",
"additions":273,
"deletions":0,
"changes":273,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/79402dfa707b9dcb551778a52943a25244195d8f/chaincode/DeviceController.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/79402dfa707b9dcb551778a52943a25244195d8f/chaincode/DeviceController.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/chaincode/DeviceController.js?ref=79402dfa707b9dcb551778a52943a25244195d8f",
"patch":"@@ -0,0 +1,273 @@\n+'use strict';\n+\n+const { Contract } = require('fabric-contract-api');\n+\n+class DeviceControllerContract extends Contract {\n+\n+    controllerID = 0;\n+    deviceID = 0;\n+\n+    /*\n+        It is required for initial testing, it can be removed after UI is available.\n+    */\n+    async initLedger(ctx) {\n+        console.info('============= START : Initialize Ledger ===========');\n+\n+        \n+        const controller = {};\n+        const device = {};\n+\n+        await ctx.stub.putState(0, Buffer.from(JSON.stringify(controller)));\n+        await ctx.stub.putState(0, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Initialize Ledger ===========');\n+    }\n+\n+    async registerController(ctx, controllerName, serviceProvider, long, lat) {\n+        console.info('============= START : Register Controller ===========');\n+\n+        /*\n+        FIX: Controller ID can be converted to auto-increment internally\n+             docType: 'controller' (Review the need for docType attribute)\n+        */\n+\n+        const recControllerID = this.controllerID+1;\n+\n+        const controller = {\n+            controllerID: \"CONTR-\" + recControllerID,\n+            docType: \"controller\",\n+            controllerName: controllerName,\n+            location: { \n+                long: long,\n+                lat: lat\n+            },\n+            serviceProvider: serviceProvider\n+        };\n+\n+        await ctx.stub.putState(recID, Buffer.from(JSON.stringify(controller)));\n+        console.info('============= END : Register Controller ===========');\n+    }\n+\n+    async updateController(ctx, controllerID, serviceProvider, long, lat) {\n+        console.info('============= START : Update Controller ===========');\n+\n+        const controllerAsBytes = await ctx.stub.getState(controllerID); // get the controller from chaincode state\n+        if (!controllerAsBytes || controllerAsBytes.length === 0) {\n+            throw new Error(`${controllerID} does not exist`);\n+        }\n+\n+        const controller = JSON.parse(controllerAsBytes.toString());\n+        controller.serviceProvider = serviceProvider;\n+        controller.location.long = long;\n+        controller.location.lat = lat;\n+        \n+        await ctx.stub.putState(controllerID, Buffer.from(JSON.stringify(controller)));\n+        console.info('============= END : Update Controller ===========');\n+    }\n+\n+    async registerDevice(ctx, brand, model, MAC, powerType, long, lat) {\n+        console.info('============= START : Register Device ===========');\n+\n+        const recDeviceID = this.deviceID+1;\n+\n+        const device = {\n+            deviceID: \"DEV-\" + recDeviceID,\n+            docType: \"device\",\n+            brand: brand,\n+            model: model,\n+            macAddress: MAC,\n+            powerType: powerType,\n+            inUse: false,\n+            location: { \n+                long: long,\n+                lat: lat\n+            }\n+        };\n+\n+        await ctx.stub.putState(recDeviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Register Device ===========');\n+    }\n+\n+    async assignController(ctx, deviceID, controllerID) {\n+        console.info('============= START : Assign Controller ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.controllerID = controllerID;\n+        \n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Assign Controller ===========');\n+    }\n+\n+    async changeController(ctx, deviceID, newControllerID) {\n+        console.info('============= START : Change Controller ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.controllerID = newControllerID;\n+        \n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Change Controller ===========');\n+    }\n+\n+    async getDeviceController(ctx, deviceID) {\n+        console.info('============= START : Get Device Controller ===========');\n+\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID); // get the device from chaincode state\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+\n+        console.info('============= END : Get Device Controller ===========');\n+\n+        return device.controllerID;        \n+    }\n+\n+    async executeDeviceCommand(ctx, deviceID, command) {\n+        console.info('============= START : Execute Device Command ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.lastExecCommand = command;\n+        device.lastExecDateTime = new Date().getTime();\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Execute Device Command ===========');\n+    }\n+\n+    async getDeviceLogs(ctx, deviceID) {\n+        console.info('============= START : Get Device Logs ===========');\n+\n+        console.info('============= END : Get Device Logs ===========');\n+    }\n+\n+    async getControllerDevices(ctx, controllerID) {\n+        console.info('============= START : Get Controller Devices ===========');\n+\n+        const allResults = [];\n+        for await (const {key, value} of ctx.stub.getQueryResult({\"selector\":{\"docType\": \"device\", \"controllerID\": controllerID}})) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get Controller Devices ===========');\n+        return allResults;\n+    }\n+\n+    async getDevice(ctx, deviceID) {\n+        console.info('============= START : Get Device ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        console.info('============= END : Get Device ===========');\n+        return JSON.parse(deviceAsBytes.toString());\n+    }\n+\n+    async getAllDevice(ctx) {\n+        console.info('============= START : Get All Device ===========');\n+\n+        const allResults = [];\n+        for await (const {key, value} of ctx.stub.getQueryResult({\"selector\":{\"docType\":\"device\"}})) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Device ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n+    async getAllControllers(ctx) {\n+        console.info('============= START : Get All Controllers ===========');\n+\n+        const startKey = '';\n+        const endKey = '';\n+        const allResults = [];\n+        for await (const {key, value} of ctx.stub.getQueryResult({\"selector\":{\"docType\":\"controller\"}})) {\n+            const strValue = Buffer.from(value).toString('utf8');\n+            let record;\n+            try {\n+                record = JSON.parse(strValue);\n+            } catch (err) {\n+                console.log(err);\n+                record = strValue;\n+            }\n+            allResults.push({ Key: key, Record: record });\n+        }\n+        console.info(allResults);\n+        console.info('============= END : Get All Controllers ===========');\n+        return JSON.stringify(allResults);\n+    }\n+\n+    async updateDevice(ctx, deviceID, currentTemp) {\n+        console.info('============= START : Update Device ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.currentTemp = currentTemp;\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Update Device ===========');        \n+    }\n+\n+    async updateDeviceStatus(ctx, deviceID) {\n+        console.info('============= START : Update Device Status ===========');\n+\n+        const deviceAsBytes = await ctx.stub.getState(deviceID);\n+        if (!deviceAsBytes || deviceAsBytes.length === 0) {\n+            throw new Error(`${deviceID} does not exist`);\n+        }\n+\n+        const device = JSON.parse(deviceAsBytes.toString());\n+        device.inUse ? device.inUse = false : device.inUse = true;\n+        device.lastSeen = new Date().getTime();\n+\n+        await ctx.stub.putState(deviceID, Buffer.from(JSON.stringify(device)));\n+\n+        console.info('============= END : Update Device Status ===========');\n+    }\n+}\n+\n+module.exports = DeviceControllerContract;\n\\ No newline at end of file"
}
]
},
{
"commit_sha":"6656feebf656e523d5fa54284779ed93b9689c4c",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjY2NTZmZWViZjY1NmU1MjNkNWZhNTQyODQ3NzllZDkzYjk2ODljNGM=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/6656feebf656e523d5fa54284779ed93b9689c4c",
"commit_date":"2021-03-02T22:34:06Z",
"files":[
{
"sha":"f55e49e717fa3d529a3d9281156cbd1a17497e34",
"filename":".gitignore",
"status":"modified",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/6656feebf656e523d5fa54284779ed93b9689c4c/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/6656feebf656e523d5fa54284779ed93b9689c4c/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=6656feebf656e523d5fa54284779ed93b9689c4c",
"patch":"@@ -19,3 +19,5 @@ node_modules/\n # Ignore Gradle build output directory\n build\n package-lock.json\n+# Ignore gitignore\n+.gitignore"
},
{
"sha":"7dabecc1a5e23c53d84522348cc4ec69f5cb5415",
"filename":"LICENSE",
"status":"removed",
"additions":0,
"deletions":21,
"changes":21,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/LICENSE",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/LICENSE",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/LICENSE?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -1,21 +0,0 @@\n-MIT License\n-\n-Copyright (c) 2021 TRung [Rocky] N.G.O\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in all\n-copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n-SOFTWARE."
},
{
"sha":"b7fcaf82d7076abb2575ed7616c5ef1cb7f7fbce",
"filename":"README.md",
"status":"removed",
"additions":0,
"deletions":2,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -1,2 +0,0 @@\n-# EVChargerReg\n-the fully prototyped permissioned blockchain based on the Hyperledger Fabric to register devices and controllers for electric vehicles "
}
]
},
{
"commit_sha":"744afcd11e9f515d7a707baa253171842fbc482f",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2Ojc0NGFmY2QxMWU5ZjUxNWQ3YTcwN2JhYTI1MzE3MTg0MmZiYzQ4MmY=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/744afcd11e9f515d7a707baa253171842fbc482f",
"commit_date":"2021-03-02T22:28:00Z",
"files":[
{
"sha":"82b5ce861386f5c8691ed8486ffd36ddc17f7421",
"filename":"backend/README.md",
"status":"added",
"additions":3,
"deletions":0,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/backend/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/backend/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/README.md?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -0,0 +1,3 @@\n+# EVChargerReg Backend App\n+\n+<h2> How to run guide </h2>\n\\ No newline at end of file"
},
{
"sha":"364a5127bf4520ac5fd552ab4231e0c816c05a92",
"filename":"backend/app.js",
"status":"added",
"additions":41,
"deletions":0,
"changes":41,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/backend/app.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/backend/app.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/app.js?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -0,0 +1,41 @@\n+var createError = require('http-errors');\n+var express = require('express');\n+var path = require('path');\n+var cookieParser = require('cookie-parser');\n+var logger = require('morgan');\n+\n+var indexRouter = require('./routes');\n+var usersRouter = require('./routes/users');\n+\n+var app = express();\n+\n+// view engine setup\n+app.set('views', path.join(__dirname, 'views'));\n+app.set('view engine', 'jade');\n+\n+app.use(logger('dev'));\n+app.use(express.json());\n+app.use(express.urlencoded({ extended: false }));\n+app.use(cookieParser());\n+app.use(express.static(path.join(__dirname, 'public')));\n+\n+app.use('/', indexRouter);\n+app.use('/users', usersRouter);\n+\n+// catch 404 and forward to error handler\n+app.use(function(req, res, next) {\n+  next(createError(404));\n+});\n+\n+// error handler\n+app.use(function(err, req, res, next) {\n+  // set locals, only providing error in development\n+  res.locals.message = err.message;\n+  res.locals.error = req.app.get('env') === 'development' ? err : {};\n+\n+  // render the error page\n+  res.status(err.status || 500);\n+  res.render('error');\n+});\n+\n+module.exports = app;"
},
{
"sha":"a5173912086cb7aaba9766aaf78a689177a8c411",
"filename":"backend/package.json",
"status":"added",
"additions":16,
"deletions":0,
"changes":16,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/backend/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/backend/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/package.json?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -0,0 +1,16 @@\n+{\n+  \"name\": \"evchargerreg\",\n+  \"version\": \"0.0.0\",\n+  \"private\": true,\n+  \"scripts\": {\n+    \"start\": \"node bin/www\"\n+  },\n+  \"dependencies\": {\n+    \"cookie-parser\": \"~1.4.4\",\n+    \"debug\": \"~2.6.9\",\n+    \"express\": \"~4.16.1\",\n+    \"http-errors\": \"~1.6.3\",\n+    \"jade\": \"~1.11.0\",\n+    \"morgan\": \"~1.9.1\"\n+  }\n+}"
},
{
"sha":"9453385b9916ce9bc5e88d2f5d8cd8a554223590",
"filename":"backend/public/stylesheets/style.css",
"status":"added",
"additions":8,
"deletions":0,
"changes":8,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/backend/public/stylesheets/style.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/backend/public/stylesheets/style.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/public/stylesheets/style.css?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -0,0 +1,8 @@\n+body {\n+  padding: 50px;\n+  font: 14px \"Lucida Grande\", Helvetica, Arial, sans-serif;\n+}\n+\n+a {\n+  color: #00B7FF;\n+}"
},
{
"sha":"ecca96a56b309a315ddf6399155fd2f953031d3b",
"filename":"backend/routes/index.js",
"status":"added",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/backend/routes/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/backend/routes/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/index.js?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -0,0 +1,9 @@\n+var express = require('express');\n+var router = express.Router();\n+\n+/* GET home page. */\n+router.get('/', function(req, res, next) {\n+  res.render('index', { title: 'Express' });\n+});\n+\n+module.exports = router;"
},
{
"sha":"623e4302bee32ccc080d1c83ee2e55a426c9bac8",
"filename":"backend/routes/users.js",
"status":"added",
"additions":9,
"deletions":0,
"changes":9,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/backend/routes/users.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/backend/routes/users.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/routes/users.js?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -0,0 +1,9 @@\n+var express = require('express');\n+var router = express.Router();\n+\n+/* GET users listing. */\n+router.get('/', function(req, res, next) {\n+  res.send('respond with a resource');\n+});\n+\n+module.exports = router;"
},
{
"sha":"51ec12c6a26323d9f5bc51fb98cb1324a739ea4c",
"filename":"backend/views/error.jade",
"status":"added",
"additions":6,
"deletions":0,
"changes":6,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/backend/views/error.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/backend/views/error.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/error.jade?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -0,0 +1,6 @@\n+extends layout\n+\n+block content\n+  h1= message\n+  h2= error.status\n+  pre #{error.stack}"
},
{
"sha":"3d63b9a044a859b59259d5e23dd4e68ec8e1f2be",
"filename":"backend/views/index.jade",
"status":"added",
"additions":5,
"deletions":0,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/backend/views/index.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/backend/views/index.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/index.jade?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -0,0 +1,5 @@\n+extends layout\n+\n+block content\n+  h1= title\n+  p Welcome to #{title}"
},
{
"sha":"15af079bf7c34e638ba14844efd979ac9111628b",
"filename":"backend/views/layout.jade",
"status":"added",
"additions":7,
"deletions":0,
"changes":7,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/744afcd11e9f515d7a707baa253171842fbc482f/backend/views/layout.jade",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/744afcd11e9f515d7a707baa253171842fbc482f/backend/views/layout.jade",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/backend/views/layout.jade?ref=744afcd11e9f515d7a707baa253171842fbc482f",
"patch":"@@ -0,0 +1,7 @@\n+doctype html\n+html\n+  head\n+    title= title\n+    link(rel='stylesheet', href='/stylesheets/style.css')\n+  body\n+    block content"
}
]
},
{
"commit_sha":"28ec96ce410f3c7f659533b34ef4b13b839c8c3c",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjI4ZWM5NmNlNDEwZjNjN2Y2NTk1MzNiMzRlZjRiMTNiODM5YzhjM2M=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/28ec96ce410f3c7f659533b34ef4b13b839c8c3c",
"commit_date":"2021-03-02T22:24:38Z",
"files":[
{
"sha":"cdbd4dbf062ac62def356f52da4106063c8d0b76",
"filename":".gitignore",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/28ec96ce410f3c7f659533b34ef4b13b839c8c3c/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/28ec96ce410f3c7f659533b34ef4b13b839c8c3c/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=28ec96ce410f3c7f659533b34ef4b13b839c8c3c",
"patch":"@@ -5,7 +5,7 @@\n # Vim file artifacts\n .*.sw*\n # installed platform-specific binaries\n-/bin\n+/backend/bin\n /config\n .DS_Store\n .project"
}
]
},
{
"commit_sha":"08bef7f6846ca69982e3c37e8ca1ddfc528c4a82",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjA4YmVmN2Y2ODQ2Y2E2OTk4MmUzYzM3ZThjYTFkZGZjNTI4YzRhODI=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/08bef7f6846ca69982e3c37e8ca1ddfc528c4a82",
"commit_date":"2021-03-02T22:21:48Z",
"files":[
{
"sha":"cdbd4dbf062ac62def356f52da4106063c8d0b76",
"filename":".gitignore",
"status":"modified",
"additions":1,
"deletions":1,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/08bef7f6846ca69982e3c37e8ca1ddfc528c4a82/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/08bef7f6846ca69982e3c37e8ca1ddfc528c4a82/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=08bef7f6846ca69982e3c37e8ca1ddfc528c4a82",
"patch":"@@ -5,7 +5,7 @@\n # Vim file artifacts\n .*.sw*\n # installed platform-specific binaries\n-/bin\n+/backend/bin\n /config\n .DS_Store\n .project"
}
]
},
{
"commit_sha":"a50d6d76528b1fddae30a25885ceeaecf54da465",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmE1MGQ2ZDc2NTI4YjFmZGRhZTMwYTI1ODg1Y2VlYWVjZjU0ZGE0NjU=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/a50d6d76528b1fddae30a25885ceeaecf54da465",
"commit_date":"2021-03-02T19:51:42Z",
"files":[
{
"sha":"4d29575de80483b005c29bfcac5061cd2f45313e",
"filename":".gitignore",
"status":"added",
"additions":23,
"deletions":0,
"changes":23,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,23 @@\n+# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n+\n+# dependencies\n+/node_modules\n+/.pnp\n+.pnp.js\n+\n+# testing\n+/coverage\n+\n+# production\n+/build\n+\n+# misc\n+.DS_Store\n+.env.local\n+.env.development.local\n+.env.test.local\n+.env.production.local\n+\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*"
},
{
"sha":"02aac3f6ea17c461434c5f5e4aaf24d7f14d183e",
"filename":"README.md",
"status":"added",
"additions":70,
"deletions":0,
"changes":70,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,70 @@\n+# Getting Started with Create React App\n+\n+This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n+\n+## Available Scripts\n+\n+In the project directory, you can run:\n+\n+### `yarn start`\n+\n+Runs the app in the development mode.\\\n+Open [http://localhost:3000](http://localhost:3000) to view it in the browser.\n+\n+The page will reload if you make edits.\\\n+You will also see any lint errors in the console.\n+\n+### `yarn test`\n+\n+Launches the test runner in the interactive watch mode.\\\n+See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\n+\n+### `yarn build`\n+\n+Builds the app for production to the `build` folder.\\\n+It correctly bundles React in production mode and optimizes the build for the best performance.\n+\n+The build is minified and the filenames include the hashes.\\\n+Your app is ready to be deployed!\n+\n+See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\n+\n+### `yarn eject`\n+\n+**Note: this is a one-way operation. Once you `eject`, you can\u2019t go back!**\n+\n+If you aren\u2019t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\n+\n+Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you\u2019re on your own.\n+\n+You don\u2019t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn\u2019t feel obligated to use this feature. However we understand that this tool wouldn\u2019t be useful if you couldn\u2019t customize it when you are ready for it.\n+\n+## Learn More\n+\n+You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\n+\n+To learn React, check out the [React documentation](https://reactjs.org/).\n+\n+### Code Splitting\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)\n+\n+### Analyzing the Bundle Size\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)\n+\n+### Making a Progressive Web App\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)\n+\n+### Advanced Configuration\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)\n+\n+### Deployment\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)\n+\n+### `yarn build` fails to minify\n+\n+This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)"
},
{
"sha":"32dd45d1c7f7928c8a3d03158afea3f7b92cbe4c",
"filename":"package.json",
"status":"added",
"additions":38,
"deletions":0,
"changes":38,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/package.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/package.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/package.json?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,38 @@\n+{\n+  \"name\": \"front-end\",\n+  \"version\": \"0.1.0\",\n+  \"private\": true,\n+  \"dependencies\": {\n+    \"@testing-library/jest-dom\": \"^5.11.4\",\n+    \"@testing-library/react\": \"^11.1.0\",\n+    \"@testing-library/user-event\": \"^12.1.10\",\n+    \"react\": \"^17.0.1\",\n+    \"react-dom\": \"^17.0.1\",\n+    \"react-scripts\": \"4.0.3\",\n+    \"web-vitals\": \"^1.0.1\"\n+  },\n+  \"scripts\": {\n+    \"start\": \"react-scripts start\",\n+    \"build\": \"react-scripts build\",\n+    \"test\": \"react-scripts test\",\n+    \"eject\": \"react-scripts eject\"\n+  },\n+  \"eslintConfig\": {\n+    \"extends\": [\n+      \"react-app\",\n+      \"react-app/jest\"\n+    ]\n+  },\n+  \"browserslist\": {\n+    \"production\": [\n+      \">0.2%\",\n+      \"not dead\",\n+      \"not op_mini all\"\n+    ],\n+    \"development\": [\n+      \"last 1 chrome version\",\n+      \"last 1 firefox version\",\n+      \"last 1 safari version\"\n+    ]\n+  }\n+}"
},
{
"sha":"a11777cc471a4344702741ab1c8a588998b1311a",
"filename":"public/favicon.ico",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/public/favicon.ico",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/public/favicon.ico",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/favicon.ico?ref=a50d6d76528b1fddae30a25885ceeaecf54da465"
},
{
"sha":"aa069f27cbd9d53394428171c3989fd03db73c76",
"filename":"public/index.html",
"status":"added",
"additions":43,
"deletions":0,
"changes":43,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/public/index.html",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/public/index.html",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/index.html?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,43 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+  <head>\n+    <meta charset=\"utf-8\" />\n+    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n+    <meta name=\"theme-color\" content=\"#000000\" />\n+    <meta\n+      name=\"description\"\n+      content=\"Web site created using create-react-app\"\n+    />\n+    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n+    <!--\n+      manifest.json provides metadata used when your web app is installed on a\n+      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n+    -->\n+    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n+    <!--\n+      Notice the use of %PUBLIC_URL% in the tags above.\n+      It will be replaced with the URL of the `public` folder during the build.\n+      Only files inside the `public` folder can be referenced from the HTML.\n+\n+      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n+      work correctly both with client-side routing and a non-root public URL.\n+      Learn how to configure a non-root public URL by running `npm run build`.\n+    -->\n+    <title>React App</title>\n+  </head>\n+  <body>\n+    <noscript>You need to enable JavaScript to run this app.</noscript>\n+    <div id=\"root\"></div>\n+    <!--\n+      This HTML file is a template.\n+      If you open it directly in the browser, you will see an empty page.\n+\n+      You can add webfonts, meta tags, or analytics to this file.\n+      The build step will place the bundled scripts into the <body> tag.\n+\n+      To begin the development, run `npm start` or `yarn start`.\n+      To create a production bundle, use `npm run build` or `yarn build`.\n+    -->\n+  </body>\n+</html>"
},
{
"sha":"fc44b0a3796c0e0a64c3d858ca038bd4570465d9",
"filename":"public/logo192.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/public/logo192.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/public/logo192.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/logo192.png?ref=a50d6d76528b1fddae30a25885ceeaecf54da465"
},
{
"sha":"a4e47a6545bc15971f8f63fba70e4013df88a664",
"filename":"public/logo512.png",
"status":"added",
"additions":0,
"deletions":0,
"changes":0,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/public/logo512.png",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/public/logo512.png",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/logo512.png?ref=a50d6d76528b1fddae30a25885ceeaecf54da465"
},
{
"sha":"080d6c77ac21bb2ef88a6992b2b73ad93daaca92",
"filename":"public/manifest.json",
"status":"added",
"additions":25,
"deletions":0,
"changes":25,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/public/manifest.json",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/public/manifest.json",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/manifest.json?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,25 @@\n+{\n+  \"short_name\": \"React App\",\n+  \"name\": \"Create React App Sample\",\n+  \"icons\": [\n+    {\n+      \"src\": \"favicon.ico\",\n+      \"sizes\": \"64x64 32x32 24x24 16x16\",\n+      \"type\": \"image/x-icon\"\n+    },\n+    {\n+      \"src\": \"logo192.png\",\n+      \"type\": \"image/png\",\n+      \"sizes\": \"192x192\"\n+    },\n+    {\n+      \"src\": \"logo512.png\",\n+      \"type\": \"image/png\",\n+      \"sizes\": \"512x512\"\n+    }\n+  ],\n+  \"start_url\": \".\",\n+  \"display\": \"standalone\",\n+  \"theme_color\": \"#000000\",\n+  \"background_color\": \"#ffffff\"\n+}"
},
{
"sha":"e9e57dc4d41b9b46e05112e9f45b7ea6ac0ba15e",
"filename":"public/robots.txt",
"status":"added",
"additions":3,
"deletions":0,
"changes":3,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/public/robots.txt",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/public/robots.txt",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/public/robots.txt?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,3 @@\n+# https://www.robotstxt.org/robotstxt.html\n+User-agent: *\n+Disallow:"
},
{
"sha":"74b5e053450a48a6bdb4d71aad648e7af821975c",
"filename":"src/App.css",
"status":"added",
"additions":38,
"deletions":0,
"changes":38,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/src/App.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/src/App.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/App.css?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,38 @@\n+.App {\n+  text-align: center;\n+}\n+\n+.App-logo {\n+  height: 40vmin;\n+  pointer-events: none;\n+}\n+\n+@media (prefers-reduced-motion: no-preference) {\n+  .App-logo {\n+    animation: App-logo-spin infinite 20s linear;\n+  }\n+}\n+\n+.App-header {\n+  background-color: #282c34;\n+  min-height: 100vh;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  justify-content: center;\n+  font-size: calc(10px + 2vmin);\n+  color: white;\n+}\n+\n+.App-link {\n+  color: #61dafb;\n+}\n+\n+@keyframes App-logo-spin {\n+  from {\n+    transform: rotate(0deg);\n+  }\n+  to {\n+    transform: rotate(360deg);\n+  }\n+}"
},
{
"sha":"37845757234ccb68531c10cf7a2ffc589c47e342",
"filename":"src/App.js",
"status":"added",
"additions":25,
"deletions":0,
"changes":25,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/src/App.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/src/App.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/App.js?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,25 @@\n+import logo from './logo.svg';\n+import './App.css';\n+\n+function App() {\n+  return (\n+    <div className=\"App\">\n+      <header className=\"App-header\">\n+        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n+        <p>\n+          Edit <code>src/App.js</code> and save to reload.\n+        </p>\n+        <a\n+          className=\"App-link\"\n+          href=\"https://reactjs.org\"\n+          target=\"_blank\"\n+          rel=\"noopener noreferrer\"\n+        >\n+          Learn React\n+        </a>\n+      </header>\n+    </div>\n+  );\n+}\n+\n+export default App;"
},
{
"sha":"1f03afeece5ac28064fa3c73a29215037465f789",
"filename":"src/App.test.js",
"status":"added",
"additions":8,
"deletions":0,
"changes":8,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/src/App.test.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/src/App.test.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/App.test.js?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,8 @@\n+import { render, screen } from '@testing-library/react';\n+import App from './App';\n+\n+test('renders learn react link', () => {\n+  render(<App />);\n+  const linkElement = screen.getByText(/learn react/i);\n+  expect(linkElement).toBeInTheDocument();\n+});"
},
{
"sha":"ec2585e8c0bb8188184ed1e0703c4c8f2a8419b0",
"filename":"src/index.css",
"status":"added",
"additions":13,
"deletions":0,
"changes":13,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/src/index.css",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/src/index.css",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/index.css?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,13 @@\n+body {\n+  margin: 0;\n+  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n+    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n+    sans-serif;\n+  -webkit-font-smoothing: antialiased;\n+  -moz-osx-font-smoothing: grayscale;\n+}\n+\n+code {\n+  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n+    monospace;\n+}"
},
{
"sha":"ef2edf8ea3fc42258464231e29140c8723458c1e",
"filename":"src/index.js",
"status":"added",
"additions":17,
"deletions":0,
"changes":17,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/src/index.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/src/index.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/index.js?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,17 @@\n+import React from 'react';\n+import ReactDOM from 'react-dom';\n+import './index.css';\n+import App from './App';\n+import reportWebVitals from './reportWebVitals';\n+\n+ReactDOM.render(\n+  <React.StrictMode>\n+    <App />\n+  </React.StrictMode>,\n+  document.getElementById('root')\n+);\n+\n+// If you want to start measuring performance in your app, pass a function\n+// to log results (for example: reportWebVitals(console.log))\n+// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n+reportWebVitals();"
},
{
"sha":"9dfc1c058cebbef8b891c5062be6f31033d7d186",
"filename":"src/logo.svg",
"status":"added",
"additions":1,
"deletions":0,
"changes":1,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/src/logo.svg",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/src/logo.svg",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/logo.svg?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\"><g fill=\"#61DAFB\"><path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/><circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/><path d=\"M520.5 78.1z\"/></g></svg>\n\\ No newline at end of file"
},
{
"sha":"5253d3ad9e6be6690549cb255f5952337b02401d",
"filename":"src/reportWebVitals.js",
"status":"added",
"additions":13,
"deletions":0,
"changes":13,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/src/reportWebVitals.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/src/reportWebVitals.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/reportWebVitals.js?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,13 @@\n+const reportWebVitals = onPerfEntry => {\n+  if (onPerfEntry && onPerfEntry instanceof Function) {\n+    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n+      getCLS(onPerfEntry);\n+      getFID(onPerfEntry);\n+      getFCP(onPerfEntry);\n+      getLCP(onPerfEntry);\n+      getTTFB(onPerfEntry);\n+    });\n+  }\n+};\n+\n+export default reportWebVitals;"
},
{
"sha":"8f2609b7b3e0e3897ab3bcaad13caf6876e48699",
"filename":"src/setupTests.js",
"status":"added",
"additions":5,
"deletions":0,
"changes":5,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/src/setupTests.js",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/src/setupTests.js",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/src/setupTests.js?ref=a50d6d76528b1fddae30a25885ceeaecf54da465",
"patch":"@@ -0,0 +1,5 @@\n+// jest-dom adds custom jest matchers for asserting on DOM nodes.\n+// allows you to do things like:\n+// expect(element).toHaveTextContent(/react/i)\n+// learn more: https://github.com/testing-library/jest-dom\n+import '@testing-library/jest-dom';"
},
{
"sha":"c98a090c0f4f927127017fea9b51720a68fe4d05",
"filename":"yarn.lock",
"status":"added",
"additions":11398,
"deletions":0,
"changes":11398,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a50d6d76528b1fddae30a25885ceeaecf54da465/yarn.lock",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a50d6d76528b1fddae30a25885ceeaecf54da465/yarn.lock",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/yarn.lock?ref=a50d6d76528b1fddae30a25885ceeaecf54da465"
}
]
},
{
"commit_sha":"a23190560cec5301e6d70fbd25eeecf1e4a1a1ff",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OmEyMzE5MDU2MGNlYzUzMDFlNmQ3MGZiZDI1ZWVlY2YxZTRhMWExZmY=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/a23190560cec5301e6d70fbd25eeecf1e4a1a1ff",
"commit_date":"2021-03-02T01:10:15Z",
"files":[
{
"sha":"e4f9fd48f38c11d0c5acf1989a390a6234d5eea0",
"filename":".gitignore",
"status":"added",
"additions":21,
"deletions":0,
"changes":21,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/a23190560cec5301e6d70fbd25eeecf1e4a1a1ff/.gitignore",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/a23190560cec5301e6d70fbd25eeecf1e4a1a1ff/.gitignore",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/.gitignore?ref=a23190560cec5301e6d70fbd25eeecf1e4a1a1ff",
"patch":"@@ -0,0 +1,21 @@\n+# Emacs backup files\n+*~\n+*#\n+.#*\n+# Vim file artifacts\n+.*.sw*\n+# installed platform-specific binaries\n+/bin\n+/config\n+.DS_Store\n+.project\n+# omit Go vendor directories\n+vendor/\n+.vscode\n+.gradle\n+.idea\n+# Dependency directories\n+node_modules/\n+# Ignore Gradle build output directory\n+build\n+package-lock.json"
}
]
},
{
"commit_sha":"3b323ad308083498ac63990d1274fd85e7049b9c",
"commit_node_id":"MDY6Q29tbWl0MzUzNDYwNjg2OjNiMzIzYWQzMDgwODM0OThhYzYzOTkwZDEyNzRmZDg1ZTcwNDliOWM=",
"commit_html_url":"https://github.com/TempleOkosun/EVChargerReg/commit/3b323ad308083498ac63990d1274fd85e7049b9c",
"commit_date":"2021-03-02T01:09:02Z",
"files":[
{
"sha":"7dabecc1a5e23c53d84522348cc4ec69f5cb5415",
"filename":"LICENSE",
"status":"added",
"additions":21,
"deletions":0,
"changes":21,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/3b323ad308083498ac63990d1274fd85e7049b9c/LICENSE",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/3b323ad308083498ac63990d1274fd85e7049b9c/LICENSE",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/LICENSE?ref=3b323ad308083498ac63990d1274fd85e7049b9c",
"patch":"@@ -0,0 +1,21 @@\n+MIT License\n+\n+Copyright (c) 2021 TRung [Rocky] N.G.O\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE."
},
{
"sha":"b7fcaf82d7076abb2575ed7616c5ef1cb7f7fbce",
"filename":"README.md",
"status":"added",
"additions":2,
"deletions":0,
"changes":2,
"blob_url":"https://github.com/TempleOkosun/EVChargerReg/blob/3b323ad308083498ac63990d1274fd85e7049b9c/README.md",
"raw_url":"https://github.com/TempleOkosun/EVChargerReg/raw/3b323ad308083498ac63990d1274fd85e7049b9c/README.md",
"contents_url":"https://api.github.com/repos/TempleOkosun/EVChargerReg/contents/README.md?ref=3b323ad308083498ac63990d1274fd85e7049b9c",
"patch":"@@ -0,0 +1,2 @@\n+# EVChargerReg\n+the fully prototyped permissioned blockchain based on the Hyperledger Fabric to register devices and controllers for electric vehicles "
}
]
}
]