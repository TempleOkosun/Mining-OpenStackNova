import os

import requests
from github import Github
from datetime import datetime
from dateutil.relativedelta import relativedelta

from dotenv import load_dotenv

load_dotenv()

# XXX: Specify your own access token here
token = os.environ.get("ACCESS_TOKEN")
username = os.environ.get("GITHUB_USERNAME")

client = Github(token, per_page=100)

print(client.get_repo("openstack/nova").full_name)
print(client.get_repo("openstack/nova").id)
print(client.get_repo("openstack/nova").description)
print(client.get_repo("openstack/nova").url)

# Subtract 20 months from current date
n = 6
current_date = datetime.today()
past_date = current_date - relativedelta(months=n)

print(current_date)
print(past_date)

print(client.get_repo("openstack/nova").get_commits(since=past_date, until=current_date).totalCount)
commits = client.get_repo("openstack/nova").get_commits(since=past_date, until=current_date)
commit = client.get_repo("openstack/nova").get_commit("79ec4e2938615a7524fd4c7c05cddeee8256f4a3")
# x = 1
# for commit in commits:
#     print("Commit " + str(x) + " : " + commit.sha)
#     x = x + 1
#     client.get_repo("openstack/nova").get_commit(commit.sha)


print(commit.author)
print(commit.url)
print(commit.files)
print(type(commit.files))
print(len(commit.files))
print(commit.stats.total)
print(commit.stats.additions)
print(commit.stats.deletions)

# PyGithub generally provides a lazy iterator we need to exhaust the lazy iterator with a list comprehension
stargazers = [s.sha for s in commits]

# head = {'Authorization': 'token {}'.format(token)}
head = {
    'Content-Type': 'application/json',
    'Authorization': 'Bearer {}'.format(token),
    'User-Agent': username  # The API recommends this
}

r = requests.get('https://api.github.com/repos/openstack/nova/commits/962eda94d52321c3237da870c3d0455c6f0e851b',
                 headers=head)
print(r.status_code)
