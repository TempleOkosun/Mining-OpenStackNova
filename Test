import os
from datetime import datetime

import requests
from dateutil.relativedelta import relativedelta
from dotenv import load_dotenv
from github import Github

load_dotenv()

# XXX: Specify your own access token here
token = os.environ.get("ACCESS_TOKEN")
username = os.environ.get("GITHUB_USERNAME")


def extract_commits(repo_name: str, no_of_months: int) -> list:
    # Authentication and connection to GitHub API
    client = Github(token, per_page=100)

    # Retrieve data from 6 months ago i.e. subtract 6 months from current date
    period = no_of_months
    current_date = datetime.today()
    past_date = current_date - relativedelta(months=period)

    commits = client.get_repo(repo_name).get_commits(since=past_date, until=current_date)

    # PyGithub generally provides a lazy iterator we need to exhaust the lazy iterator with a list comprehension
    result = [commit.sha for commit in commits]
    return result


# head = {'Authorization': 'token {}'.format(token)}
head = {
    'Content-Type': 'application/json',
    'Authorization': 'Bearer {}'.format(token),
    'User-Agent': username  # The API recommends this
}

r = requests.get('https://api.github.com/repos/openstack/nova/commits/962eda94d52321c3237da870c3d0455c6f0e851b',
                 headers=head)
print(r.status_code)
